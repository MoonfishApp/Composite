extensions:
- keyString: "scm"
- keyString: "ss"
filenames: []
interpreters:
- keyString: "tclsh"
metadata:
  author: "1024jp"
  distributionURL: "https://coteditor.com"
  version: "1.1.1"
  description: "support R5RS and R6RS"
  license: "Same as CotEditor"
  lastModified: "2015-12-25"
completions: []
outlineMenu:
- beginString: "^([\\t ]*)\\(define-library[[:space:]\\(\\[]+(\\S+)"
  keyString: "$1library: $2"
  description: "library"
  bold: true
- beginString: "^([\\t ]*)\\(define-record-type[[:space:]\\(\\[]+(\\S+)"
  keyString: "$1record type: $2"
  description: "record type"
- beginString: "^([\\t ]*)\\(define-syntax[[:space:]\\(\\[]+(\\S+)"
  keyString: "$1syntax: $2"
  description: "syntax"
  italic: true
- beginString: "^([\\t ]*)\\(define[[:space:]\\(\\[]+(\\S+)"
  keyString: "$1$2"
  description: "general define"
commands:
- beginString: "*"
- beginString: "+"
- beginString: "-"
- beginString: "/"
- beginString: "<"
- beginString: "<="
- beginString: "="
- beginString: ">"
- beginString: ">="
- beginString: "abs"
- beginString: "acos"
- beginString: "angle"
- beginString: "append"
- beginString: "apply"
- beginString: "asign"
- beginString: "assoc"
- beginString: "assor"
- beginString: "assp"
- beginString: "assq"
- beginString: "assv"
- beginString: "atan"
- beginString: "binary-port?"
- beginString: "boolean=?"
- beginString: "boolean?"
- beginString: "bytevector"
- beginString: "bytevector-append"
- beginString: "bytevector-copy"
- beginString: "bytevector-copy!"
- beginString: "bytevector-length"
- beginString: "bytevector-u8-ref"
- beginString: "bytevector-u8-set!"
- beginString: "bytevector?"
- beginString: "caaar"
- beginString: "caadr"
- beginString: "caar"
- beginString: "cadar"
- beginString: "caddr"
- beginString: "cadr"
- beginString: "call-with-current-continuation"
- beginString: "call-with-input-file"
- beginString: "call-with-output-file"
- beginString: "call-with-values"
- beginString: "call/cc"
- beginString: "car"
- beginString: "cdar"
- beginString: "cddaar"
- beginString: "cddadr"
- beginString: "cdddar"
- beginString: "cddddr"
- beginString: "cddr"
- beginString: "cdr"
- beginString: "ceiling"
- beginString: "char->integer"
- beginString: "char-alphabetic?"
- beginString: "char-ci<=?"
- beginString: "char-ci=?"
- beginString: "char-ci>=?"
- beginString: "char-ci>?"
- beginString: "char-downcase"
- beginString: "char-lower-case?"
- beginString: "char-numeric?"
- beginString: "char-ready?"
- beginString: "char-upcase"
- beginString: "char-upper-case?"
- beginString: "char-whitespace?"
- beginString: "char<=?"
- beginString: "char<?"
- beginString: "char=?"
- beginString: "char>=?"
- beginString: "char>?"
- beginString: "char?"
- beginString: "close-input-file"
- beginString: "close-output-file"
- beginString: "complex?"
- beginString: "cons"
- beginString: "cons*"
- beginString: "cos"
- beginString: "current-input-port"
- beginString: "current-output-port"
- beginString: "denominator"
- beginString: "digit-value"
- beginString: "display"
- beginString: "dynamic-wind"
- beginString: "emergency-exit"
- beginString: "environment"
- beginString: "eof-object"
- beginString: "eof-object?"
- beginString: "eq?"
- beginString: "equal-hash"
- beginString: "equal?"
- beginString: "eqv?"
- beginString: "error"
- beginString: "error-object-irritants"
- beginString: "error-object-message"
- beginString: "error-object?"
- beginString: "eval"
- beginString: "even?"
- beginString: "exact"
- beginString: "exact->inexact"
- beginString: "exact-integer-sqrt"
- beginString: "exact-integer?"
- beginString: "exact?"
- beginString: "exists"
- beginString: "exit"
- beginString: "exp"
- beginString: "expt"
- beginString: "features"
- beginString: "file-error?"
- beginString: "file-exists?"
- beginString: "filter"
- beginString: "find"
- beginString: "finite?"
- beginString: "floor"
- beginString: "floor-quotient"
- beginString: "floor-remainder"
- beginString: "floor/"
- beginString: "flush-output-port"
- beginString: "fold-left"
- beginString: "fold-right"
- beginString: "for-all"
- beginString: "for-each"
- beginString: "force"
- beginString: "gcd"
- beginString: "get-environment-variable"
- beginString: "get-environment-variables"
- beginString: "get-output-bytevector"
- beginString: "get-output-string"
- beginString: "hashtable-clear!"
- beginString: "hashtable-contains?"
- beginString: "hashtable-copy"
- beginString: "hashtable-delete!"
- beginString: "hashtable-entries"
- beginString: "hashtable-equivalence-function"
- beginString: "hashtable-hash-function"
- beginString: "hashtable-keys"
- beginString: "hashtable-mutable?"
- beginString: "hashtable-ref"
- beginString: "hashtable-set!"
- beginString: "hashtable-size"
- beginString: "hashtable-update!"
- beginString: "hashtable?"
- beginString: "identifier"
- beginString: "imag-part"
- beginString: "inexact->exact"
- beginString: "inexact?"
- beginString: "infinite?"
- beginString: "input-port-open?"
- beginString: "input-port?"
- beginString: "integer->char"
- beginString: "integer?"
- beginString: "interaction-environment"
- beginString: "jiffiers-per-second"
- beginString: "lcm"
- beginString: "length"
- beginString: "list"
- beginString: "list->string"
- beginString: "list->vector"
- beginString: "list-ref"
- beginString: "list-tail"
- beginString: "list?"
- beginString: "load"
- beginString: "log"
- beginString: "magnitude"
- beginString: "make-bytevector"
- beginString: "make-eq-hashtable"
- beginString: "make-eqv-hashtable"
- beginString: "make-hashtable"
- beginString: "make-list"
- beginString: "make-parameter"
- beginString: "make-polar"
- beginString: "make-promise"
- beginString: "make-rectangular"
- beginString: "make-string"
- beginString: "make-vector"
- beginString: "map"
- beginString: "max"
- beginString: "member"
- beginString: "memp"
- beginString: "memq"
- beginString: "memv"
- beginString: "min"
- beginString: "modulo"
- beginString: "nan?"
- beginString: "negative?"
- beginString: "newline"
- beginString: "not"
- beginString: "null-environment"
- beginString: "null?"
- beginString: "number->string"
- beginString: "number?"
- beginString: "numerator"
- beginString: "odd?"
- beginString: "only"
- beginString: "open-binary-input-file"
- beginString: "open-binary-output-file"
- beginString: "open-input-bytevector"
- beginString: "open-input-file"
- beginString: "open-input-string"
- beginString: "open-output-bytevector"
- beginString: "open-output-file"
- beginString: "open-output-string"
- beginString: "output-port-open?"
- beginString: "output-port?"
- beginString: "pair?"
- beginString: "pare?"
- beginString: "partition"
- beginString: "peek-char"
- beginString: "peek-u8"
- beginString: "port?"
- beginString: "positive?"
- beginString: "procedure?"
- beginString: "promise?"
- beginString: "quotient"
- beginString: "raise"
- beginString: "rational?"
- beginString: "rationalize"
- beginString: "read"
- beginString: "read-bytevector"
- beginString: "read-bytevector?"
- beginString: "read-char"
- beginString: "read-error?"
- beginString: "read-line"
- beginString: "read-string"
- beginString: "read-u8"
- beginString: "real-part"
- beginString: "real?"
- beginString: "remainder"
- beginString: "remove"
- beginString: "remp"
- beginString: "remq"
- beginString: "remv"
- beginString: "reverse"
- beginString: "round"
- beginString: "scheme-report-environment"
- beginString: "set-car!"
- beginString: "set-cdr!"
- beginString: "set-kar!"
- beginString: "setcar"
- beginString: "sin"
- beginString: "sqrt"
- beginString: "string"
- beginString: "string->list"
- beginString: "string->number"
- beginString: "string->symbol"
- beginString: "string->utf8"
- beginString: "string->vector"
- beginString: "string-append"
- beginString: "string-ci-hash"
- beginString: "string-ci<=?"
- beginString: "string-ci<?"
- beginString: "string-ci=?"
- beginString: "string-ci>=?"
- beginString: "string-ci>?"
- beginString: "string-copy"
- beginString: "string-copy!"
- beginString: "string-downcase"
- beginString: "string-fill!"
- beginString: "string-foldcase"
- beginString: "string-for-each"
- beginString: "string-hash"
- beginString: "string-length"
- beginString: "string-map"
- beginString: "string-ref"
- beginString: "string-set!"
- beginString: "string<=?"
- beginString: "string<?"
- beginString: "string=?"
- beginString: "string>=?"
- beginString: "string>?"
- beginString: "string?"
- beginString: "substring"
- beginString: "symbol->string"
- beginString: "symbol-hash"
- beginString: "symbol=?"
- beginString: "symbol?"
- beginString: "tan"
- beginString: "textual-port?"
- beginString: "transcript-off"
- beginString: "transcript-on"
- beginString: "truncate"
- beginString: "truncate-quotient"
- beginString: "truncate-remainder"
- beginString: "truncate/"
- beginString: "u8-ready"
- beginString: "utf8->string"
- beginString: "values"
- beginString: "vector"
- beginString: "vector->list"
- beginString: "vector->string"
- beginString: "vector-append"
- beginString: "vector-copy"
- beginString: "vector-copy!"
- beginString: "vector-fill!"
- beginString: "vector-for-each"
- beginString: "vector-length"
- beginString: "vector-map"
- beginString: "vector-ref"
- beginString: "vector-set!"
- beginString: "vector?"
- beginString: "with-exception-handler"
- beginString: "with-input-from-file"
- beginString: "with-output-to-file"
- beginString: "write"
- beginString: "write-bytevector"
- beginString: "write-char"
- beginString: "write-shared"
- beginString: "write-simple"
- beginString: "write-string"
- beginString: "write-u8"
- beginString: "zero?"
attributes: []
characters:
- beginString: "#\\"
- beginString: "#\\\\.(?=[[:space:]()\\[\\]\";#])"
  regularExpression: true
- beginString: "#\\\\x[0-9a-fA-F]+\\b"
  regularExpression: true
- beginString: "#\\alarm"
- beginString: "#\\backspace"
- beginString: "#\\delete"
- beginString: "#\\esc"
- beginString: "#\\linefeed"
- beginString: "#\\newline"
- beginString: "#\\nul"
- beginString: "#\\page"
- beginString: "#\\return"
- beginString: "#\\space"
- beginString: "#\\tab"
- beginString: "#\\vtab"
comments:
- beginString: "#;("
  endString: ")"
- beginString: "#;["
  endString: "]"
values:
- beginString: "#("
  endString: ")"
- beginString: "#f"
  ignoreCase: true
- beginString: "#t"
  ignoreCase: true
- beginString: "#u8("
  endString: ")"
- beginString: "bsd"
- beginString: "clr"
- beginString: "darwin"
- beginString: "exact-closed"
- beginString: "exact-complex"
- beginString: "freebsd"
- beginString: "full-unicode"
- beginString: "gnu-linux"
- beginString: "i386"
- beginString: "ieee-float"
- beginString: "ilp32"
- beginString: "ilp64"
- beginString: "jvm"
- beginString: "llvm"
- beginString: "lp64"
- beginString: "pcc"
- beginString: "r5rs"
- beginString: "r6rs"
- beginString: "r7rs"
- beginString: "ratios"
- beginString: "solaris"
- beginString: "sparc"
- beginString: "unix"
- beginString: "windows"
- beginString: "x86-64"
types:
- beginString: "#!fold-case"
- beginString: "#!no-fold-case"
- beginString: "#\\!\\S+"
  regularExpression: true
numbers:
- beginString: "#[0-9a-f]+\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b(#x(#[ie])?|(#[ie])?#x)([-+]?[0-9a-f][-+0-9a-f/|@.iesfdl]*)\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b((#[bod])?(#[ie])?|(#[ie])?(#[bod])?)([-+]?[0-9][-+0-9/|@.iesfdl]*)\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b[+-]?(inf|nan)\\.0\\b"
  regularExpression: true
- beginString: "\\b\\.[0-9]+\\b"
  regularExpression: true
strings:
- beginString: "\""
  endString: "\""
keywords:
- beginString: "=>"
- beginString: "and"
- beginString: "begin"
- beginString: "case"
- beginString: "case-lambda"
- beginString: "cond"
- beginString: "cond-expand"
- beginString: "define"
- beginString: "define-library"
- beginString: "define-record-type"
- beginString: "define-syntax"
- beginString: "delay"
- beginString: "delay-force"
- beginString: "do"
- beginString: "else"
- beginString: "except"
- beginString: "export"
- beginString: "fields"
- beginString: "force"
- beginString: "guard"
- beginString: "if"
- beginString: "import"
- beginString: "include"
- beginString: "include-ci"
- beginString: "include-library-declarations"
- beginString: "kar"
- beginString: "kdr"
- beginString: "kons"
- beginString: "lambda"
- beginString: "let"
- beginString: "let*"
- beginString: "let-syntax"
- beginString: "letrec"
- beginString: "letrec-syntax"
- beginString: "library"
- beginString: "not"
- beginString: "only"
- beginString: "or"
- beginString: "parameterize"
- beginString: "prefix"
- beginString: "protocol"
- beginString: "quasiquote"
- beginString: "quote"
- beginString: "rename"
- beginString: "set!"
- beginString: "syntax-error"
- beginString: "syntax-rules"
- beginString: "unless"
- beginString: "unquote"
- beginString: "unquote-splicing"
- beginString: "when"
variables: []
commentDelimiters:
  endDelimiter: "|#"
  beginDelimiter: "#|"
  inlineDelimiter: ";"
