extensions:
- keyString: "php"
- keyString: "php3"
- keyString: "php4"
- keyString: "php5"
- keyString: "phps"
- keyString: "phtml"
interpreters:
- keyString: "php"
metadata:
  author: "kaz"
  distributionURL: "https://coteditor.com"
  version: "2.5.1"
  description: "Support PHP4 - PHP5.6.\n\nMaintained by 1024jp since 2013."
  license: "Same as CotEditor"
  lastModified: "2015-12-25"
outlineMenu:
- beginString: "^([\\t ]*)(((?:(?:final|static|public|protected|private)[\\t ]+)+)function)\\s*([^{;]*)(?=[{;])"
  description: "function"
  keyString: "   $3: $4"
- beginString: "^([\\t ]*)(abstract (public|protected|private)[\\t ]+function)\\s*([^{;]*)(?=[{;])"
  description: "abstract function"
  keyString: "   abstract $3: $4"
  italic: true
- beginString: "^([\\t ]*)(function)\\s*([^{]*)(?=\\{)"
  description: "function"
  keyString: "   $3"
- beginString: "^[\\t ]*((?:final[\\t ]+)?class)[\\t ]+(.*)\\{"
  description: "class"
  keyString: "$1: $2"
  bold: true
- beginString: "^[\\t ]*(abstract class)[\\t ]+(.*)\\{"
  description: "abstract class"
  keyString: "$1: $2"
  bold: true
  italic: true
- beginString: "^[\\t ]*(interface)[\\t ]+(.*)\\{"
  description: "interface"
  keyString: "$1: $2"
  italic: true
- beginString: "^[\\t ]*(trait)[\\t ]+(.*)\\{"
  description: "trait"
  keyString: "$1: $2"
  italic: true
completions:
- keyString: "$_COOKIE[]"
- keyString: "$_ENV[]"
- keyString: "$_FILES[]"
- keyString: "$_GET[]"
- keyString: "$_POST[]"
- keyString: "$_REQUEST[]"
- keyString: "$_SERVER['argc']"
- keyString: "$_SERVER['argv']"
- keyString: "$_SERVER['AUTH_TYPE']"
- keyString: "$_SERVER['DOCUMENT_ROOT']"
- keyString: "$_SERVER['GATEWAY_INTERFACE']"
- keyString: "$_SERVER['HTTP_ACCEPT']"
- keyString: "$_SERVER['HTTP_ACCEPT_CHARSET']"
- keyString: "$_SERVER['HTTP_ACCEPT_ENCODING']"
- keyString: "$_SERVER['HTTP_ACCEPT_LANGUAGE']"
- keyString: "$_SERVER['HTTP_CONNECTION']"
- keyString: "$_SERVER['HTTP_HOST']"
- keyString: "$_SERVER['HTTP_REFERER']"
- keyString: "$_SERVER['HTTP_USER_AGENT']"
- keyString: "$_SERVER['PATH_TRANSLATED']"
- keyString: "$_SERVER['PHP_AUTH_PW']"
- keyString: "$_SERVER['PHP_AUTH_USER']"
- keyString: "$_SERVER['PHP_SELF']"
- keyString: "$_SERVER['QUERY_STRING']"
- keyString: "$_SERVER['REMOTE_ADDR']"
- keyString: "$_SERVER['REMOTE_HOST']"
- keyString: "$_SERVER['REMOTE_PORT']"
- keyString: "$_SERVER['REQUEST_METHOD']"
- keyString: "$_SERVER['REQUEST_TIME']"
- keyString: "$_SERVER['REQUEST_URI']"
- keyString: "$_SERVER['SCRIPT_FILENAME']"
- keyString: "$_SERVER['SCRIPT_NAME']"
- keyString: "$_SERVER['SERVER_ADMIN']"
- keyString: "$_SERVER['SERVER_NAME']"
- keyString: "$_SERVER['SERVER_PORT']"
- keyString: "$_SERVER['SERVER_PROTOCOL']"
- keyString: "$_SERVER['SERVER_SIGNATURE']"
- keyString: "$_SERVER['SERVER_SOFTWARE']"
- keyString: "$_SESSION[]"
- keyString: "$GLOBALS[]"
- keyString: "<?php"
- keyString: "?>"
- keyString: "__call()"
- keyString: "__callStatic()"
- keyString: "__CLASS__"
- keyString: "__clone()"
- keyString: "__construct()"
- keyString: "__destruct()"
- keyString: "__debugInfo()"
- keyString: "__DIR__"
- keyString: "__FILE__"
- keyString: "__FUNCTION__"
- keyString: "__get()"
- keyString: "__invoke()"
- keyString: "__isset()"
- keyString: "__LINE__"
- keyString: "__METHOD__"
- keyString: "__NAMESPACE__"
- keyString: "__set()"
- keyString: "__set_state()"
- keyString: "__sleep()"
- keyString: "__toString()"
- keyString: "__unset()"
- keyString: "__wakeup()"
- keyString: "ABDAY_1"
- keyString: "ABDAY_2"
- keyString: "ABDAY_3"
- keyString: "ABDAY_4"
- keyString: "ABDAY_5"
- keyString: "ABDAY_6"
- keyString: "ABDAY_7"
- keyString: "ABMON_1"
- keyString: "ABMON_10"
- keyString: "ABMON_11"
- keyString: "ABMON_12"
- keyString: "ABMON_2"
- keyString: "ABMON_3"
- keyString: "ABMON_4"
- keyString: "ABMON_5"
- keyString: "ABMON_6"
- keyString: "ABMON_7"
- keyString: "ABMON_8"
- keyString: "ABMON_9"
- keyString: "abs(mixed number)"
- keyString: "abstract"
- keyString: "acos(float arg)"
- keyString: "acosh(float arg)"
- keyString: "add_root(string name)"
- keyString: "addcslashes(string str, string charlist)"
- keyString: "addslashes(string str)"
- keyString: "aggregate(object object , string class_name)"
- keyString: "aggregate_info(object object)"
- keyString: "aggregate_info(object object)"
- keyString: "aggregate_methods(object object , string class_name)"
- keyString: "aggregate_methods_by_list(object object , string class_name , array
    methods_list [, bool exclude])"
- keyString: "aggregate_methods_by_regexp(object object , string class_name , string
    regexp [, bool exclude])"
- keyString: "aggregate_properties(object object , string class_name)"
- keyString: "aggregate_properties_by_list(object object , string class_name , array
    properties_list [, bool exclude])"
- keyString: "aggregate_properties_by_regexp(object object , string class_name ,
    string regexp [, bool exclude])"
- keyString: "ALT_DIGITS"
- keyString: "AM_STR"
- keyString: "and"
- keyString: "apache_child_terminate()"
- keyString: "apache_get_modules()"
- keyString: "apache_get_version()"
- keyString: "apache_getenv(string variable [, bool walk_to_top])"
- keyString: "apache_lookup_uri(string filename)"
- keyString: "apache_note(string note_name [, string note_value])"
- keyString: "apache_request_headers()"
- keyString: "apache_response_headers()"
- keyString: "apache_setenv(string variable, string value [, bool walk_to_top])"
- keyString: "append_child_terminate()"
- keyString: "append_sibling()"
- keyString: "arguments"
- keyString: "array([mixed ...])"
- keyString: "array_change_key_case(array input [, int case])"
- keyString: "array_chunk(array input, int size [, bool preserve_keys])"
- keyString: "array_combine(array keys , array values)"
- keyString: "array_combine(array keys, array values)"
- keyString: "array_count_values(array input)"
- keyString: "array_diff(array array1, array array2 [, array ...])"
- keyString: "array_diff_assoc(array array1, array array2 [, array ...])"
- keyString: "array_diff_key(array array1, array array2 [, array ...])"
- keyString: "array_diff_uassoc(array array1 , array array2 [, array ...], callable
    key_compare_func)"
- keyString: "array_diff_uassoc(array array1, array array2 [, array ..., callback
    key_compare_func])"
- keyString: "array_diff_ukey(array array1, array array2 [, array ..., callback
    key_compare_func])"
- keyString: "array_fill(int start_index, int num, mixed value)"
- keyString: "array_fill_keys(array keys , mixed value)"
- keyString: "array_filter(array input [, callback callback])"
- keyString: "array_flip(array trans)"
- keyString: "array_intersect(array array1, array array2 [, array ...])"
- keyString: "array_intersect_assoc(array array1, array array2 [, array ...])"
- keyString: "array_intersect_key(array array1, array array2 [, array ...])"
- keyString: "array_intersect_uassoc(array array1, array array2 [, array ..., callback
    key_compare_func])"
- keyString: "array_intersect_ukey(array array1, array array2 [, array ..., callback
    key_compare_func])"
- keyString: "array_key_exists(mixed key, array search)"
- keyString: "array_keys(array input [, mixed search_value [, bool strict]])"
- keyString: "array_map(callback callback, array arr1 [, array ...])"
- keyString: "array_merge(array array1 [, array array2 [, array ...]])"
- keyString: "array_merge_recursive(array array1, array array2 [, array ...])"
- keyString: "array_multisort(array ar1 [, mixed arg [, mixed ... [, array ...]]])"
- keyString: "array_pad(array input, int pad_size, mixed pad_value)"
- keyString: "array_pop(array &array)"
- keyString: "array_push(array &array, mixed var [, mixed ...])"
- keyString: "array_rand(array input [, int num_req])"
- keyString: "array_reduce(array input, callback function [, int initial])"
- keyString: "array_replace(array array , array array1 [, array ...])"
- keyString: "array_replace_recursive(array array , array array1 [, array ...])"
- keyString: "array_reverse(array array [, bool preserve_keys])"
- keyString: "array_search(mixed needle, array haystack [, bool strict])"
- keyString: "array_shift(array &array)"
- keyString: "array_slice(array array, int offset [, int length [, bool preserve_keys]])"
- keyString: "array_splice(array &input, int offset [, int length [, array replacement]])"
- keyString: "array_sum(number arr)"
- keyString: "array_udiff(array array1 , array array2 [, array  ...], callable data_compare_func)"
- keyString: "array_udiff_assoc(array array1 , array array2 [, array  ...], callable
    data_compare_func)"
- keyString: "array_udiff_uassoc(array array1 , array array2 [, array  ...], callable
    data_compare_func , callable key_compare_func)"
- keyString: "array_uintersect(array array1 , array array2 [, array  ...], callable
    data_compare_func)"
- keyString: "array_uintersect_assoc (array array1 , array array2 [, array  ...],
    callable data_compare_func)"
- keyString: "array_uintersect_assoc(array array1, array array2 [, array ..., callback
    data_compare_func] "
- keyString: "array_uintersect_uassoc(array array1 , array array2 [, array  ...],
    callable data_compare_func , callable key_compare_func)"
- keyString: "array_unique(array array)"
- keyString: "array_unshift(array &array [, mixed ...])"
- keyString: "array_values(array input)"
- keyString: "array_walk(array &array, callback funcname [, mixed userdata])"
- keyString: "array_walk_recursive(array &input, callback funcname [, mixed userdata])"
- keyString: "arsort(array &array [, int sort_flags])"
- keyString: "ascii2ebcdic(string ascii_str)"
- keyString: "asin(float arg)"
- keyString: "asinh(float arg)"
- keyString: "asort(array &array [, int sort_flags])"
- keyString: "assert(mixed assertion)"
- keyString: "ASSERT_ACTIVE"
- keyString: "ASSERT_BAIL"
- keyString: "ASSERT_CALLBACK"
- keyString: "assert_options()"
- keyString: "ASSERT_QUIET_EVAL"
- keyString: "ASSERT_WARNING"
- keyString: "atan(float arg)"
- keyString: "atan2(float y, float x)"
- keyString: "atanh(float arg)"
- keyString: "base64_decode(string encoded_data)"
- keyString: "base64_encode(string data)"
- keyString: "base_convert(string number, int frombase, int tobase)"
- keyString: "basename(string path [, string suffix])"
- keyString: "bcadd(string left operand, string right operand, int [scale])"
- keyString: "bccomp(string left operand, string right operand, int [scale])"
- keyString: "bcdiv(string left operand, string right operand, int [scale])"
- keyString: "bcmod(string left operand, string modulus)"
- keyString: "bcmul(string left operand, string right operand, int [scale])"
- keyString: "bcpow(string x, string y, int [scale])"
- keyString: "bcpowmod(string x, string y, string modulus [, int scale])"
- keyString: "bcscale(int scale)"
- keyString: "bcsqrt(string operand, int [scale])"
- keyString: "bcsub(string left operand, string right operand, int [scale])"
- keyString: "bin2hex(string str)"
- keyString: "bind_textdomain_codeset(string domain, string codeset)"
- keyString: "bindec(string binary_string)"
- keyString: "bindtextdomain(string domain, string directory)"
- keyString: "boolval(mixed var)"
- keyString: "break"
- keyString: "BUS_ADRALN"
- keyString: "BUS_ADRERR"
- keyString: "BUS_OBJERR"
- keyString: "bzclose(int bz)"
- keyString: "bzcompress(string source [, int blocksize [, int workfactor]])"
- keyString: "bzdecompress(string source [, int small])"
- keyString: "bzerrno(int bz)"
- keyString: "bzerror(int bz)"
- keyString: "bzerrstr(int bz)"
- keyString: "bzflush(int bz)"
- keyString: "bzopen(string filename, string mode)\n"
- keyString: "bzread(int bz [, int length])"
- keyString: "bzwrite(int bz, string data [, int length])"
- keyString: "cal_days_in_month(int calendar, int month, int year)"
- keyString: "cal_from_jd(int jd, int calendar)"
- keyString: "cal_info(int calendar)"
- keyString: "cal_to_jd(int calendar, int month, int day, int year)"
- keyString: "call_user_func(callback function [, mixed parameter [, mixed ...]])"
- keyString: "call_user_func_array(callback function [, array param_arr])"
- keyString: "call_user_method(string method_name, object &obj [, mixed parameter
    [, mixed ...]])"
- keyString: "call_user_method_array(string method_name, object &obj, array paramarr)"
- keyString: "case"
- keyString: "CASE_LOWER"
- keyString: "CASE_UPPER"
- keyString: "catch"
- keyString: "ceil(float value)"
- keyString: "CHAR_MAX"
- keyString: "chdir(string directory)"
- keyString: "checkdate(int month, int day, int year)"
- keyString: "checkdnsrr(string host [, string type])"
- keyString: "chgrp(string filename, mixed group)"
- keyString: "chmod(string filename, int mode)"
- keyString: "chop(string str [, string charlist])"
- keyString: "chown(string filename, mixed user)"
- keyString: "chr(int ascii)"
- keyString: "chroot(string directory)"
- keyString: "chunk_split(string string [, int chunklen [, string end]])"
- keyString: "class"
- keyString: "class_alias([ string original [, string alias]])"
- keyString: "class_exists(string class_name [, bool autoload])"
- keyString: "class_implements(mixed class [, bool autoload])"
- keyString: "class_parents(mixed class [, bool autoload])"
- keyString: "class_uses(mixed class [, bool autoload])"
- keyString: "class_uses(mixed class [, bool autoload])"
- keyString: "CLD_CONTIUNED"
- keyString: "CLD_DUMPED"
- keyString: "CLD_EXITED"
- keyString: "CLD_KILLED"
- keyString: "CLD_STOPPED"
- keyString: "CLD_TRAPPED"
- keyString: "clearstatcache()"
- keyString: "clone"
- keyString: "clone_node()"
- keyString: "closedir(resource dir_handle)"
- keyString: "closelog()"
- keyString: "CODESET"
- keyString: "com_create_guid()"
- keyString: "com_event_sink(variant comobject , object sinkobject [, mixed sinkinterface])"
- keyString: "com_get_active_object(string progid [, int code_page])"
- keyString: "com_load_typelib(string typelib_name [, bool case_insensitive])"
- keyString: "com_message_pump([ int timeoutms])"
- keyString: "com_print_typeinfo(object comobject [, string dispinterface [, bool
    wantsink]])"
- keyString: "compact(mixed varname [, mixed ...])"
- keyString: "CONNECTION_ABORTED"
- keyString: "connection_aborted()"
- keyString: "CONNECTION_NORMAL"
- keyString: "connection_status()"
- keyString: "CONNECTION_TIMEOUT"
- keyString: "connection_timeout()"
- keyString: "const"
- keyString: "constant(string name)"
- keyString: "continue"
- keyString: "convert_cyr_string(string str, string from, string to)"
- keyString: "convert_uudecode(string data)"
- keyString: "convert_uuencode(string data)"
- keyString: "copy(string source, string dest)"
- keyString: "cos(float arg)"
- keyString: "cosh(float arg)"
- keyString: "count(mixed var [, int mode])"
- keyString: "count_chars(string string, int [mode])"
- keyString: "COUNT_NORMAL"
- keyString: "COUNT_RECURSIVE"
- keyString: "cpdf_add_annotation(int pdf document, float llx, float lly, float
    urx, float ury, string title, string content, int [mode])"
- keyString: "cpdf_add_outline(int pdf document, string text)"
- keyString: "cpdf_arc(int pdf document, float x-coor, float y-coor, float radius,
    float start, float end, int mode)"
- keyString: "cpdf_begin_text(int pdf document)"
- keyString: "cpdf_circle(int pdf document, float x-coor, float y-coor, float radius
    [, int mode])"
- keyString: "cpdf_clip(int pdf document)"
- keyString: "cpdf_close(int pdf document)"
- keyString: "cpdf_closepath(int pdf document)"
- keyString: "cpdf_closepath_fill_stroke(int pdf document)"
- keyString: "cpdf_closepath_stroke(int pdf document)"
- keyString: "cpdf_continue_text(int pdf document, string text)"
- keyString: "cpdf_curveto(int pdf document, float x1, float y1, float x2, float
    y2, float x3, float y3, int mode)"
- keyString: "cpdf_end_text(int pdf document)"
- keyString: "cpdf_fill(int pdf document)"
- keyString: "cpdf_fill_stroke(int pdf document)"
- keyString: "cpdf_finalize(int pdf document)"
- keyString: "cpdf_finalize_page(int pdf document, int page number)"
- keyString: "cpdf_global_set_document_limits(int maxpages, int maxfonts, int maximages,
    int maxannotations, int maxobjects)"
- keyString: "cpdf_import_jpeg(int pdf document, string file name, float x-coor,
    float y-coor, float angle, float width, float height, float x-scale, float y-scale,
    int [mode])"
- keyString: "cpdf_lineto(int pdf document, float x-coor, float y-coor, int mode)"
- keyString: "cpdf_moveto(int pdf document, float x-coor, float y-coor, int mode)"
- keyString: "cpdf_newpath(int pdf document)"
- keyString: "cpdf_open(int compression, string filename)"
- keyString: "cpdf_output_buffer(int pdf document)"
- keyString: "cpdf_page_init(int pdf document, int page number, int orientation,
    float height, float width, float unit)"
- keyString: "cpdf_place_inline_image(int pdf document, int image, float x-coor,
    float y-coor, float angle, float width, float height, int [mode])"
- keyString: "cpdf_rect(int pdf document, float x-coor, float y-coor, float width,
    float height, int mode)"
- keyString: "cpdf_restore(int pdf document)"
- keyString: "cpdf_rlineto(int pdf document, float x-coor, float y-coor, int mode)"
- keyString: "cpdf_rmoveto(int pdf document, float x-coor, float y-coor, int mode)"
- keyString: "cpdf_rotate(int pdf document, float angle)"
- keyString: "cpdf_rotate_text(int pdfdoc, float angle)"
- keyString: "cpdf_save(int pdf document)"
- keyString: "cpdf_save_to_file(int pdf document, string filename)"
- keyString: "cpdf_scale(int pdf document, float x-scale, float y-scale)"
- keyString: "cpdf_set_action_url(int pdfdoc, float xll, float yll, float xur, float
    xur, string url [, int mode])"
- keyString: "cpdf_set_char_spacing(int pdf document, float space)"
- keyString: "cpdf_set_creator(string creator)"
- keyString: "cpdf_set_current_page(int pdf document, int page number)"
- keyString: "cpdf_set_font(int pdf document, string font name, float size, string
    encoding)"
- keyString: "cpdf_set_font_directories(int pdfdoc, string pfmdir, string pfbdir)"
- keyString: "cpdf_set_font_map_file(int pdfdoc, string filename)"
- keyString: "cpdf_set_horiz_scaling(int pdf document, float scale)"
- keyString: "cpdf_set_keywords(string keywords)"
- keyString: "cpdf_set_leading(int pdf document, float distance)"
- keyString: "cpdf_set_page_animation(int pdf document, int transition, float duration)"
- keyString: "cpdf_set_subject(string subject)"
- keyString: "cpdf_set_text_matrix(int pdf document, array matrix)"
- keyString: "cpdf_set_text_pos(int pdf document, float x-coor, float y-coor, int
    mode)"
- keyString: "cpdf_set_text_rendering(int pdf document, int mode)"
- keyString: "cpdf_set_text_rise(int pdf document, float value)"
- keyString: "cpdf_set_title(string title)"
- keyString: "cpdf_set_viewer_preferences(int pdfdoc, array preferences)"
- keyString: "cpdf_set_word_spacing(int pdf document, float space)"
- keyString: "cpdf_setdash(int pdf document, float white, float black)"
- keyString: "cpdf_setflat(int pdf document, float value)"
- keyString: "cpdf_setgray(int pdf document, float gray value)"
- keyString: "cpdf_setgray_fill(int pdf document, float value)"
- keyString: "cpdf_setgray_stroke(int pdf document, float gray value)"
- keyString: "cpdf_setlinecap(int pdf document, int value)"
- keyString: "cpdf_setlinejoin(int pdf document, long value)"
- keyString: "cpdf_setlinewidth(int pdf document, float width)"
- keyString: "cpdf_setmiterlimit(int pdf document, float value)"
- keyString: "cpdf_setrgbcolor(int pdf document, float red value, float green value,
    float blue value)"
- keyString: "cpdf_setrgbcolor_fill(int pdf document, float red value, float green
    value, float blue value)"
- keyString: "cpdf_setrgbcolor_stroke(int pdf document, float red value, float green
    value, float blue value)"
- keyString: "cpdf_show(int pdf document, string text)"
- keyString: "cpdf_show_xy(int pdf document, string text, float x-coor, float y-coor
    [, int mode])"
- keyString: "cpdf_stringwidth(int pdf document, string text)"
- keyString: "cpdf_stroke(int pdf document)"
- keyString: "cpdf_text(int pdf document, string text, float x-coor, float y-coor
    [, int mode [, float orientation [, int alignmode]]])"
- keyString: "cpdf_translate(int pdf document, float x-coor, float y-coor [, int
    mode])"
- keyString: "crack_check(resource dictionary, string password)"
- keyString: "crack_closedict([resource dictionary])"
- keyString: "crack_getlastmessage()"
- keyString: "crack_opendict(string dictionary)"
- keyString: "crc32(string str)"
- keyString: "create_attribute(string name, string value)"
- keyString: "create_cdata_section(string content)"
- keyString: "create_comment(string content)"
- keyString: "create_element(string name)"
- keyString: "create_element_ns(string uri, string name [, string prefix])"
- keyString: "create_entity_reference()"
- keyString: "create_function(string args, string code)"
- keyString: "create_processing_instruction(string target [, string data])"
- keyString: "create_text_node(string content)"
- keyString: "CREDITS_ALL"
- keyString: "CREDITS_DOCS"
- keyString: "CREDITS_FULLPAGE"
- keyString: "CREDITS_GENERAL"
- keyString: "CREDITS_GROUP"
- keyString: "CREDITS_MODULES"
- keyString: "CREDITS_QA"
- keyString: "CREDITS_SAPI"
- keyString: "CRNCYSTR"
- keyString: "CRYP"
- keyString: "crypt(string str, string [salt])"
- keyString: "CRYPT_BLOWFISH"
- keyString: "CRYPT_EXT_DES"
- keyString: "CRYPT_MD5"
- keyString: "CRYPT_SALT_LENGTH"
- keyString: "ctype_alnum(string text)"
- keyString: "ctype_alpha(string c)"
- keyString: "ctype_cntrl(string text)"
- keyString: "ctype_digit(string c)"
- keyString: "ctype_graph(string c)"
- keyString: "ctype_lower(string c)"
- keyString: "ctype_print(string c)"
- keyString: "ctype_punct(string text)"
- keyString: "ctype_space(string c)"
- keyString: "ctype_upper(string text)"
- keyString: "ctype_xdigit(string c)"
- keyString: "curl_close(int ch)"
- keyString: "curl_copy_handle(resource ch)"
- keyString: "curl_errno(resource ch)"
- keyString: "curl_error(int ch)"
- keyString: "curl_exec(int ch)"
- keyString: "curl_getinfo(resource ch [, int opt])"
- keyString: "curl_init(string [url])"
- keyString: "curl_multi_add_handle(resource mh , resource ch)"
- keyString: "curl_multi_close(resource mh)"
- keyString: "curl_multi_exec(resource mh , int &still_running)"
- keyString: "curl_multi_getcontent(resource ch)"
- keyString: "curl_multi_info_read(resource mh [, int &msgs_in_queue])"
- keyString: "curl_multi_init()"
- keyString: "curl_multi_remove_handle(resource mh , resource ch)"
- keyString: "curl_multi_select(resource mh [, float timeout])"
- keyString: "curl_setopt(resource ch, int option, mixed value)"
- keyString: "curl_setopt_array(resource ch , array options)"
- keyString: "curl_version()"
- keyString: "CURLE_FILESIZE_EXCEEDED"
- keyString: "CURLE_FTP_SSL_FAILED"
- keyString: "CURLE_LDAP_INVALID_URL"
- keyString: "CURLFTPAUTH_DEFAULT"
- keyString: "CURLFTPAUTH_SSL"
- keyString: "CURLFTPAUTH_TLS"
- keyString: "CURLFTPSSL_ALL"
- keyString: "CURLFTPSSL_CONTROL"
- keyString: "CURLFTPSSL_NONE"
- keyString: "CURLFTPSSL_TRY"
- keyString: "CURLOPT_CONNECTTIMEOUT_MS"
- keyString: "CURLOPT_FTP_SSL"
- keyString: "CURLOPT_FTPSSLAUTH"
- keyString: "CURLOPT_MAX_RECV_SPEED_LARGE"
- keyString: "CURLOPT_MAX_SEND_SPEED_LARGE"
- keyString: "CURLOPT_PROGRESSFUNCTION"
- keyString: "CURLOPT_TCP_NODELAY"
- keyString: "CURLOPT_TIMEOUT_MS"
- keyString: "CURRENCY_SYMBOL"
- keyString: "current(array &array)"
- keyString: "cybercash_base64_decode(string inbuff)"
- keyString: "cybercash_base64_encode(string inbuff)"
- keyString: "cybercash_decr(string wmk, string sk, string inbuff)"
- keyString: "cybercash_encr(string wmk, string sk, string inbuff)"
- keyString: "cybermut_creerformulairecm(string url_cm, string version, string tpe,
    string price, string ref_command, string text_free, string url_return, string
    url_return_ok, string url_return_err, string language, string code_company, string
    text_button)"
- keyString: "cybermut_creerreponsecm(string sentence)"
- keyString: "cybermut_testmac(string code_mac, string version, string tpe, string
    cdate, string price, string ref_command, string text_free, string code_return)"
- keyString: "cyrus_authenticate(resource connection [, string mechlist [, string
    service [, string user [, int minssf [, int maxssf [, string authname [, string
    password]]]]]]])"
- keyString: "cyrus_bind(resource connection, array callbacks)"
- keyString: "cyrus_close(resource connection)"
- keyString: "cyrus_connect([string host [, string port [, int flags]]])"
- keyString: "cyrus_query(resource connection, string query)"
- keyString: "cyrus_unbind(resource connection, string trigger_name)"
- keyString: "D_FMT"
- keyString: "D_T_FMT"
- keyString: "date(string format [, int timestamp])"
- keyString: "date_add(DateTime object , DateInterval interval)"
- keyString: "date_create()"
- keyString: "date_create_from_format(string format , string time [, DateTimeZone
    timezone])"
- keyString: "date_date_set()"
- keyString: "date_default_timezone_get()"
- keyString: "date_default_timezone_set(string timezone_identifier)"
- keyString: "date_diff(DateTime datetime1 , DateTime datetime2 [, bool absolute
    = false])"
- keyString: "date_format()"
- keyString: "date_get_last_errors()"
- keyString: "date_interval_create_from_date_string()"
- keyString: "date_interval_format()"
- keyString: "date_isodate_set()"
- keyString: "date_modify()"
- keyString: "date_offset_get()"
- keyString: "date_parse(string date)"
- keyString: "date_parse_from_format(string format , string date)"
- keyString: "date_sub(DateTime object , DateInterval interval)"
- keyString: "date_sun_info(int time , float latitude , float longitude)"
- keyString: "date_sunrise(int timestamp [, int format = SUNFUNCS_RET_STRING [,
    float $latitude = ini_get(\"date.default_latitude\") [, float longitude = ini_get(\"date.default_longitude\")
    [, float zenith = ini_get(\"date.sunrise_zenith\") [, float gmt_offset = 0]]]]])"
- keyString: "date_sunset(int timestamp [, int format = SUNFUNCS_RET_STRING [, float
    latitude = ini_get(\"date.default_latitude\") [, float longitude = ini_get(\"date.default_longitude\")
    [, float zenith = ini_get(\"date.sunset_zenith\") [, float gmt_offset = 0]]]]])"
- keyString: "date_time_set()"
- keyString: "date_timestamp_get()"
- keyString: "date_timestamp_set()"
- keyString: "date_timezone_get()"
- keyString: "date_timezone_set()"
- keyString: "DAY_1"
- keyString: "DAY_2"
- keyString: "DAY_3"
- keyString: "DAY_4"
- keyString: "DAY_5"
- keyString: "DAY_6"
- keyString: "DAY_7"
- keyString: "dba_close(resource handle)"
- keyString: "dba_delete(string key, resource handle)"
- keyString: "dba_exists(string key , resource handle)"
- keyString: "dba_fetch(string key , resource handle)"
- keyString: "dba_firstkey(resource handle)"
- keyString: "dba_handlers([ bool full_info])"
- keyString: "dba_insert(string key , string value , resource handle)"
- keyString: "dba_key_split(mixed key)"
- keyString: "dba_list()"
- keyString: "dba_nextkey(resource handle)"
- keyString: "dba_open(string path , string mode [, string handler [, mixed ...]])"
- keyString: "dba_optimize(resource handle)"
- keyString: "dba_popen(string path , string mode [, string handler [, mixed ...]])"
- keyString: "dba_replace(string key , string value , resource handle)"
- keyString: "dba_sync(resource handle)"
- keyString: "dblist()"
- keyString: "dbmclose()"
- keyString: "dbmdelete()"
- keyString: "dbmexists()"
- keyString: "dbmfetch()"
- keyString: "dbmfirstkey()"
- keyString: "dbminsert()"
- keyString: "dbmnextkey()"
- keyString: "dbmopen()"
- keyString: "dbmreplace()"
- keyString: "dbx_close()"
- keyString: "dbx_compare()"
- keyString: "dbx_connect()"
- keyString: "dbx_error()"
- keyString: "dbx_escape_string()"
- keyString: "dbx_fetch_row(object result_identifier)"
- keyString: "dbx_query()"
- keyString: "dbx_sort()"
- keyString: "dcgettext()"
- keyString: "dcngettext()"
- keyString: "deaggregate(object object [, string class_name])"
- keyString: "debug_backtrace()"
- keyString: "debugger_off()"
- keyString: "debugger_on()"
- keyString: "decbin()"
- keyString: "dechex()"
- keyString: "DECIMAL_POINT"
- keyString: "declare"
- keyString: "decoct(int number)"
- keyString: "DEFAULT_INCLUDE_PATH"
- keyString: "define(string name, mixed value, bool [case_insensitive])"
- keyString: "defined(string name)"
- keyString: "deg2rad(double number)"
- keyString: "delete(string file)"
- keyString: "df_rect()"
- keyString: "dgettext()"
- keyString: "die([string status])"
- keyString: "dio_close()"
- keyString: "dio_fcntl()"
- keyString: "dio_open()"
- keyString: "dio_read()"
- keyString: "dio_seek()"
- keyString: "dio_stat()"
- keyString: "dio_tcsetattr()"
- keyString: "dio_truncate()"
- keyString: "dio_write()"
- keyString: "dir(string directory)"
- keyString: "DIRECTORY_SEPARATOR"
- keyString: "dirname()"
- keyString: "disk_free_space()"
- keyString: "disk_total_space()"
- keyString: "diskfreespace()"
- keyString: "dl(string library)"
- keyString: "dns_check_record()"
- keyString: "dns_get_mx()"
- keyString: "dns_get_record()"
- keyString: "do"
- keyString: "doctype()"
- keyString: "document_element()"
- keyString: "dom_import_simplexml(SimpleXMLElement node)"
- keyString: "DomAttribute->name()"
- keyString: "DomAttribute->specified()"
- keyString: "DomAttribute->value()"
- keyString: "DOMDocument"
- keyString: "DomDocument->add_root(string name)"
- keyString: "DomDocument->create_attribute(string name, string value)"
- keyString: "DomDocument->create_cdata_section(string content)"
- keyString: "DomDocument->create_comment(string content)"
- keyString: "DomDocument->create_element(string name)"
- keyString: "DomDocument->create_element_ns(string uri, string name [, string prefix])"
- keyString: "DomDocument->create_entity_reference(string content)"
- keyString: "DomDocument->create_processing_instruction(string content)"
- keyString: "DomDocument->create_text_node(string content)"
- keyString: "DomDocument->doctype()"
- keyString: "DomDocument->document_element()"
- keyString: "DomDocument->dump_file(string filename [, bool compressionmode [,
    bool format]])"
- keyString: "DomDocument->dump_mem([bool format])"
- keyString: "DomDocument->get_element_by_id(string id)"
- keyString: "DomDocument->get_elements_by_tagname(string name)"
- keyString: "DomDocument->html_dump_mem()"
- keyString: "DomDocument->xinclude()"
- keyString: "DomDocumentType->entities()"
- keyString: "DomDocumentType->internal_subset()"
- keyString: "DomDocumentType->name()"
- keyString: "DomDocumentType->notations()"
- keyString: "DomDocumentType->notations()"
- keyString: "DomDocumentType->public_id()"
- keyString: "DomDocumentType->system_id()"
- keyString: "DomElement->get_attribute(string name)"
- keyString: "DomElement->get_attribute_node(object attr)"
- keyString: "DomElement->get_elements_by_tagname(string name)"
- keyString: "DomElement->has_attribute(string name)"
- keyString: "DomElement->remove_attribute(string name)"
- keyString: "DomElement->set_attribute(string name, string value)"
- keyString: "DomElement->set_attribute(string name, string value)"
- keyString: "DomElement->set_attribute_node(object attr)"
- keyString: "DomElement->tagname()"
- keyString: "DomNode->add_namespace(string uri, string prefix)"
- keyString: "DomNode->append_child(object newnode)"
- keyString: "DomNode->append_sibling(object newnode)"
- keyString: "DomNode->attributes()"
- keyString: "DomNode->child_nodes()"
- keyString: "DomNode->clone_node()"
- keyString: "DomNode->dump_node()"
- keyString: "DomNode->first_child()"
- keyString: "DomNode->get_content()"
- keyString: "DomNode->has_attributes()"
- keyString: "DomNode->has_child_nodes()"
- keyString: "DomNode->insert_before(object newnode, object refnode)"
- keyString: "DomNode->is_blank_node()"
- keyString: "DomNode->last_child()"
- keyString: "DomNode->next_sibling()"
- keyString: "DomNode->node_name()"
- keyString: "DomNode->node_name()"
- keyString: "DomNode->node_type()"
- keyString: "DomNode->node_type()"
- keyString: "DomNode->node_value()"
- keyString: "DomNode->node_value()"
- keyString: "DomNode->owner_document()"
- keyString: "DomNode->parent_node()"
- keyString: "DomNode->prefix()"
- keyString: "DomNode->previous_sibling()"
- keyString: "DomNode->remove_child(object oldchild)"
- keyString: "DomNode->replace_child(domelement oldnode, domelement newnode)"
- keyString: "DomNode->replace_node()"
- keyString: "DomNode->set_content()"
- keyString: "DomNode->set_content()"
- keyString: "DomNode->set_name()"
- keyString: "DomNode->set_name()"
- keyString: "DomNode->set_namespace(string uri [, string prefix])"
- keyString: "DomNode->set_namespace(string uri [, string prefix])"
- keyString: "DomNode->unlink_node()"
- keyString: "DomProcessingInstruction->data()"
- keyString: "DomProcessingInstruction->target()"
- keyString: "domxml_new_doc(string version)"
- keyString: "domxml_open_file(string filename)"
- keyString: "domxml_open_mem(string str)"
- keyString: "domxml_version()"
- keyString: "domxml_xmltree(string str)"
- keyString: "domxml_xslt_stylesheet(string xsl_document)"
- keyString: "domxml_xslt_stylesheet_doc(domdocument DocDocumentObject)"
- keyString: "DomXsltStylesheet->process(domdocument DomDocument [, array xslt_parameters
    [, bool param_is_xpath]])"
- keyString: "DomXsltStylesheet->result_dump_file(domdocument DomDocument, string
    filename)"
- keyString: "DomXsltStylesheet->result_dump_mem(domdocument DomDocument)"
- keyString: "doubleval()"
- keyString: "dump_file()"
- keyString: "dump_mem()"
- keyString: "dump_node()"
- keyString: "E_ALL"
- keyString: "E_COMPILE_ERROR"
- keyString: "E_COMPILE_WARNING"
- keyString: "E_CORE_ERROR"
- keyString: "E_CORE_WARNING"
- keyString: "E_DEPRECATED"
- keyString: "E_ERROR"
- keyString: "E_NOTICE"
- keyString: "E_PARSE"
- keyString: "E_STRICT"
- keyString: "E_USER"
- keyString: "E_USER_DEPRECATED"
- keyString: "E_USER_ERROR"
- keyString: "E_USER_NOTICE"
- keyString: "E_USER_WARNING"
- keyString: "E_WARNING"
- keyString: "each()"
- keyString: "easter_date()"
- keyString: "easter_date([ int year])"
- keyString: "easter_days()"
- keyString: "easter_days([ int year [, int method]])"
- keyString: "ebcdic2ascii()"
- keyString: "echo(string arg1 [, string ...])"
- keyString: "else"
- keyString: "elseif"
- keyString: "empty(mixed var)"
- keyString: "end(array &array)"
- keyString: "enddeclare()"
- keyString: "endfor"
- keyString: "endforeach"
- keyString: "endif"
- keyString: "endswitch"
- keyString: "endwhile"
- keyString: "ENT_COMPAT"
- keyString: "ENT_DISALLOWED"
- keyString: "ENT_HTML401"
- keyString: "ENT_HTML5"
- keyString: "ENT_NOQUOTES"
- keyString: "ENT_QUOTES"
- keyString: "ENT_SUBSTITUTE"
- keyString: "ENT_XHTML"
- keyString: "ENT_XML1"
- keyString: "entities()"
- keyString: "ERA"
- keyString: "ERA_D_FMT"
- keyString: "ERA_D_T_FMT"
- keyString: "ERA_T_FMT"
- keyString: "ERA_YEAR"
- keyString: "ereg(string pattern, string string [, array &regs])"
- keyString: "ereg_replace(string pattern, string replacement, string string)"
- keyString: "eregi(string pattern, string string [, array &regs])"
- keyString: "eregi_replace(string pattern, string replacement, string string)"
- keyString: "error_get_last()"
- keyString: "error_log(string message [, int message_type [, string destination
    [, string extra_headers]]])"
- keyString: "error_reporting()"
- keyString: "escapeshellarg()"
- keyString: "escapeshellcmd()"
- keyString: "eval(string code_str)"
- keyString: "exec(string command [, array &output [, int &return_var]])"
- keyString: "exif_imagetype(string filename)"
- keyString: "exif_read_data(string filename [, string sections [, bool arrays [,
    bool thumbnail]]])"
- keyString: "exif_tagname(int index)"
- keyString: "exif_thumbnail(string filename [, int &width [, int &height [, int
    &imagetype]]])"
- keyString: "exit([string status])"
- keyString: "exp(float arg)"
- keyString: "explode(string separator, string string [, int limit])"
- keyString: "expm1(float number)"
- keyString: "extends"
- keyString: "extension_loaded(string name)"
- keyString: "EXTR_IF_EXISTS"
- keyString: "EXTR_OVERWRITE"
- keyString: "EXTR_PREFIX_ALL"
- keyString: "EXTR_PREFIX_IF_EXISTS"
- keyString: "EXTR_PREFIX_INVALID"
- keyString: "EXTR_PREFIX_SAME"
- keyString: "EXTR_SKIP"
- keyString: "extract(array var_array [, int extract_type [, string prefix]])"
- keyString: "ezmlm_hash()"
- keyString: "fclose(resource handle)"
- keyString: "feof(resource handle)"
- keyString: "fflush(resource handle)"
- keyString: "fgetc(resource handle)"
- keyString: "fgetcsv(resource handle, int length [, string delimiter [, string
    enclosure]])"
- keyString: "fgets(resource handle [, int length])"
- keyString: "fgetss(resource handle [, int length [, string allowable_tags]])"
- keyString: "file(string filename [, int use_include_path [, resource context]])"
- keyString: "file(string filename [, int use_include_path [, resource context]])"
- keyString: "file_exists(string filename)"
- keyString: "file_get_contents(string filename [, bool use_include_path [, resource
    context [, int offset]]])"
- keyString: "file_put_contents(string filename , mixed data [, int flags = 0 [,
    resource $context]])"
- keyString: "file_put_contents(string filename, string data [, int flags [, resource
    context]])"
- keyString: "fileatime(string filename)"
- keyString: "filectime(string filename)"
- keyString: "filegroup(string filename)"
- keyString: "fileinode(string filename)"
- keyString: "filemtime(string filename)"
- keyString: "fileowner(string filename)"
- keyString: "fileperms(string filename)"
- keyString: "filesize(string filename)"
- keyString: "filetype(string filename)"
- keyString: "final"
- keyString: "first_child()"
- keyString: "floatval(mixed var)"
- keyString: "flock(resource handle, int operation [, int &wouldblock])"
- keyString: "floor(float value)"
- keyString: "flush()"
- keyString: "fmod(float x, float y)"
- keyString: "fnmatch(string pattern, string string [, int flags])"
- keyString: "fopen(string filename, string mode [, int use_include_path [, resource
    zcontext]])"
- keyString: "for"
- keyString: "foreach"
- keyString: "forward_static_call(callable function [, mixed parameter [, mixed
    ...]])"
- keyString: "forward_static_call_array(callable function , array parameters)"
- keyString: "fpassthru(resource handle)"
- keyString: "FPE_FLTDIV"
- keyString: "FPE_FLTINV"
- keyString: "FPE_FLTOVF"
- keyString: "FPE_FLTRES"
- keyString: "FPE_FLTSUB"
- keyString: "FPE_FLTUND"
- keyString: "FPE_INTDIV"
- keyString: "FPE_INTOVF"
- keyString: "fprintf(resource handle, string format [, mixed args [, mixed ...]])"
- keyString: "fputs(resource handle, string string [, int length])"
- keyString: "FRAC_DIGITS"
- keyString: "fread(resource handle, int length)"
- keyString: "FrenchToJD"
- keyString: "frenchtojd(int month , int day , int year)"
- keyString: "fscanf(resource handle, string format [, string var1])"
- keyString: "fseek(resource handle, int offset [, int whence])"
- keyString: "fsockopen(string target, int port [, int &errno [, string &errstr
    [, float timeout]]])"
- keyString: "fstat(resource handle)"
- keyString: "ftell(resource handle)"
- keyString: "ftok(string pathname, string proj)"
- keyString: "ftp_alloc(resource ftp_stream , int filesize [, string &result])"
- keyString: "ftp_cdup()"
- keyString: "ftp_chdir()"
- keyString: "ftp_chmod()"
- keyString: "ftp_close()"
- keyString: "ftp_connect()"
- keyString: "ftp_delete()"
- keyString: "ftp_exec()"
- keyString: "ftp_fget()"
- keyString: "ftp_fput()"
- keyString: "ftp_get()"
- keyString: "ftp_get_option()"
- keyString: "ftp_login()"
- keyString: "ftp_mdtm()"
- keyString: "ftp_mkdir()"
- keyString: "ftp_nb_continue()"
- keyString: "ftp_nb_fget()"
- keyString: "ftp_nb_fput()"
- keyString: "ftp_nb_get()"
- keyString: "ftp_nb_put()"
- keyString: "ftp_nlist()"
- keyString: "ftp_pasv()"
- keyString: "ftp_put()"
- keyString: "ftp_pwd()"
- keyString: "ftp_quit()"
- keyString: "ftp_raw()"
- keyString: "ftp_rawlist()"
- keyString: "ftp_rename()"
- keyString: "ftp_rmdir()"
- keyString: "ftp_set_option()"
- keyString: "ftp_site()"
- keyString: "ftp_size()"
- keyString: "ftp_ssl_connect()"
- keyString: "ftp_systype()"
- keyString: "ftruncate(resource handle, int size)"
- keyString: "func_get_arg(int arg_num)"
- keyString: "func_get_args()"
- keyString: "func_num_args()"
- keyString: "function"
- keyString: "function_exists(string function_name)"
- keyString: "fwrite(resource handle, string string [, int length])"
- keyString: "gc_collect_cycles()"
- keyString: "gc_disable()"
- keyString: "gc_enable()"
- keyString: "gc_enabled()"
- keyString: "gd_info()"
- keyString: "get_browser(string [user_agent])"
- keyString: "get_called_class()"
- keyString: "get_cfg_var(string varname)"
- keyString: "get_class(object obj)"
- keyString: "get_class_methods(string class_name)"
- keyString: "get_class_vars(string class_name)"
- keyString: "get_content()"
- keyString: "get_current_user()"
- keyString: "get_declared_classes()"
- keyString: "get_declared_interfaces()"
- keyString: "get_declared_interfaces()"
- keyString: "get_declared_traits()"
- keyString: "get_defined_constants()"
- keyString: "get_defined_functions()"
- keyString: "get_defined_vars()"
- keyString: "get_extension_funcs(string module_name)"
- keyString: "get_headers(string url [, int format = 0])"
- keyString: "get_html_translation_table(int table [, int quote_style])"
- keyString: "get_include_path()"
- keyString: "get_included_files()"
- keyString: "get_loaded_extensions()"
- keyString: "get_magic_quotes_gpc()"
- keyString: "get_magic_quotes_runtime()"
- keyString: "get_meta_tags(string filename [, bool use_include_path])"
- keyString: "get_object_vars(object obj)"
- keyString: "get_parent_class(mixed obj)"
- keyString: "get_required_files()"
- keyString: "get_resource_type(resource handle)"
- keyString: "getallheaders()"
- keyString: "getallheaders()"
- keyString: "getcwd()"
- keyString: "getdate([int timestamp])"
- keyString: "getenv(string varname)"
- keyString: "gethostbyaddr(string ip_address)"
- keyString: "gethostbyname(string hostname)"
- keyString: "gethostbynamel(string hostname)"
- keyString: "gethostname()"
- keyString: "getimagesize(string filename [, array imageinfo])"
- keyString: "getimagesizefromstring(string imagedata [, array &imageinfo])"
- keyString: "getlastmod()"
- keyString: "getmxrr()"
- keyString: "getmygid()"
- keyString: "getmyinode()"
- keyString: "getmypid()"
- keyString: "getmyuid()"
- keyString: "getopt()"
- keyString: "getprotobyname()"
- keyString: "getprotobynumber()"
- keyString: "getrandmax()"
- keyString: "getrusage()"
- keyString: "getservbyname()"
- keyString: "getservbyport()"
- keyString: "gettext()"
- keyString: "gettimeofday()"
- keyString: "gettype()"
- keyString: "gif()"
- keyString: "glob()"
- keyString: "global"
- keyString: "gmdate()"
- keyString: "gmmktime()"
- keyString: "gmp_abs()"
- keyString: "gmp_add()"
- keyString: "gmp_and()"
- keyString: "gmp_clrbit()"
- keyString: "gmp_cmp()"
- keyString: "gmp_com()"
- keyString: "gmp_div()"
- keyString: "gmp_div_q()"
- keyString: "gmp_div_qr()"
- keyString: "gmp_div_r()"
- keyString: "gmp_divexact()"
- keyString: "gmp_fact()"
- keyString: "gmp_gcd()"
- keyString: "gmp_gcdext()"
- keyString: "gmp_hamdist()"
- keyString: "gmp_init()"
- keyString: "gmp_intval()"
- keyString: "gmp_invert()"
- keyString: "gmp_jacobi()"
- keyString: "gmp_legendre()"
- keyString: "gmp_mod()"
- keyString: "gmp_mul()"
- keyString: "gmp_neg()"
- keyString: "gmp_nextprime(int a)"
- keyString: "gmp_or()"
- keyString: "gmp_perfect_square()"
- keyString: "gmp_popcount()"
- keyString: "gmp_pow()"
- keyString: "gmp_powm()"
- keyString: "gmp_prob_prime()"
- keyString: "gmp_random()"
- keyString: "gmp_root()"
- keyString: "gmp_rootrem()"
- keyString: "gmp_scan0()"
- keyString: "gmp_scan1()"
- keyString: "gmp_setbit()"
- keyString: "gmp_sign()"
- keyString: "gmp_sqrt()"
- keyString: "gmp_sqrtrm()"
- keyString: "gmp_strval()"
- keyString: "gmp_sub()"
- keyString: "gmp_testbit(resource a , int index)"
- keyString: "GMP_VERSION"
- keyString: "gmp_xor()"
- keyString: "gmstrftime()"
- keyString: "GregorianToJD"
- keyString: "gregoriantojd(int month , int day , int year)"
- keyString: "GROUPING"
- keyString: "gzclose(int zp)"
- keyString: "gzcompress(string data [, int level])"
- keyString: "gzdecode(string data [, int length])"
- keyString: "gzdeflate(string data [, int level])"
- keyString: "gzencode(string data [, int level [, int encoding_mode]])"
- keyString: "gzeof(int zp)"
- keyString: "gzfile(string filename [, int use_include_path])"
- keyString: "gzgetc(int zp)"
- keyString: "gzgets(int zp, int length)"
- keyString: "gzgetss(int zp, int length, string [allowable_tags])"
- keyString: "gzinflate(string data [, int length])"
- keyString: "gzopen(string filename, string mode [, int use_include_path])"
- keyString: "gzpassthru(int zp)"
- keyString: "gzputs(int zp, string str, int [length])"
- keyString: "gzread(int zp, int length)"
- keyString: "gzrewind(int zp)"
- keyString: "gzseek(int zp, int offset)"
- keyString: "gztell(int zp)"
- keyString: "gzuncompress(string data, int [length])"
- keyString: "gzwrite(int zp, string string, int [length])"
- keyString: "has_attribute()"
- keyString: "has_attributess()"
- keyString: "has_child_nodes()"
- keyString: "hash(string algo , string data [, bool raw_output])"
- keyString: "hash_algos()"
- keyString: "hash_copy(resource context)"
- keyString: "hash_equals(string known_string , string user_string)"
- keyString: "hash_file(string algo , string filename [, bool raw_output])"
- keyString: "hash_final(resource context [, bool raw_output])"
- keyString: "hash_hmac(string algo , string data , string key [, bool raw_output])"
- keyString: "hash_hmac_file(string algo , string filename , string key [, bool
    raw_output])"
- keyString: "hash_init(string algo [, int options [, string key]])"
- keyString: "hash_pbkdf2(string algo , string password , string salt , int iterations
    [, int length [, bool raw_output]])"
- keyString: "hash_pbkdf2(string algo , string password , string salt , int iterations
    [, int length [, bool raw_output]])"
- keyString: "hash_update(resource context , string data)"
- keyString: "hash_update_file(resource context , string filename [, resource context])"
- keyString: "hash_update_stream(resource context , resource handle [, int length])"
- keyString: "header(string string [, bool replace [, int http_response_code]])"
- keyString: "header_register_callback(callable callback)"
- keyString: "header_remove([ string name])"
- keyString: "headers_list()"
- keyString: "headers_list()"
- keyString: "headers_sent([string &file [, int &line]])"
- keyString: "hebrev(string hebrew_text [, int max_chars_per_line])"
- keyString: "hebrevc(string hebrew_text [, int max_chars_per_line])"
- keyString: "hex2bin(string data)"
- keyString: "hexdec(string hex_string)"
- keyString: "highlight_file(string filename)"
- keyString: "highlight_string(string str)"
- keyString: "html_dump_mem()"
- keyString: "HTML_ENTITIES"
- keyString: "html_entity_decode(string string [, int quote_style [, string charset]])"
- keyString: "HTML_SPECIALCHARS"
- keyString: "htmlentities(string string, int [quote_style], string [charset])"
- keyString: "htmlspecialchars(string string, int [quote_style] [, string charset])"
- keyString: "http_build_query(mixed query_data [, string numeric_prefix [, string
    arg_separator [, int enc_type]]])"
- keyString: "http_response_code([ int response_code])"
- keyString: "hypot(float num1, float num2)"
- keyString: "ibase_add_user()"
- keyString: "ibase_affected_rows()"
- keyString: "ibase_affected_rows([ resource link_identifier])"
- keyString: "ibase_backup()"
- keyString: "ibase_backup(resource service_handle , string source_db , string $dest_file
    [, int options [, bool verbose]])"
- keyString: "ibase_blob_add()"
- keyString: "ibase_blob_cancel()"
- keyString: "ibase_blob_close()"
- keyString: "ibase_blob_create()"
- keyString: "ibase_blob_echo()"
- keyString: "ibase_blob_get()"
- keyString: "ibase_blob_import()"
- keyString: "ibase_blob_info()"
- keyString: "ibase_blob_open()"
- keyString: "ibase_close()"
- keyString: "ibase_commit()"
- keyString: "ibase_commit_ret()"
- keyString: "ibase_commit_ret([ resource link_or_trans_identifier])"
- keyString: "ibase_connect()"
- keyString: "ibase_db_info()"
- keyString: "ibase_db_info(resource service_handle , string db , int action [,
    int argument])"
- keyString: "ibase_delete_user()"
- keyString: "ibase_drop_db()"
- keyString: "ibase_drop_db([ resource connection])"
- keyString: "ibase_errcode()"
- keyString: "ibase_errcode()"
- keyString: "ibase_errmsg()"
- keyString: "ibase_execute()"
- keyString: "ibase_fetch_assoc()"
- keyString: "ibase_fetch_object()"
- keyString: "ibase_fetch_row()"
- keyString: "ibase_field_info()"
- keyString: "ibase_free_event_handler()"
- keyString: "ibase_free_event_handler(resource event)"
- keyString: "ibase_free_query()"
- keyString: "ibase_free_result()"
- keyString: "ibase_gen_id()"
- keyString: "ibase_gen_id(string generator [, int increment = 1 [, resource link_identifier]])"
- keyString: "ibase_maintain_db()"
- keyString: "ibase_maintain_db(resource service_handle , string db , int action
    [, int argument])"
- keyString: "ibase_modify_user()"
- keyString: "ibase_name_result()"
- keyString: "ibase_name_result(resource result , string name)"
- keyString: "ibase_num_fields()"
- keyString: "ibase_num_params()"
- keyString: "ibase_num_params(resource query)"
- keyString: "ibase_param_info()"
- keyString: "ibase_param_info(resource query , int param_number)"
- keyString: "ibase_pconnect()"
- keyString: "ibase_prepare()"
- keyString: "ibase_query()"
- keyString: "ibase_restore()"
- keyString: "ibase_restore(resource service_handle , string source_file , string
    dest_db [, int options [, bool verbose]])"
- keyString: "ibase_rollback()"
- keyString: "ibase_rollback_ret()"
- keyString: "ibase_rollback_ret([ resource link_or_trans_identifier])"
- keyString: "ibase_server_info()"
- keyString: "ibase_server_info(resource service_handle , int action)"
- keyString: "ibase_service_attach()"
- keyString: "ibase_service_attach(string host , string dba_username , string dba_password)"
- keyString: "ibase_service_detach()"
- keyString: "ibase_service_detach(resource service_handle)"
- keyString: "ibase_set_event_handler()"
- keyString: "ibase_set_event_handler(callable event_handler , string event_name1
    [, string event_name2 [, string ...]])"
- keyString: "ibase_timefmt()"
- keyString: "ibase_trans()"
- keyString: "ibase_wait_event()"
- keyString: "iconv(string in_charset, string out_charset, string str)"
- keyString: "iconv_get_encoding([string type])"
- keyString: "iconv_mime_decode(string encoded_header [, int mode [, string charset]])"
- keyString: "iconv_mime_decode_headers(string encoded_headers [, int mode [, string
    charset]])"
- keyString: "iconv_mime_encode(string field_name, string field_value [, array preferences])"
- keyString: "iconv_set_encoding(string type, string charset)"
- keyString: "iconv_strlen(string str [, string charset])"
- keyString: "iconv_strpos(string haystack, string needle [, int offset [, string
    charset]])"
- keyString: "iconv_strrpos(string haystack , string needle [, string charset])"
- keyString: "iconv_substr(string str, int offset [, int length [, string charset]])"
- keyString: "idate(string format [, int timestamp])"
- keyString: "IDNA_CHECK_BIDI"
- keyString: "IDNA_CHECK_CONTEXTJ"
- keyString: "IDNA_ERROR_BIDI"
- keyString: "IDNA_ERROR_CONTEXTJ"
- keyString: "IDNA_ERROR_DISALLOWED"
- keyString: "IDNA_ERROR_DOMAIN_NAME_TOO_LONG"
- keyString: "IDNA_ERROR_EMPTY_LABEL"
- keyString: "IDNA_ERROR_HYPHEN_3_4"
- keyString: "IDNA_ERROR_INVALID_ACE_LABEL"
- keyString: "IDNA_ERROR_LABEL_HAS_DOT"
- keyString: "IDNA_ERROR_LABEL_TOO_LONG"
- keyString: "IDNA_ERROR_LEADING_COMBINING_MARK"
- keyString: "IDNA_ERROR_LEADING_HYPHEN"
- keyString: "IDNA_ERROR_PUNYCODE"
- keyString: "IDNA_ERROR_TRAILING_HYPHEN"
- keyString: "IDNA_NONTRANSITIONAL_TO_ASCII"
- keyString: "IDNA_NONTRANSITIONAL_TO_UNICODE"
- keyString: "if"
- keyString: "ifx_affected_rows()"
- keyString: "ifx_blobinfile_mode()"
- keyString: "ifx_byteasvarchar()"
- keyString: "ifx_close()"
- keyString: "ifx_connect()"
- keyString: "ifx_copy_blob()"
- keyString: "ifx_create_blob()"
- keyString: "ifx_create_char()"
- keyString: "ifx_do()"
- keyString: "ifx_error()"
- keyString: "ifx_errormsg()"
- keyString: "ifx_fetch_row()"
- keyString: "ifx_fieldproperties()"
- keyString: "ifx_fieldtypes()"
- keyString: "ifx_free_blob()"
- keyString: "ifx_free_char()"
- keyString: "ifx_free_result()"
- keyString: "ifx_get_blob()"
- keyString: "ifx_get_char()"
- keyString: "ifx_getsqlca()"
- keyString: "ifx_htmltbl_result()"
- keyString: "ifx_nullformat()"
- keyString: "ifx_num_fields()"
- keyString: "ifx_num_rows()"
- keyString: "ifx_pconnect()"
- keyString: "ifx_prepare()"
- keyString: "ifx_query()"
- keyString: "ifx_textasvarchar()"
- keyString: "ifx_update_blob()"
- keyString: "ifx_update_char()"
- keyString: "ifxus_close_slob()"
- keyString: "ifxus_create_slob()"
- keyString: "ifxus_free_slob()"
- keyString: "ifxus_open_slob()"
- keyString: "ifxus_read_slob()"
- keyString: "ifxus_seek_slob()"
- keyString: "ifxus_tell_slob()"
- keyString: "ifxus_write_slob()"
- keyString: "ignore_user_abort()"
- keyString: "ILL_BADSTK"
- keyString: "ILL_COPROC"
- keyString: "ILL_ILLADR"
- keyString: "ILL_ILLOPC"
- keyString: "ILL_ILLOPN"
- keyString: "ILL_ILLTRP"
- keyString: "ILL_PRVOPC"
- keyString: "ILL_PRVREG"
- keyString: "image2wbmp(int im [, string filename [, int threshold]])"
- keyString: "image_type_to_extension(int imagetype [, bool include_dot])"
- keyString: "image_type_to_mime_type(int im [, string filename [, int threshold]])"
- keyString: "imagealphablending(resource im, bool blendmode)"
- keyString: "imageantialias(int im, bool on)"
- keyString: "imagearc(int im, int cx, int cy, int w, int h, int s, int e, int color)"
- keyString: "imagechar(int im, int font, int x, int y, string c, int color)"
- keyString: "imagecharup(resource image, int font, int x, int y, string c, int
    color)"
- keyString: "imagecolorallocate(resource image, int red, int green, int blue)"
- keyString: "imagecolorallocatealpha(resource image, int red, int green, int blue,
    int alpha)"
- keyString: "imagecolorat(int image, int x, int y)"
- keyString: "imagecolorclosest(int image, int red, int green, int blue)"
- keyString: "imagecolorclosestalpha(resource image, int red, int green, int blue,
    int alpha)"
- keyString: "imagecolorclosestthwb(resource image, int red, int green, int blue)"
- keyString: "imagecolordeallocate(resource image, int color)"
- keyString: "imagecolorexact(resource image, int red, int green, int blue)"
- keyString: "imagecolorexactalpha(resource image, int red, int green, int blue,
    int alpha)"
- keyString: "imagecolormatch(resource image1, resource image2)"
- keyString: "imagecolorresolve(int im, int red, int green, int blue)"
- keyString: "imagecolorresolvealpha(resource image, int red, int green, int blue,
    int alpha)"
- keyString: "imagecolorset(resource image, int index, int red, int green, int blue)"
- keyString: "imagecolorsforindex(resource image, int index)"
- keyString: "imagecolorstotal(resource image)"
- keyString: "imagecolortransparent(resource image [, int color])"
- keyString: "imagecopy(resource dst_im, resource src_im, int dst_x, int dst_y,
    int src_x, int src_y, int src_w, int src_h)"
- keyString: "imagecopymerge(resource dst_im, resource src_im, int dst_x, int dst_y,
    int src_x, int src_y, int src_w, int src_h, int pct)"
- keyString: "imagecopyresampled(resource dst_im, resource src_im, int dstX, int
    dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH)"
- keyString: "imagecopyresized(resource dst_im, resource src_im, int dstX, int dstY,
    int srcX, int srcY, int dstW, int dstH, int srcW, int srcH)"
- keyString: "imagecreate(int x_size, int y_size)"
- keyString: "imagecreatefromgd(string filename)"
- keyString: "imagecreatefromgd2(string filename)"
- keyString: "imagecreatefromgd2part(string filename, int srcX, int srcY, int width,
    int height)"
- keyString: "imagecreatefromgif(string filename)"
- keyString: "imagecreatefromjpeg(string filename)"
- keyString: "imagecreatefrompng(string filename)"
- keyString: "imagecreatefromstring(string image)"
- keyString: "imagecreatefromwbmp(string filename)"
- keyString: "imagecreatefromxbm(string filename)"
- keyString: "imagecreatefromxpm(string filename)"
- keyString: "imagecreatetruecolor(int x_size, int y_size)"
- keyString: "imagedashedline(int im, int x1, int y1, int x2, int y2, int col)"
- keyString: "imagedestroy(resource image)"
- keyString: "imageellipse(resource image, int cx, int cy, int w, int h, int color)"
- keyString: "imagefill(resource image, int x, int y, int color)"
- keyString: "imagefilledarc(resource image, int cx, int cy, int w, int h, int s,
    int e, int color, int style)"
- keyString: "ImageFilledEllipse(resource image, int cx, int cy, int w, int h, int
    color)"
- keyString: "imagefilledpolygon(resource image, array points, int num_points, int
    color)"
- keyString: "imagefilledrectangle(resource image, int x1, int y1, int x2, int y2,
    int color)"
- keyString: "imagefilltoborder(resource image, int x, int y, int border, int color)"
- keyString: "imagefilter(resource image , int filtertype [, int arg1 [, int arg2
    [, int arg3 [, int $arg4]]]])"
- keyString: "imagefontheight(int font)"
- keyString: "imagefontwidth(int font)"
- keyString: "imageftbbox(int size, int angle, string font_file, string text [,
    array extrainfo])"
- keyString: "imagefttext(int im, int size, int angle, int x, int y, int col, string
    font_file, string text [, array extrainfo])"
- keyString: "imagegammacorrect(int image, float inputgamma, float outputgamma)"
- keyString: "imagegd(resource image [, string filename])"
- keyString: "imagegd2(resource image [, string filename [, int chunk_size [, int
    type]]])"
- keyString: "imagegrabscreen()"
- keyString: "imagegrabwindow(int window_handle [, int client_area])"
- keyString: "imageinterlace(resource image [, int interlace])"
- keyString: "imageistruecolor(resource image)"
- keyString: "imagejpeg(resource image [, string filename [, int quality]])"
- keyString: "imageline(resource image, int x1, int y1, int x2, int y2, int color)"
- keyString: "imageloadfont(string file)"
- keyString: "imagepalettecopy(resource destination, resource source)"
- keyString: "imagepng(resource image [, string filename])"
- keyString: "imagepolygon(resource image, array points, int num_points, int color)"
- keyString: "imagepsbbox(string text, int font, int size [, int space [, int tightness
    [, float angle]]])"
- keyString: "imagepscopyfont(int fontindex)"
- keyString: "imagepsencodefont(int font_index, string encodingfile)"
- keyString: "imagepsextendfont(int font_index, float extend)"
- keyString: "imagepsfreefont(int fontindex)"
- keyString: "imagepsloadfont(string filename)"
- keyString: "imagepsslantfont(int font_index, float slant)"
- keyString: "imagepstext(resource image, string text, int font, int size, int foreground,
    int background, int x, int y [, int space [, int tightness [, float angle [, int
    antialias_steps]]]])"
- keyString: "imagerectangle(int image, int x1, int y1, int x2, int y2, int col)"
- keyString: "imagerotate(resource src_im, float angle, int bgd_color)"
- keyString: "imagesavealpha(resource image, bool saveflag)"
- keyString: "ImageSetBrush(resource image, resource brush)"
- keyString: "ImageSetPixel(resource image, int x, int y, int color)"
- keyString: "imagesetstyle(resource im, array style)"
- keyString: "imagesetthickness(resource image, int thickness)"
- keyString: "imagesettile(resource image, resource tile)"
- keyString: "imagestring(int image, int font, int x, int y, string s, int col)"
- keyString: "imagestringup(int image, int font, int x, int y, string s, int col)"
- keyString: "imagesx(resource image)"
- keyString: "imagesy(resource image)"
- keyString: "imagetruecolortopalette(resource im, bool dither, int ncolors)"
- keyString: "imagettfbbox(int size, int angle, string fontfile, string text)"
- keyString: "imagettftext(resource image, int size, int angle, int x, int y, int
    color, string fontfile, string text)"
- keyString: "imagetypes()"
- keyString: "imagewbmp(resource image [, string filename [, int foreground]])"
- keyString: "imagexbm(resource image, string filename [, int foreground])"
- keyString: "imap_8bit()"
- keyString: "imap_alerts()"
- keyString: "imap_append()"
- keyString: "imap_base64()"
- keyString: "imap_binary()"
- keyString: "imap_body()"
- keyString: "imap_bodystruct()"
- keyString: "imap_check()"
- keyString: "imap_clearflag_full()"
- keyString: "imap_close()"
- keyString: "imap_createmailbox()"
- keyString: "imap_delete()"
- keyString: "imap_deletemailbox()"
- keyString: "imap_errors()"
- keyString: "imap_expunge()"
- keyString: "imap_fetch_overview()"
- keyString: "imap_fetchbody()"
- keyString: "imap_fetchheader()"
- keyString: "imap_fetchstructure()"
- keyString: "imap_gc(resource imap_stream , int caches)"
- keyString: "imap_get_quota()"
- keyString: "imap_get_quotaroot()"
- keyString: "imap_getacl(resource imap_stream , string mailbox)"
- keyString: "imap_getmailboxes()"
- keyString: "imap_getsubscribed()"
- keyString: "imap_header()"
- keyString: "imap_headerinfo()"
- keyString: "imap_headers()"
- keyString: "imap_last_error()"
- keyString: "imap_list()"
- keyString: "imap_listmailbox()"
- keyString: "imap_listscan()"
- keyString: "imap_listsubscribed()"
- keyString: "imap_lsub()"
- keyString: "imap_mail()"
- keyString: "imap_mail_compose()"
- keyString: "imap_mail_copy()"
- keyString: "imap_mail_move()"
- keyString: "imap_mailboxmsginfo()"
- keyString: "imap_mime_header_decode()"
- keyString: "imap_msgno()"
- keyString: "imap_mutf7_to_utf8()"
- keyString: "imap_num_msg()"
- keyString: "imap_num_recent()"
- keyString: "imap_open()"
- keyString: "imap_ping()"
- keyString: "imap_qprint()"
- keyString: "imap_renamemailbox()"
- keyString: "imap_reopen()"
- keyString: "imap_rfc822_parse_adrlist()"
- keyString: "imap_rfc822_parse_headers()"
- keyString: "imap_rfc822_write_address()"
- keyString: "imap_scanmailbox()"
- keyString: "imap_search()"
- keyString: "imap_set_quota()"
- keyString: "imap_setacl()"
- keyString: "imap_setflag_full()"
- keyString: "imap_sort()"
- keyString: "imap_status()"
- keyString: "imap_subscribe()"
- keyString: "imap_thread()"
- keyString: "imap_uid()"
- keyString: "imap_undelete()"
- keyString: "imap_unsubscribe()"
- keyString: "imap_utf7_decode()"
- keyString: "imap_utf7_encode()"
- keyString: "imap_utf8()"
- keyString: "imap_utf8_to_mutf7()"
- keyString: "IMG_FILTER_PIXELATE"
- keyString: "implements"
- keyString: "implode(string glue, array pieces)"
- keyString: "in_array(mixed needle, array haystack [, bool strict])"
- keyString: "include()"
- keyString: "include_once()"
- keyString: "INFO_ALL"
- keyString: "INFO_CONFIGURATION"
- keyString: "INFO_CREDITS"
- keyString: "INFO_ENVIRONMENT"
- keyString: "INFO_GENERAL"
- keyString: "INFO_LICENSE"
- keyString: "INFO_MODULES"
- keyString: "INFO_VARIABLES"
- keyString: "INI_ALL"
- keyString: "ini_alter(string varname, string newvalue)"
- keyString: "ini_get(string varname)"
- keyString: "ini_get_all([string extension])"
- keyString: "INI_PERDIR"
- keyString: "ini_restore(string varname)"
- keyString: "INI_SCANNER_NORMAL"
- keyString: "INI_SCANNER_RAW"
- keyString: "ini_set(string varname, string newvalue)"
- keyString: "INI_SYSTEM"
- keyString: "INI_USER"
- keyString: "insert_before(object newnode, object refnode)"
- keyString: "INT_CURR_SYMBOL"
- keyString: "INT_FRAC_DIGITS"
- keyString: "interface"
- keyString: "interface_exists(string interface_name [, bool autoload])"
- keyString: "internal_subset()"
- keyString: "INTL_IDNA_VARIANT_2003"
- keyString: "INTL_IDNA_VARIANT_UTS46"
- keyString: "intval(mixed var, int [base])"
- keyString: "ip2long(string ip_address)"
- keyString: "IP_MULTICAST_IF"
- keyString: "IP_MULTICAST_LOOP"
- keyString: "IP_MULTICAST_TTL"
- keyString: "IPPROTO_IP"
- keyString: "IPPROTO_IPV6"
- keyString: "iptcembed()"
- keyString: "iptcparse()"
- keyString: "IPV6_MULTICAST_HOPS"
- keyString: "IPV6_MULTICAST_IF"
- keyString: "IPV6_MULTICAST_LOOP"
- keyString: "is_a(object object, string class_name)"
- keyString: "is_array(mixed var)"
- keyString: "is_blank_node()"
- keyString: "is_bool(mixed var)"
- keyString: "is_callable(mixed var [, bool syntax_only [, string callable_name]])"
- keyString: "is_dir(string filename)"
- keyString: "is_double(mixed var)"
- keyString: "is_executable(string filename)"
- keyString: "is_file(string filename)"
- keyString: "is_finite(float val)"
- keyString: "is_float(mixed var)"
- keyString: "is_infinite(float val)"
- keyString: "is_int(mixed var)"
- keyString: "is_integer(mixed var)"
- keyString: "is_link(string filename)"
- keyString: "is_long(mixed var)"
- keyString: "is_nan(float val)"
- keyString: "is_null(mixed var)"
- keyString: "is_numeric(mixed var)"
- keyString: "is_object(mixed var)"
- keyString: "is_readable(string filename)"
- keyString: "is_real(mixed var)"
- keyString: "is_resource(mixed var)"
- keyString: "is_scalar(mixed var)"
- keyString: "is_soap_fault(mixed object)"
- keyString: "is_string(mixed var)"
- keyString: "is_subclass_of(object obj, string superclass)"
- keyString: "is_uploaded_file(string filename)"
- keyString: "is_writable(string filename)"
- keyString: "is_writeable(string filename)"
- keyString: "isset(string filename)"
- keyString: "iterator_apply(Traversable it, mixed function [, mixed params])"
- keyString: "iterator_apply(Traversable iterator , callable function [, array args])"
- keyString: "iterator_count(Traversable iterator)"
- keyString: "iterator_to_array(Traversable iterator [, bool use_keys])"
- keyString: "java_last_exception_clear()"
- keyString: "java_last_exception_get()"
- keyString: "JDDayOfWeek"
- keyString: "jddayofweek(int julianday [, int mode])"
- keyString: "JDMonthName"
- keyString: "jdmonthname(int julianday , int mode)"
- keyString: "JDToFrench"
- keyString: "jdtofrench(int juliandaycount)"
- keyString: "JDToGregorian"
- keyString: "jdtogregorian(int julianday)"
- keyString: "JDToJewish"
- keyString: "jdtojewish(int juliandaycount [, bool hebrew [, int fl]])"
- keyString: "JDToJulian"
- keyString: "jdtojulian(int julianday)"
- keyString: "jdtounix(int jday)"
- keyString: "jdtounix(int jday)"
- keyString: "jewishtojd(int month , int day , int year)"
- keyString: "jewishtojd(int month, int day, int year)"
- keyString: "join(string glue, array pieces)"
- keyString: "jpeg2wbmp(string jpegname, string wbmpname, int d_height, int d_width,
    int threshold)"
- keyString: "JSON_BIGINT_AS_STRING"
- keyString: "json_decode(string json [, bool assoc [, int depth [, int options]]])"
- keyString: "json_encode(mixed value [, int options])"
- keyString: "JSON_ERROR_CTRL_CHAR"
- keyString: "JSON_ERROR_DEPTH"
- keyString: "JSON_ERROR_NONE"
- keyString: "JSON_ERROR_STATE_MISMATCH"
- keyString: "JSON_ERROR_SYNTAX"
- keyString: "JSON_FORCE_OBJECT"
- keyString: "JSON_HEX_AMP"
- keyString: "JSON_HEX_APOS"
- keyString: "JSON_HEX_QUOT"
- keyString: "JSON_HEX_TAG"
- keyString: "json_last_error()"
- keyString: "JSON_NUMERIC_CHECK"
- keyString: "JSON_PRETTY_PRINT"
- keyString: "JSON_UNESCAPED_SLASHES"
- keyString: "JSON_UNESCAPED_UNICODE"
- keyString: "juliantojd(int month , int day , int year)"
- keyString: "juliantojd(int month, int day, int year)"
- keyString: "key(array &array)"
- keyString: "krsort(array &array [, int sort_flags])"
- keyString: "ksort(array &array [, int sort_flags])"
- keyString: "last_child()"
- keyString: "LC_ALL"
- keyString: "LC_COLLATE"
- keyString: "LC_CTYPE"
- keyString: "LC_MESSAGES"
- keyString: "LC_MONETARY"
- keyString: "LC_NUMERIC"
- keyString: "LC_TIME"
- keyString: "lcfirst(string str)"
- keyString: "lcg_value()"
- keyString: "ldap_8859_to_t61()"
- keyString: "ldap_add()"
- keyString: "ldap_bind()"
- keyString: "ldap_close()"
- keyString: "ldap_compare()"
- keyString: "ldap_connect()"
- keyString: "ldap_control_paged_result (resource link , int pagesize [, bool iscritical
    [, string cookie]])"
- keyString: "ldap_control_paged_result()"
- keyString: "ldap_control_paged_result_response()"
- keyString: "ldap_control_paged_result_response(resource link , resource result
    [, string &cookie [, int &estimated]])"
- keyString: "ldap_count_entries()"
- keyString: "ldap_delete()"
- keyString: "ldap_dn2ufn()"
- keyString: "ldap_err2str()"
- keyString: "ldap_errno()"
- keyString: "ldap_error()"
- keyString: "ldap_escape()"
- keyString: "LDAP_ESCAPE_DN"
- keyString: "LDAP_ESCAPE_FILTER"
- keyString: "ldap_explode_dn()"
- keyString: "ldap_first_attribute()"
- keyString: "ldap_first_entry()"
- keyString: "ldap_first_reference()"
- keyString: "ldap_free_result()"
- keyString: "ldap_get_attributes()"
- keyString: "ldap_get_dn()"
- keyString: "ldap_get_entries()"
- keyString: "ldap_get_option()"
- keyString: "ldap_get_values()"
- keyString: "ldap_get_values_len()"
- keyString: "ldap_list()"
- keyString: "ldap_mod_add()"
- keyString: "ldap_mod_del()"
- keyString: "ldap_mod_replace()"
- keyString: "ldap_modify()"
- keyString: "ldap_modify_batch()"
- keyString: "ldap_next_attribute()"
- keyString: "ldap_next_entry()"
- keyString: "ldap_next_reference()"
- keyString: "LDAP_OPT_NETWORK_TIMEOUT"
- keyString: "ldap_parse_reference()"
- keyString: "ldap_parse_result()"
- keyString: "ldap_read()"
- keyString: "ldap_rename()"
- keyString: "ldap_sasl_bind()"
- keyString: "ldap_sasl_bind(resource link [, string binddn [, string password [,
    string sasl_mech [, string sasl_realm [, string sasl_authc_id [, string sasl_authz_id
    [, string props]]]]]]])"
- keyString: "ldap_search()"
- keyString: "ldap_set_option()"
- keyString: "ldap_set_rebind_proc()"
- keyString: "ldap_sort()"
- keyString: "ldap_start_tls()"
- keyString: "ldap_t61_to_8859()"
- keyString: "ldap_unbind()"
- keyString: "levenshtein()"
- keyString: "libxml_clear_errors()"
- keyString: "libxml_clear_errors()"
- keyString: "libxml_disable_entity_loader([ bool disable])"
- keyString: "libxml_disable_entity_loader([ bool disable])"
- keyString: "libxml_get_errors()"
- keyString: "libxml_get_errors()"
- keyString: "libxml_get_last_error()"
- keyString: "libxml_get_last_error()"
- keyString: "LIBXML_HTML_NODEFDTD"
- keyString: "LIBXML_HTML_NOIMPLIED"
- keyString: "LIBXML_LOADED_VERSION"
- keyString: "LIBXML_PEDANTIC"
- keyString: "libxml_set_external_entity_loader(callable resolver_function)"
- keyString: "libxml_set_streams_context(resource streams_context)"
- keyString: "libxml_use_internal_errors([bool use_errors])"
- keyString: "link(string target, string link)"
- keyString: "linkinfo(string path)"
- keyString: "list(mixed ..., mixed ...)"
- keyString: "localeconv()"
- keyString: "localtime([int timestamp [, bool is_associative]])"
- keyString: "LOCK_EX"
- keyString: "LOCK_NB"
- keyString: "LOCK_SH"
- keyString: "LOCK_UN"
- keyString: "log(float arg)"
- keyString: "log10(float arg)"
- keyString: "log1p(float number)"
- keyString: "LOG_ALERT"
- keyString: "LOG_AUTH"
- keyString: "LOG_AUTHPRIV"
- keyString: "LOG_CONS"
- keyString: "LOG_CRIT"
- keyString: "LOG_CRON"
- keyString: "LOG_DAEMON"
- keyString: "LOG_DEBUG"
- keyString: "LOG_EMERG"
- keyString: "LOG_ERR"
- keyString: "LOG_INFO"
- keyString: "LOG_KERN"
- keyString: "LOG_LOCAL0"
- keyString: "LOG_LOCAL1"
- keyString: "LOG_LOCAL2"
- keyString: "LOG_LOCAL3"
- keyString: "LOG_LOCAL4"
- keyString: "LOG_LOCAL5"
- keyString: "LOG_LOCAL6"
- keyString: "LOG_LOCAL7"
- keyString: "LOG_LPR"
- keyString: "LOG_MAIL"
- keyString: "LOG_NDELAY"
- keyString: "LOG_NEWS"
- keyString: "LOG_NOTICE"
- keyString: "LOG_NOWAIT"
- keyString: "LOG_ODELAY"
- keyString: "LOG_PERROR"
- keyString: "LOG_PID"
- keyString: "LOG_SYSLOG"
- keyString: "LOG_USER"
- keyString: "LOG_UUCP"
- keyString: "LOG_WARNING"
- keyString: "lstat(string filename)"
- keyString: "ltrim(string str [, string charlist])"
- keyString: "M_1_PI"
- keyString: "M_2_PI"
- keyString: "M_2_SQRTPI"
- keyString: "M_E"
- keyString: "M_EULER"
- keyString: "M_LN10"
- keyString: "M_LN2"
- keyString: "M_LNPI"
- keyString: "M_LOG10E"
- keyString: "M_LOG2E"
- keyString: "M_PI"
- keyString: "M_PI_2"
- keyString: "M_PI_4"
- keyString: "M_SQRT1_2"
- keyString: "M_SQRT2"
- keyString: "M_SQRT3"
- keyString: "M_SQRTPI"
- keyString: "magecopymergegray(resource dst_im, resource src_im, int dst_x, int
    dst_y, int src_x, int src_y, int src_w, int src_h, int pct)"
- keyString: "mail(string to, string subject, string message [, string additional_headers
    [, string additional_parameters]])"
- keyString: "main()"
- keyString: "max(mixed arg1, mixed arg2, mixed argn)"
- keyString: "mb_convert_case(string str, int mode [, string encoding])"
- keyString: "mb_convert_encoding(string str, string to-encoding [, mixed from-encoding])"
- keyString: "mb_convert_kana(string str, string option [, mixed encoding])"
- keyString: "mb_convert_variables(string to-encoding, mixed from-encoding, mixed
    vars)"
- keyString: "mb_decode_mimeheader(string str)"
- keyString: "mb_decode_numericentity(string str, array convmap [, string encoding])"
- keyString: "mb_detect_encoding(string str [, mixed encoding-list])"
- keyString: "mb_detect_order([mixed encoding-list])"
- keyString: "mb_encode_mimeheader(string str [, string charset [, string transfer-encoding
    [, string linefeed]]])"
- keyString: "mb_encode_numericentity(string str, array convmap [, string encoding])"
- keyString: "mb_encoding_aliases(string encoding)"
- keyString: "mb_ereg(string pattern , string string [, array regs])"
- keyString: "mb_ereg(string pattern, string string [, array regs])"
- keyString: "mb_ereg_match(string pattern, string string [, string option])"
- keyString: "mb_ereg_replace(string pattern, string replacement, string string
    [, array option])"
- keyString: "mb_ereg_replace_callback(string pattern , callable callback , string
    string [, string option])"
- keyString: "mb_ereg_search([string pattern [, string option]])"
- keyString: "mb_ereg_search_getpos()"
- keyString: "mb_ereg_search_getregs()"
- keyString: "mb_ereg_search_init(string string [, string pattern [, string option]])"
- keyString: "mb_ereg_search_pos([string pattern [, string option]])"
- keyString: "mb_ereg_search_regs([string pattern [, string option]])"
- keyString: "mb_ereg_search_setpos()"
- keyString: "mb_eregi(string pattern, string string [, array regs])"
- keyString: "mb_eregi_replace(string pattern, string replace, string string)"
- keyString: "mb_get_info([string type])"
- keyString: "mb_http_input([string type])"
- keyString: "mb_http_output([string encoding])"
- keyString: "mb_internal_encoding([string encoding])"
- keyString: "mb_language([string language])"
- keyString: "mb_list_encodings()"
- keyString: "mb_output_handler(string contents, int status)"
- keyString: "mb_parse_str(string encoded_string [, array &result])"
- keyString: "mb_preferred_mime_name(string encoding)"
- keyString: "mb_regex_encoding([string encoding])"
- keyString: "mb_regex_set_options([string options])"
- keyString: "mb_send_mail(string to, string subject, string message [, string additional_headers
    [, string additional_parameter]])"
- keyString: "mb_split(string pattern, string string [, int limit])"
- keyString: "mb_strcut(string str, int start [, int length [, string encoding]])"
- keyString: "mb_strimwidth(string str, int start, int width [, string trimmarker
    [, string encoding]])"
- keyString: "mb_stripos(string haystack , string needle [, int offset [, string
    encoding]])"
- keyString: "mb_stristr(string haystack , string needle [, bool before_needle =
    false [, string encoding]])"
- keyString: "mb_strlen(string str [, string encoding])"
- keyString: "mb_strpos(string haystack, string needle [, int offset [, string encoding]])"
- keyString: "mb_strrchr(string haystack , string needle [, bool part [, string
    encoding]])"
- keyString: "mb_strrichr(string haystack , string needle [, bool part [, string
    encoding]])"
- keyString: "mb_strripos(string haystack , string needle [, int offset [, string
    encoding]])"
- keyString: "mb_strrpos(string haystack, string needle [, string encoding])"
- keyString: "mb_strstr(string haystack , string needle [, bool before_needle =
    false [, string encoding]])"
- keyString: "mb_strtolower(string str [, string encoding])"
- keyString: "mb_strtoupper(string str [, string encoding])"
- keyString: "mb_strwidth(string str [, string encoding])"
- keyString: "mb_substitute_character([mixed substrchar])"
- keyString: "mb_substr(string str, int start [, int length [, string encoding]])"
- keyString: "mb_substr_count(string haystack, string needle [, string encoding])"
- keyString: "MCAST_BLOCK_SOURCE"
- keyString: "MCAST_JOIN_GROUP"
- keyString: "MCAST_JOIN_SOURCE_GROUP"
- keyString: "MCAST_LEAVE_GROUP"
- keyString: "MCAST_LEAVE_SOURCE_GROUP"
- keyString: "MCAST_UNBLOCK_SOURCE"
- keyString: "mcrypt_cbc()"
- keyString: "mcrypt_cfb()"
- keyString: "mcrypt_create_iv()"
- keyString: "mcrypt_decrypt()"
- keyString: "mcrypt_ecb()"
- keyString: "mcrypt_enc_get_algorithms_name()"
- keyString: "mcrypt_enc_get_block_size()"
- keyString: "mcrypt_enc_get_iv_size()"
- keyString: "mcrypt_enc_get_key_size()"
- keyString: "mcrypt_enc_get_modes_name()"
- keyString: "mcrypt_enc_get_supported_key_sizes()"
- keyString: "mcrypt_enc_is_block_algorithm()"
- keyString: "mcrypt_enc_is_block_algorithm_mode()"
- keyString: "mcrypt_enc_is_block_mode()"
- keyString: "mcrypt_enc_self_test()"
- keyString: "mcrypt_encrypt()"
- keyString: "mcrypt_generic()"
- keyString: "mcrypt_generic_deinit()"
- keyString: "mcrypt_generic_end()"
- keyString: "mcrypt_generic_init()"
- keyString: "mcrypt_get_block_size()"
- keyString: "mcrypt_get_cipher_name()"
- keyString: "mcrypt_get_iv_size()"
- keyString: "mcrypt_get_key_size()"
- keyString: "mcrypt_list_algorithms()"
- keyString: "mcrypt_list_modes()"
- keyString: "mcrypt_module_close()"
- keyString: "mcrypt_module_get_algo_block_size()"
- keyString: "mcrypt_module_get_algo_key_size()"
- keyString: "mcrypt_module_get_supported_key_sizes()"
- keyString: "mcrypt_module_is_block_algorithm()"
- keyString: "mcrypt_module_is_block_algorithm_mode()"
- keyString: "mcrypt_module_is_block_mode()"
- keyString: "mcrypt_module_open()"
- keyString: "mcrypt_module_self_test()"
- keyString: "mcrypt_ofb()"
- keyString: "md5(string str [, bool raw_output])"
- keyString: "md5_file(string filename)"
- keyString: "mdecrypt_generic()"
- keyString: "memory_get_peak_usage([ bool real_usage])"
- keyString: "metaphone()"
- keyString: "method_exists()"
- keyString: "microtime([bool get_as_float])"
- keyString: "mime_content_type(string filename)"
- keyString: "min(mixed arg1, mixed arg2, mixed argn)"
- keyString: "mkdir(string pathname [, int mode [, bool recursive [, resource context]]])"
- keyString: "mktime([int hour [, int minute [, int second [, int month [, int day
    [, int year [, int is_dst]]]]]]])"
- keyString: "MON_1"
- keyString: "MON_10"
- keyString: "MON_11"
- keyString: "MON_12"
- keyString: "MON_2"
- keyString: "MON_3"
- keyString: "MON_4"
- keyString: "MON_5"
- keyString: "MON_6"
- keyString: "MON_7"
- keyString: "MON_8"
- keyString: "MON_9"
- keyString: "MON_DECIMAL_POINT"
- keyString: "MON_GROUPING"
- keyString: "MON_THOUSANDS_SEP"
- keyString: "money_format()"
- keyString: "move_uploaded_file()"
- keyString: "MSG_EAGAIN"
- keyString: "MSG_ENOMSG"
- keyString: "msg_get_queue()"
- keyString: "msg_queue_exists(int key)"
- keyString: "msg_receive()"
- keyString: "msg_remove_queue()"
- keyString: "msg_send()"
- keyString: "msg_set_queue()"
- keyString: "msg_stat_queue()"
- keyString: "mssql_bind(resource stmt , string param_name , mixed &var , int type
    [, bool is_output [, bool is_null [, int maxlen]]])"
- keyString: "mssql_close([ resource link_identifier])"
- keyString: "mssql_connect([ string servername [, string username [, string password
    [, bool new_link]]]])"
- keyString: "mssql_data_seek(resource result_identifier , int row_number)"
- keyString: "mssql_execute(resource stmt [, bool skip_results])"
- keyString: "mssql_fetch_array(resource result [, int result_type])"
- keyString: "mssql_fetch_assoc(resource result_id)"
- keyString: "mssql_fetch_batch(resource result)"
- keyString: "mssql_fetch_field(resource result [, int field_offset])"
- keyString: "mssql_fetch_object(resource result)"
- keyString: "mssql_fetch_row(resource result)"
- keyString: "mssql_field_length(resource result [, int offset])"
- keyString: "mssql_field_name(resource result [, int offset])"
- keyString: "mssql_field_seek(resource result , int field_offset)"
- keyString: "mssql_field_type(resource result [, int offset])"
- keyString: "mssql_free_result(resource result)"
- keyString: "mssql_free_statement(resource stmt)"
- keyString: "mssql_get_last_message()"
- keyString: "mssql_guid_string(string binary [, bool short_format])"
- keyString: "mssql_init(string sp_name [, resource link_identifier])"
- keyString: "mssql_min_error_severity(int severity)"
- keyString: "mssql_min_message_severity(int severity)"
- keyString: "mssql_next_result(resource result_id)"
- keyString: "mssql_num_fields(resource result)"
- keyString: "mssql_num_rows(resource result)"
- keyString: "mssql_pconnect([ string servername [, string username [, string password
    [, bool new_link]]]])"
- keyString: "mssql_query(string query [, resource link_identifier [, int batch_size]])"
- keyString: "mssql_result(resource result , int row , mixed field)"
- keyString: "mssql_rows_affected(resource link_identifier)"
- keyString: "mssql_select_db(string database_name [, resource link_identifier])"
- keyString: "mt_getrandmax()"
- keyString: "mt_rand()"
- keyString: "mt_srand()"
- keyString: "mysql_affected_rows(int [link_identifier])"
- keyString: "mysql_change_user(string user, string password, string [database],
    resource [link_identifier])"
- keyString: "mysql_client_encoding([resource link_identifier])"
- keyString: "mysql_close(resource [link_identifier])"
- keyString: "mysql_connect([string server [, string username [, string password
    [, bool new_link [, int client_flags]]]]])"
- keyString: "mysql_create_db(string database_name, resource [link_identifier])"
- keyString: "mysql_data_seek(resource result_identifier, int row_number)"
- keyString: "mysql_db_name(resource result, int row, mixed [field])"
- keyString: "mysql_db_query(string database, string query, resource [link_identifier])"
- keyString: "mysql_drop_db(string database_name, resource [link_identifier])"
- keyString: "mysql_errno(resource [link_identifier])"
- keyString: "mysql_error(resource [link_identifier])"
- keyString: "mysql_escape_string(string unescaped_string)"
- keyString: "mysql_fetch_array(int result, int [result_type])"
- keyString: "mysql_fetch_assoc(int result)"
- keyString: "mysql_fetch_field(int result, int [field_offset])"
- keyString: "mysql_fetch_lengths(int result)"
- keyString: "mysql_fetch_object(int result, int [result_typ])"
- keyString: "mysql_fetch_row(int result)"
- keyString: "mysql_field_flags(int result, int field_offset)"
- keyString: "mysql_field_len(int result, int field_offset)"
- keyString: "mysql_field_name(int result, int field_index)"
- keyString: "mysql_field_seek(int result, int field_offset)"
- keyString: "mysql_field_table(int result, int field_offset)"
- keyString: "mysql_field_type(string result, int field_offset)"
- keyString: "mysql_free_result(int result)"
- keyString: "mysql_get_client_info()"
- keyString: "mysql_get_host_info([int link_identifier])"
- keyString: "mysql_get_proto_info([int link_identifier])"
- keyString: "mysql_get_server_info([int link_identifier])"
- keyString: "mysql_info([int link_identifier])"
- keyString: "mysql_insert_id(int [link_identifier])"
- keyString: "mysql_list_dbs(int [link_identifier])"
- keyString: "mysql_list_fields(string database_name, string table_name, int [link_identifier])"
- keyString: "mysql_list_processes([int link_identifier])"
- keyString: "mysql_list_tables(string database, int [link_identifier])"
- keyString: "mysql_num_fields(int result)"
- keyString: "mysql_num_rows(int result)"
- keyString: "mysql_pconnect(string [hostname [:port] [:/path/to/socket]] , string
    [username], string [password])"
- keyString: "mysql_ping([int link_identifier])"
- keyString: "mysql_query(string query, int [link_identifier])"
- keyString: "mysql_real_escape_string(string unescaped_string [, int link_identifier])"
- keyString: "mysql_result(int result, int row, mixed [field])"
- keyString: "mysql_select_db(string database_name, int [link_identifier])"
- keyString: "mysql_stat([int link_identifier])"
- keyString: "mysql_tablename(int result, int i)"
- keyString: "mysql_thread_id([int link_identifier])"
- keyString: "mysql_unbuffered_query(string query [, int link_identifier])"
- keyString: "mysqli::get_connection_stats()"
- keyString: "mysqli::poll(array &read , array &error , array &reject , int $sec
    [, int usec])"
- keyString: "mysqli::reap_async_query()"
- keyString: "mysqli_error_list(mysqli link)"
- keyString: "mysqli_fetch_all(mysqli_result result [, int resulttype])"
- keyString: "mysqli_get_connection_stats(mysqli link)"
- keyString: "mysqli_get_links_stats()"
- keyString: "mysqli_poll(array &read , array &error , array &reject , int sec [,
    int usec])"
- keyString: "mysqli_reap_async_query(mysql link)"
- keyString: "mysqli_result::fetch_all([ int resulttype])"
- keyString: "mysqli_stmt_error_list(mysqli_stmt stmt)"
- keyString: "N_CS_PRECEDES"
- keyString: "N_SEP_BY_SPACE"
- keyString: "N_SIGN_POSN"
- keyString: "natcasesort()"
- keyString: "natsort()"
- keyString: "NEGATIVE_SIGN"
- keyString: "new"
- keyString: "next(array &array)"
- keyString: "next_sibling()"
- keyString: "ngettext()"
- keyString: "nl2br(string string)"
- keyString: "nl_langinfo()"
- keyString: "NOEXPR"
- keyString: "NOSTR"
- keyString: "NOTICE"
- keyString: "nsapi_request_headers()"
- keyString: "nsapi_response_headers()"
- keyString: "nsapi_virtual(string uri)"
- keyString: "number_format(float number [, int decimals [, string dec_point, string
    thousands_sep]])"
- keyString: "ob_clean()"
- keyString: "ob_end_clean()"
- keyString: "ob_end_flush()"
- keyString: "ob_flush()"
- keyString: "ob_get_clean()"
- keyString: "ob_get_contents()"
- keyString: "ob_get_length()"
- keyString: "ob_get_level()"
- keyString: "ob_get_status([bool full_status])"
- keyString: "ob_gzhandler(string buffer, int mode)"
- keyString: "ob_iconv_handler(string contents, int status)"
- keyString: "ob_implicit_flush([int flag])"
- keyString: "ob_start([callback output_callback [, int chunk_size [, bool erase]]])"
- keyString: "ob_tidyhandler(string input [, int mode])"
- keyString: "OCI-Collection"
- keyString: "OCI-Collection::append()"
- keyString: "OCI-Collection::assign()"
- keyString: "OCI-Collection::assignElem()"
- keyString: "OCI-Collection::free()"
- keyString: "OCI-Collection::getElem()"
- keyString: "OCI-Collection::max()"
- keyString: "OCI-Collection::size()"
- keyString: "OCI-Collection::trim()"
- keyString: "OCI-Lob"
- keyString: "OCI-Lob::append()"
- keyString: "OCI-Lob::close()"
- keyString: "OCI-Lob::eof()"
- keyString: "OCI-Lob::erase()"
- keyString: "OCI-Lob::export()"
- keyString: "OCI-Lob::flush()"
- keyString: "OCI-Lob::free()"
- keyString: "OCI-Lob::getBuffering()"
- keyString: "OCI-Lob::import()"
- keyString: "OCI-Lob::load()"
- keyString: "OCI-Lob::read()"
- keyString: "OCI-Lob::rewind()"
- keyString: "OCI-Lob::save()"
- keyString: "OCI-Lob::saveFile()"
- keyString: "OCI-Lob::seek()"
- keyString: "OCI-Lob::setBuffering()"
- keyString: "OCI-Lob::size()"
- keyString: "OCI-Lob::tell()"
- keyString: "OCI-Lob::truncate()"
- keyString: "OCI-Lob::write()"
- keyString: "OCI-Lob::writeTemporary()"
- keyString: "OCI-Lob::writeToFile()"
- keyString: "oci_bind_array_by_name()"
- keyString: "oci_bind_by_name()"
- keyString: "oci_cancel()"
- keyString: "oci_client_version()"
- keyString: "oci_close()"
- keyString: "oci_commit()"
- keyString: "oci_connect()"
- keyString: "oci_define_by_name()"
- keyString: "oci_error()"
- keyString: "oci_execute()"
- keyString: "oci_fetch()"
- keyString: "oci_fetch_all()"
- keyString: "oci_fetch_array()"
- keyString: "oci_fetch_assoc()"
- keyString: "oci_fetch_object()"
- keyString: "oci_fetch_row()"
- keyString: "oci_field_is_null()"
- keyString: "oci_field_name()"
- keyString: "oci_field_precision()"
- keyString: "oci_field_scale()"
- keyString: "oci_field_size()"
- keyString: "oci_field_type()"
- keyString: "oci_field_type_raw()"
- keyString: "oci_free_statement()"
- keyString: "oci_get_implicit_resultset()"
- keyString: "oci_internal_debug()"
- keyString: "oci_lob_copy()"
- keyString: "oci_lob_is_equal()"
- keyString: "oci_new_collection()"
- keyString: "oci_new_connect()"
- keyString: "oci_new_cursor()"
- keyString: "oci_new_descriptor()"
- keyString: "oci_num_fields()"
- keyString: "oci_num_rows()"
- keyString: "oci_parse()"
- keyString: "oci_password_change()"
- keyString: "oci_pconnect()"
- keyString: "oci_result()"
- keyString: "oci_rollback()"
- keyString: "oci_server_version()"
- keyString: "oci_set_action()"
- keyString: "oci_set_client_identifier()"
- keyString: "oci_set_client_info()"
- keyString: "oci_set_edition()"
- keyString: "oci_set_module_name()"
- keyString: "oci_set_prefetch()"
- keyString: "oci_statement_type()"
- keyString: "octdec(string octal_string)"
- keyString: "odbc_autocommit()"
- keyString: "odbc_binmode()"
- keyString: "odbc_close()"
- keyString: "odbc_close_all()"
- keyString: "odbc_columnprivileges()"
- keyString: "odbc_columns()"
- keyString: "odbc_commit()"
- keyString: "odbc_connect()"
- keyString: "odbc_cursor()"
- keyString: "odbc_data_source()"
- keyString: "odbc_do()"
- keyString: "odbc_error()"
- keyString: "odbc_errormsg()"
- keyString: "odbc_exec()"
- keyString: "odbc_execute()"
- keyString: "odbc_fetch_array()"
- keyString: "odbc_fetch_into()"
- keyString: "odbc_fetch_object()"
- keyString: "odbc_fetch_row()"
- keyString: "odbc_field_len()"
- keyString: "odbc_field_name()"
- keyString: "odbc_field_num()"
- keyString: "odbc_field_precision()"
- keyString: "odbc_field_scale()"
- keyString: "odbc_field_type()"
- keyString: "odbc_foreignkeys()"
- keyString: "odbc_free_result()"
- keyString: "odbc_gettypeinfo()"
- keyString: "odbc_longreadlen()"
- keyString: "odbc_next_result()"
- keyString: "odbc_num_fields()"
- keyString: "odbc_num_rows()"
- keyString: "odbc_pconnect()"
- keyString: "odbc_prepare()"
- keyString: "odbc_primarykeys()"
- keyString: "odbc_procedurecolumns()"
- keyString: "odbc_procedures()"
- keyString: "odbc_result()"
- keyString: "odbc_result_all()"
- keyString: "odbc_rollback()"
- keyString: "odbc_setoption()"
- keyString: "odbc_specialcolumns()"
- keyString: "odbc_statistics()"
- keyString: "odbc_tableprivileges()"
- keyString: "odbc_tables()"
- keyString: "opendir(string path)"
- keyString: "openlog(string ident, int option, int facility)"
- keyString: "OPENSSL_CIPHER_AES_128_CBC"
- keyString: "OPENSSL_CIPHER_AES_192_CBC"
- keyString: "OPENSSL_CIPHER_AES_256_CBC"
- keyString: "openssl_cipher_iv_length()"
- keyString: "openssl_csr_export()"
- keyString: "openssl_csr_export_to_file()"
- keyString: "openssl_csr_get_public_key(mixed csr [, bool use_shortnames])"
- keyString: "openssl_csr_get_subject(mixed csr [, bool use_shortnames])"
- keyString: "openssl_csr_new()"
- keyString: "openssl_csr_sign()"
- keyString: "openssl_decrypt()"
- keyString: "OPENSSL_DEFAULT_STREAM_CIPHERS"
- keyString: "openssl_dh_compute_key()"
- keyString: "openssl_digest()"
- keyString: "openssl_encrypt()"
- keyString: "openssl_error_string()"
- keyString: "openssl_free_key()"
- keyString: "openssl_get_cert_locations()"
- keyString: "openssl_get_cipher_methods()"
- keyString: "openssl_get_md_methods()"
- keyString: "openssl_get_privatekey()"
- keyString: "openssl_get_publickey()"
- keyString: "openssl_open()"
- keyString: "openssl_pkcs12_export()"
- keyString: "openssl_pkcs12_export_to_file()"
- keyString: "openssl_pkcs12_read()"
- keyString: "openssl_pkcs7_decrypt()"
- keyString: "openssl_pkcs7_encrypt()"
- keyString: "openssl_pkcs7_sign()"
- keyString: "openssl_pkcs7_verify()"
- keyString: "openssl_pkey_export()"
- keyString: "openssl_pkey_export_to_file()"
- keyString: "openssl_pkey_free()"
- keyString: "openssl_pkey_get_details(resource key)"
- keyString: "openssl_pkey_get_private()"
- keyString: "openssl_pkey_get_public()"
- keyString: "openssl_pkey_new()"
- keyString: "openssl_private_decrypt()"
- keyString: "openssl_private_encrypt()"
- keyString: "openssl_public_decrypt()"
- keyString: "openssl_public_encrypt()"
- keyString: "openssl_random_pseudo_bytes()"
- keyString: "openssl_random_pseudo_bytes(int length [, bool &crypto_strong])"
- keyString: "OPENSSL_RAW_DATA"
- keyString: "openssl_seal()"
- keyString: "openssl_sign()"
- keyString: "openssl_spki_new()"
- keyString: "openssl_spki_verify()"
- keyString: "openssl_spki_export_challenge()"
- keyString: "openssl_spki_export()"
- keyString: "openssl_verify()"
- keyString: "OPENSSL_VERSION_NUMBER"
- keyString: "OPENSSL_VERSION_TEXT"
- keyString: "openssl_x509_check_private_key()"
- keyString: "openssl_x509_checkpurpose()"
- keyString: "openssl_x509_export()"
- keyString: "openssl_x509_export_to_file()"
- keyString: "openssl_x509_fingerprint()"
- keyString: "openssl_x509_free()"
- keyString: "openssl_x509_parse()"
- keyString: "openssl_x509_read()"
- keyString: "OPENSSL_ZERO_PADDING"
- keyString: "or"
- keyString: "ord(string string)"
- keyString: "P_CS_PRECEDES"
- keyString: "P_SEP_BY_SPACE"
- keyString: "P_SIGN_POSN"
- keyString: "pack(string format [, mixed args])"
- keyString: "parse_ini_file(string filename [, bool process_sections])"
- keyString: "parse_ini_string(string ini [, bool process_sections [, int scanner_mode]])"
- keyString: "parse_str(string str [, array arr])"
- keyString: "parse_url(string url)"
- keyString: "passthru(string command [, int &return_var])"
- keyString: "password_get_info(string hash)"
- keyString: "password_hash(string password , integer algo [, array options])"
- keyString: "password_needs_rehash(string hash , string algo [, string options])"
- keyString: "password_verify(string password , string hash)"
- keyString: "pathinfo(string path [, int options])"
- keyString: "PATHINFO_BASENAME"
- keyString: "PATHINFO_DIRNAME"
- keyString: "PATHINFO_EXTENSION"
- keyString: "PATHINFO_FILENAME"
- keyString: "pclose(int handle)"
- keyString: "pcntl_alarm(int seconds)"
- keyString: "pcntl_exec(string path [, array args [, array envs]])"
- keyString: "pcntl_fork()"
- keyString: "pcntl_getpriority([ int pid = getmypid() [, int process_identifier]])"
- keyString: "pcntl_setpriority(int priority [, int pid [, int process_identifier]])"
- keyString: "pcntl_signal(int signo , callable handler [, bool restart_syscalls])"
- keyString: "pcntl_signal_dispatch()"
- keyString: "pcntl_sigprocmask(int how , array set [, array &oldset])"
- keyString: "pcntl_sigtimedwait(array set [, array &siginfo [, int seconds [, int
    nanoseconds]]])"
- keyString: "pcntl_sigwaitinfo(array set [, array &siginfo])"
- keyString: "pcntl_wait(int &status [, int options])"
- keyString: "pcntl_waitpid(int pid , int &status [, int options])"
- keyString: "pcntl_wexitstatus(int status)"
- keyString: "pcntl_wifexited(int status)"
- keyString: "pcntl_wifsignaled(int status)"
- keyString: "pcntl_wifstopped(int status)"
- keyString: "pcntl_wstopsig(int status)"
- keyString: "pcntl_wtermsig(int status)"
- keyString: "pdf_add_annotation()"
- keyString: "pdf_add_bookmark()"
- keyString: "pdf_add_launchlink()"
- keyString: "pdf_add_locallink()"
- keyString: "pdf_add_note()"
- keyString: "pdf_add_outline()"
- keyString: "pdf_add_pdflink()"
- keyString: "pdf_add_thumbnail()"
- keyString: "pdf_add_weblink()"
- keyString: "pdf_arc()"
- keyString: "pdf_arcn()"
- keyString: "pdf_attach_file()"
- keyString: "pdf_begin_page()"
- keyString: "pdf_begin_pattern()"
- keyString: "pdf_begin_template()"
- keyString: "pdf_circle()"
- keyString: "pdf_clip()"
- keyString: "pdf_close()"
- keyString: "pdf_close_image()"
- keyString: "pdf_close_pdi()"
- keyString: "pdf_close_pdi_page()"
- keyString: "pdf_closepath()"
- keyString: "pdf_closepath_fill_stroke()"
- keyString: "pdf_closepath_stroke()"
- keyString: "pdf_concat()"
- keyString: "pdf_continue_text()"
- keyString: "pdf_curveto()"
- keyString: "pdf_delete()"
- keyString: "pdf_end_page()"
- keyString: "pdf_end_pattern()"
- keyString: "pdf_end_template()"
- keyString: "pdf_endpath()"
- keyString: "pdf_fill()"
- keyString: "pdf_fill_stroke()"
- keyString: "pdf_findfont()"
- keyString: "pdf_get_buffer()"
- keyString: "pdf_get_font()"
- keyString: "pdf_get_fontname()"
- keyString: "pdf_get_fontsize()"
- keyString: "pdf_get_image_height()"
- keyString: "pdf_get_image_width()"
- keyString: "pdf_get_majorversion()"
- keyString: "pdf_get_minorversion()"
- keyString: "pdf_get_parameter()"
- keyString: "pdf_get_pdi_parameter()"
- keyString: "pdf_get_pdi_value()"
- keyString: "pdf_get_value()"
- keyString: "pdf_initgraphics()"
- keyString: "pdf_lineto()"
- keyString: "pdf_makespotcolor()"
- keyString: "pdf_moveto()"
- keyString: "pdf_new()"
- keyString: "pdf_open()"
- keyString: "pdf_open_CCITT()"
- keyString: "pdf_open_file()"
- keyString: "pdf_open_gif()"
- keyString: "pdf_open_image()"
- keyString: "pdf_open_image_file()"
- keyString: "pdf_open_jpeg()"
- keyString: "pdf_open_memory_image()"
- keyString: "pdf_open_pdi()"
- keyString: "pdf_open_pdi_page()"
- keyString: "pdf_open_png()"
- keyString: "pdf_open_tiff()"
- keyString: "pdf_place_image()"
- keyString: "pdf_place_pdi_page()"
- keyString: "pdf_restore()"
- keyString: "pdf_rotate()"
- keyString: "pdf_save()"
- keyString: "pdf_scale()"
- keyString: "pdf_set_border_color()"
- keyString: "pdf_set_border_dash()"
- keyString: "pdf_set_border_style()"
- keyString: "pdf_set_char_spacing()"
- keyString: "pdf_set_duration()"
- keyString: "pdf_set_font()"
- keyString: "pdf_set_horiz_scaling()"
- keyString: "pdf_set_info()"
- keyString: "pdf_set_info_author()"
- keyString: "pdf_set_info_creator()"
- keyString: "pdf_set_info_keywords()"
- keyString: "pdf_set_info_subject()"
- keyString: "pdf_set_info_title()"
- keyString: "pdf_set_leading()"
- keyString: "pdf_set_parameter()"
- keyString: "pdf_set_text_matrix()"
- keyString: "pdf_set_text_pos()"
- keyString: "pdf_set_text_rendering()"
- keyString: "pdf_set_text_rise()"
- keyString: "pdf_set_value()"
- keyString: "pdf_set_word_spacing()"
- keyString: "pdf_setcolor()"
- keyString: "pdf_setdash()"
- keyString: "pdf_setflat()"
- keyString: "pdf_setfont()"
- keyString: "pdf_setgray()"
- keyString: "pdf_setgray_fi()"
- keyString: "pdf_setgray_stroke()"
- keyString: "pdf_setlinecap()"
- keyString: "pdf_setlinejoin()"
- keyString: "pdf_setlinewidth()"
- keyString: "pdf_setmatrix()"
- keyString: "pdf_setmiterlimit()"
- keyString: "pdf_setpolydash()"
- keyString: "pdf_setrgbcolor()"
- keyString: "pdf_setrgbcolor_fill()"
- keyString: "pdf_setrgbcolor_stroke()"
- keyString: "pdf_show()"
- keyString: "pdf_show_boxed()"
- keyString: "pdf_show_xy()"
- keyString: "pdf_skew()"
- keyString: "pdf_stringwidth()"
- keyString: "pdf_stroke()"
- keyString: "pdf_translate()"
- keyString: "PEAR_EXTENSION_DIR"
- keyString: "PEAR_INSTALL_DIR"
- keyString: "pfsockopen(string hostname, int port [, int errno [, string errstr
    [, int timeout]]])"
- keyString: "pg_affected_rows(int result)"
- keyString: "pg_cancel_query(int connection)"
- keyString: "pg_client_encoding([resource connection])"
- keyString: "pg_close(int connection)"
- keyString: "pg_connect(string connection_string)"
- keyString: "pg_connect_poll([resource connection])"
- keyString: "pg_connection_busy(int connection)"
- keyString: "pg_connection_reset(int connection)"
- keyString: "pg_connection_status(int connection)"
- keyString: "pg_convert(int connection, string table_name, array assoc_array [,
    int options])"
- keyString: "pg_consume_input(resource connection)"
- keyString: "pg_copy_from(int connection, string table_name, array rows [, string
    delimiter [, string null_as]])"
- keyString: "pg_copy_to(int connection, string table_name [, string delimiter [,
    string null_as]])"
- keyString: "pg_dbname(int connection)"
- keyString: "pg_delete(int connection, string table_name, array assoc_array [,
    int options])"
- keyString: "pg_end_copy([int connection])"
- keyString: "pg_escape_bytea(string data)"
- keyString: "pg_escape_identifier([ rint connection], string data)"
- keyString: "pg_escape_literal([ int connection], string data)"
- keyString: "pg_escape_string(string data)"
- keyString: "pg_execute(int connection, string stmtname, array params)"
- keyString: "pg_fetch_all(resource result)"
- keyString: "pg_fetch_all_columns(resource result [, int column])"
- keyString: "pg_fetch_array(resource result [, int row [, int result_type]])"
- keyString: "pg_fetch_assoc(resource result [, int row])"
- keyString: "pg_fetch_object(resource result, int row [, int result_type])"
- keyString: "pg_fetch_result(resource result, int row, mixed field)"
- keyString: "pg_fetch_row(resource result, int row)"
- keyString: "pg_field_is_null(resource result, int row, mixed field)"
- keyString: "pg_field_name(resource result, int field_number)"
- keyString: "pg_field_num(resource result, string field_name)"
- keyString: "pg_field_prtlen(resource result, int row_number, string field_name)"
- keyString: "pg_field_size(resource result, int field_number)"
- keyString: "pg_field_table(resource result , int field_number [, bool oid_only])"
- keyString: "pg_field_type(resource result, int field_number)"
- keyString: "pg_field_type_oid(resource result, int field_number)"
- keyString: "pg_flush(resource connection)"
- keyString: "pg_free_result(resource result)"
- keyString: "pg_get_notify(resource connection [, int result_type])"
- keyString: "pg_get_pid(resource connection)"
- keyString: "pg_get_result([resource connection])"
- keyString: "pg_host(resource connection)"
- keyString: "pg_insert(resource connection, string table_name, array assoc_array
    [, bool convert])"
- keyString: "pg_last_error(resource connection)"
- keyString: "pg_last_notice(resource connection)"
- keyString: "pg_last_oid(resource result)"
- keyString: "pg_last_oid(resource result)"
- keyString: "pg_lo_close(resource large_object)"
- keyString: "pg_lo_create(resource connection)"
- keyString: "pg_lo_export(int oid, string pathname [, resource connection])"
- keyString: "pg_lo_import(string pathname [, resource connection])"
- keyString: "pg_lo_open(resource connection, int oid, string mode)"
- keyString: "pg_lo_read(resource large_object, int len)"
- keyString: "pg_lo_read_all(resource large_object)"
- keyString: "pg_lo_seek(resource large_object, int offset [, int whence])"
- keyString: "pg_lo_tell(resource large_object)"
- keyString: "pg_lo_unlink(resource connection, int oid)"
- keyString: "pg_lo_write(resource large_object, string data)"
- keyString: "pg_meta_data(resource connection, string table_name)"
- keyString: "pg_num_fields(resource result)"
- keyString: "pg_num_rows(resource result)"
- keyString: "pg_options(resource connection)"
- keyString: "pg_parameter_status([ resource connection], string param_name)"
- keyString: "pg_pconnect(string connection_string)"
- keyString: "pg_ping(resource connection)"
- keyString: "pg_port(resource connection)"
- keyString: "pg_prepare(resource connection, string stmtname, string query)"
- keyString: "pg_put_line([resource connection, string data])"
- keyString: "pg_query(resource connection, string query)"
- keyString: "pg_query_params(resource connection, string query, array params)"
- keyString: "pg_result_error(resource result)"
- keyString: "pg_result_error_field(resource result, int fieldcode)"
- keyString: "pg_result_seek(resource result, int offset)"
- keyString: "pg_result_status(resource result)"
- keyString: "pg_select(resource connection, string table_name, array assoc_array
    [, bool convert])"
- keyString: "pg_send_execute(resource connection, string stmtname, array params)"
- keyString: "pg_send_prepare(resource connection, string stmtname, string query)"
- keyString: "pg_send_query(resource connection, string query)"
- keyString: "pg_send_query_params(resource connection, string query, array params)"
- keyString: "pg_set_client_encoding([resource connection, string encoding])"
- keyString: "pg_set_error_verbosity(resource connection, int verbosity)"
- keyString: "pg_socket(resource connection)"
- keyString: "pg_trace(string filename, string [mode] [, resource connection])"
- keyString: "pg_transaction_status(resource connection)"
- keyString: "pg_tty(resource connection)"
- keyString: "pg_unescape_bytea(string data)"
- keyString: "pg_untrace([resource connection])"
- keyString: "pg_update(resource connection, string table_name, array condition,
    array data [, bool convert])"
- keyString: "pg_version([ resource connection])"
- keyString: "pg_version([resource connection])"
- keyString: "PGSQL_CONNECT_ASYNC"
- keyString: "PGSQL_CONNECTION_AUTH_OK"
- keyString: "PGSQL_CONNECTION_AWAITING_RESPONSE"
- keyString: "PGSQL_CONNECTION_MADE"
- keyString: "PGSQL_CONNECTION_SETENV"
- keyString: "PGSQL_CONNECTION_SSL_STARTUP"
- keyString: "PGSQL_CONNECTION_STARTED"
- keyString: "PGSQL_DML_ESCAPE"
- keyString: "PGSQL_POLLING_ACTIVE"
- keyString: "PGSQL_POLLING_FAILED"
- keyString: "PGSQL_POLLING_OK"
- keyString: "PGSQL_POLLING_READING"
- keyString: "PGSQL_POLLING_WRITING"
- keyString: "PHP_BINDIR"
- keyString: "php_check_syntax(string filename [, string &error_message])"
- keyString: "PHP_CONFIG_FILE_PATH"
- keyString: "PHP_DATADIR"
- keyString: "PHP_EOL"
- keyString: "PHP_EXTENSION_DIR"
- keyString: "php_ini_scanned_files()"
- keyString: "PHP_LIBDIR"
- keyString: "PHP_LOCALSTATEDIR"
- keyString: "PHP_MAXPATHLEN"
- keyString: "PHP_OS"
- keyString: "PHP_OUTPUT_HANDLER_CLEAN"
- keyString: "PHP_OUTPUT_HANDLER_CLEANABLE"
- keyString: "PHP_OUTPUT_HANDLER_CONT"
- keyString: "PHP_OUTPUT_HANDLER_DISABLED"
- keyString: "PHP_OUTPUT_HANDLER_END"
- keyString: "PHP_OUTPUT_HANDLER_FINAL"
- keyString: "PHP_OUTPUT_HANDLER_FLUSH"
- keyString: "PHP_OUTPUT_HANDLER_FLUSHABLE"
- keyString: "PHP_OUTPUT_HANDLER_REMOVABLE"
- keyString: "PHP_OUTPUT_HANDLER_START"
- keyString: "PHP_OUTPUT_HANDLER_STARTED"
- keyString: "PHP_OUTPUT_HANDLER_STDFLAGS"
- keyString: "PHP_OUTPUT_HANDLER_WRITE"
- keyString: "php_sapi_name()"
- keyString: "PHP_SESSION_ACTIVE"
- keyString: "PHP_SESSION_DISABLED"
- keyString: "PHP_SESSION_NONE"
- keyString: "php_strip_whitespace(string filename)"
- keyString: "PHP_SYSCONFDIR"
- keyString: "php_uname()"
- keyString: "PHP_VERSION"
- keyString: "PHP_WINDOWS_NT_DOMAIN_CONTROLLER"
- keyString: "PHP_WINDOWS_NT_SERVER"
- keyString: "PHP_WINDOWS_NT_WORKSTATION"
- keyString: "PHP_WINDOWS_VERSION_BUILD"
- keyString: "PHP_WINDOWS_VERSION_MAJOR"
- keyString: "PHP_WINDOWS_VERSION_MINOR"
- keyString: "PHP_WINDOWS_VERSION_PLATFORM"
- keyString: "PHP_WINDOWS_VERSION_PRODUCTTYPE"
- keyString: "PHP_WINDOWS_VERSION_SP_MAJOR"
- keyString: "PHP_WINDOWS_VERSION_SP_MINOR"
- keyString: "PHP_WINDOWS_VERSION_SUITEMASK"
- keyString: "phpcredits(int flag)"
- keyString: "phpinfo([int what])"
- keyString: "phpversion()"
- keyString: "pi()"
- keyString: "PM_STR"
- keyString: "png2wbmp()"
- keyString: "POLL_ERR"
- keyString: "POLL_HUP"
- keyString: "POLL_IN"
- keyString: "POLL_MSG"
- keyString: "POLL_OUT"
- keyString: "POLL_PRI"
- keyString: "popen(string command, string mode)"
- keyString: "pos(array &array)"
- keyString: "POSITIVE_SIGN"
- keyString: "posix_access(string file [, int mode])"
- keyString: "posix_ctermid()"
- keyString: "posix_errno()"
- keyString: "posix_get_last_error()"
- keyString: "posix_getcwd()"
- keyString: "posix_getegid()"
- keyString: "posix_geteuid()"
- keyString: "posix_getgid()"
- keyString: "posix_getgrgid()"
- keyString: "posix_getgrnam()"
- keyString: "posix_getgroups()"
- keyString: "posix_getlogin()"
- keyString: "posix_getpgid()"
- keyString: "posix_getpgrp()"
- keyString: "posix_getpid()"
- keyString: "posix_getppid()"
- keyString: "posix_getpwnam()"
- keyString: "posix_getpwuid()"
- keyString: "posix_getrlimit()"
- keyString: "posix_getsid()"
- keyString: "posix_getuid()"
- keyString: "posix_initgroups(string name , int base_group_id)"
- keyString: "posix_isatty()"
- keyString: "posix_kill()"
- keyString: "posix_mkfifo()"
- keyString: "posix_setegid()"
- keyString: "posix_seteuid()"
- keyString: "posix_setgid()"
- keyString: "posix_setpgid()"
- keyString: "posix_setsid()"
- keyString: "posix_setuid()"
- keyString: "posix_strerror(int errno)"
- keyString: "posix_times()"
- keyString: "posix_ttyname()"
- keyString: "posix_uname()"
- keyString: "pow(number base, number exp)"
- keyString: "PREG_BACKTRACK_LIMIT_ERROR"
- keyString: "PREG_BAD_UTF8_ERROR"
- keyString: "PREG_BAD_UTF8_OFFSET_ERROR"
- keyString: "preg_filter(mixed pattern , mixed replacement , mixed subject [, int
    limit [, int &count]])"
- keyString: "preg_grep(string pattern, array input)"
- keyString: "PREG_INTERNAL_ERROR"
- keyString: "preg_last_error()"
- keyString: "preg_match(string pattern, string subject [, array &matches [, int
    flags [, int offset]]])"
- keyString: "preg_match_all(string pattern, string subject, array &matches [, int
    flags [, int offset]])"
- keyString: "PREG_NO_ERROR"
- keyString: "preg_quote(string str [, string delimiter])"
- keyString: "PREG_RECURSION_LIMIT_ERROR"
- keyString: "preg_replace(mixed pattern, mixed replacement, mixed subject [, int
    limit])"
- keyString: "preg_replace_callback(mixed pattern, mixed callback, mixed subject
    [, int limit])"
- keyString: "preg_split(string pattern, string subject [, int limit [, int flags]])"
- keyString: "prev(array &array)"
- keyString: "print(string arg)"
- keyString: "print_r(mixed expression [, bool return])"
- keyString: "printf(string format [, mixed args])"
- keyString: "private"
- keyString: "proc_close()"
- keyString: "proc_get_status()"
- keyString: "proc_nice(int increment)"
- keyString: "proc_open()"
- keyString: "process()"
- keyString: "protected"
- keyString: "pspell_add_to_personal(int dictionary_link , string word)"
- keyString: "pspell_add_to_session(int dictionary_link , string word)"
- keyString: "pspell_check(int dictionary_link , string word)"
- keyString: "pspell_clear_session(int dictionary_link)"
- keyString: "pspell_config_create(string language [, string spelling [, string
    jargon [, string encoding]]])"
- keyString: "pspell_config_data_dir(int conf , string directory)"
- keyString: "pspell_config_data_dir(int conf , string directory)"
- keyString: "pspell_config_dict_dir(int conf , string directory)"
- keyString: "pspell_config_dict_dir(int conf , string directory)"
- keyString: "pspell_config_mode(int dictionary_link , int mode)"
- keyString: "pspell_config_personal(int dictionary_link , string file)"
- keyString: "pspell_config_repl(int dictionary_link , string file)"
- keyString: "pspell_config_runtogether(int dictionary_link , bool flag)"
- keyString: "pspell_config_save_repl(int dictionary_link , bool flag)"
- keyString: "pspell_new(string language [, string spelling [, string jargon [,
    string encoding [, int mode]]]])"
- keyString: "pspell_new_config(int config)"
- keyString: "pspell_new_personal(string personal , string language [, string spelling
    [, string jargon [, string encoding [, int mode]]]])"
- keyString: "pspell_save_wordlist(int dictionary_link)"
- keyString: "pspell_store_replacement(int dictionary_link , string misspelled ,
    string correct)"
- keyString: "pspell_suggest(int dictionary_link , string word)"
- keyString: "public"
- keyString: "public_id()"
- keyString: "putenv(string setting)"
- keyString: "quoted_printable_decode(string str)"
- keyString: "quoted_printable_encode(string str)"
- keyString: "quotemeta(string str)"
- keyString: "rad2deg(double number)"
- keyString: "RADIXCHAR"
- keyString: "rand([int min, int max])"
- keyString: "range(number low, number high [, number step])"
- keyString: "rawurldecode(string str)"
- keyString: "rawurlencode(string str)"
- keyString: "read_exif_data(string filename [, string sections [, bool arrays [,
    bool thumbnail]]])"
- keyString: "read_exif_data(string filename [, string sections [, bool arrays [,
    bool thumbnail]]])"
- keyString: "readdir(resource dir_handle)"
- keyString: "readfile(string filename [, bool use_include_path [, resource context]])"
- keyString: "readgzfile(string filename, int [use_include_path])"
- keyString: "readline(string [prompt])"
- keyString: "readline_add_history()"
- keyString: "readline_callback_handler_install(string prompt , callable callback)"
- keyString: "readline_callback_handler_remove()"
- keyString: "readline_callback_read_char()"
- keyString: "readline_clear_history()"
- keyString: "readline_completion_function()"
- keyString: "readline_info()"
- keyString: "readline_list_history()"
- keyString: "readline_on_new_line()"
- keyString: "readline_read_history()"
- keyString: "readline_redisplay()"
- keyString: "readline_write_history()"
- keyString: "readlink(string path)"
- keyString: "realpath(string path)"
- keyString: "register_shutdown_function(string func)"
- keyString: "register_tick_function(string func [, mixed arg])"
- keyString: "rename(string oldname, string newname)"
- keyString: "require()"
- keyString: "require_once()"
- keyString: "reset(array &array)"
- keyString: "restore_error_handler()"
- keyString: "return"
- keyString: "rewind(resource handle)"
- keyString: "rewinddir(resource dir_handle)"
- keyString: "rmdir(string dirname)"
- keyString: "round(double val, int [precision])"
- keyString: "rsort(array &array [, int sort_flags])"
- keyString: "rtrim(string str [, string charlist])"
- keyString: "scandir(string directory [, int sorting_order [, resource context]])"
- keyString: "SEEK_CUR"
- keyString: "SEEK_END"
- keyString: "SEEK_SET"
- keyString: "SEGV_ACCERR"
- keyString: "SEGV_MAPERR"
- keyString: "sem_acquire()"
- keyString: "sem_get()"
- keyString: "sem_release()"
- keyString: "sem_remove()"
- keyString: "serialize(mixed value)"
- keyString: "session_cache_expire([int new_cache_expire])"
- keyString: "session_cache_limiter([string cache_limiter])"
- keyString: "session_decode(string data)"
- keyString: "session_destroy()"
- keyString: "session_encode()"
- keyString: "session_get_cookie_params()"
- keyString: "session_id([string id])"
- keyString: "session_module_name([string module])"
- keyString: "session_name([string name])"
- keyString: "session_regenerate_id()"
- keyString: "session_register_shutdown()"
- keyString: "session_save_path([string path])"
- keyString: "session_set_cookie_params(int lifetime [, string path [, string domain
    [, bool secure]]])"
- keyString: "session_set_save_handler(string open, string close, string read, string
    write, string destroy, string gc)"
- keyString: "session_abort()"
- keyString: "session_reset()"
- keyString: "session_start()"
- keyString: "session_status()"
- keyString: "session_unset()"
- keyString: "session_write_close()"
- keyString: "set_attribute(string name, string value)"
- keyString: "set_error_handler(callback error_handler [, int error_types])"
- keyString: "set_file_buffer(resource stream, int buffer)"
- keyString: "set_magic_quotes_runtime(int new_setting)"
- keyString: "set_time_limit(int seconds)"
- keyString: "setcookie(string name [, string value [, int expire [, string path
    [, string domain [, int secure]]]]])"
- keyString: "setlocale(mixed category, string locale)"
- keyString: "setrawcookie(string name [, string value [, int expire [, string path
    [, string domain [, bool secure]]]]])"
- keyString: "settype(mixed var, string type)"
- keyString: "sha1(string str [, bool raw_output])"
- keyString: "sha1_file(string filename [, bool raw_output])"
- keyString: "sheet_file()"
- keyString: "shell_exec()"
- keyString: "shm_attach()"
- keyString: "shm_detach()"
- keyString: "shm_get_var()"
- keyString: "shm_has_var(resource shm_identifier , int variable_key)"
- keyString: "shm_put_var()"
- keyString: "shm_remove()"
- keyString: "shm_remove_var()"
- keyString: "shmop_close()"
- keyString: "shmop_close(int shmid)"
- keyString: "shmop_delete()"
- keyString: "shmop_delete(int shmid)"
- keyString: "shmop_open()"
- keyString: "shmop_open(int key , string flags , int mode , int size)"
- keyString: "shmop_read()"
- keyString: "shmop_read(int shmid , int start , int count)"
- keyString: "shmop_size()"
- keyString: "shmop_size(int shmid)"
- keyString: "shmop_write()"
- keyString: "shmop_write(int shmid , string data , int offset)"
- keyString: "show_source(string filename)"
- keyString: "shuffle(array &array)"
- keyString: "SI_ASYNCIO"
- keyString: "SI_KERNEL"
- keyString: "SI_MESGQ"
- keyString: "SI_NOINFO"
- keyString: "SI_QUEUE"
- keyString: "SI_SIGIO"
- keyString: "SI_TIMER"
- keyString: "SI_TKILL"
- keyString: "SI_USER"
- keyString: "SIG_BLOCK"
- keyString: "SIG_SETMASK"
- keyString: "SIG_UNBLOCK"
- keyString: "similar_text(string first, string second [, float percent])"
- keyString: "simplexml_import_dom(DOMNode node [, string class_name])"
- keyString: "simplexml_load_file(string filename [, string class_name [, int options
    [, string ns [, bool is_prefix]]]])"
- keyString: "simplexml_load_string(string data [, string class_name [, int options
    [, string ns [, bool is_prefix]]]])"
- keyString: "sin(float arg)"
- keyString: "sinh(float arg)"
- keyString: "sizeof(mixed var [, int mode])"
- keyString: "sleep(int seconds)"
- keyString: "snmp2_get(string host , string community , string object_id [, string
    timeout [, string retries]])"
- keyString: "snmp2_getnext(string host , string community , string object_id [,
    string timeout [, string retries]])"
- keyString: "snmp2_real_walk(string host , string community , string object_id
    [, string timeout [, string retries]])"
- keyString: "snmp2_set(string host , string community , string object_id , string
    type , string value [, string timeout [, string retries]])"
- keyString: "snmp2_walk(string host , string community , string object_id [, string
    timeout [, string retries]])"
- keyString: "snmp3_get(string host , string sec_name , string sec_level , string
    auth_protocol , string auth_passphrase , string priv_protocol , string priv_passphrase
    , string object_id [, string timeout [, string retries]])"
- keyString: "snmp3_getnext(string host , string sec_name , string sec_level , string
    auth_protocol , string auth_passphrase , string priv_protocol , string priv_passphrase
    , string object_id [, string timeout [, string retries]])"
- keyString: "snmp3_real_walk(string host , string sec_name , string sec_level ,
    string auth_protocol , string auth_passphrase , string priv_protocol , string
    priv_passphrase , string object_id [, string timeout [, string $retries]])"
- keyString: "snmp3_set(string host , string sec_name , string sec_level , string
    auth_protocol , string auth_passphrase , string priv_protocol , string priv_passphrase
    , string object_id , string type , string value [, int timeout [, int retries]])"
- keyString: "snmp3_walk(string host , string sec_name , string sec_level , string
    auth_protocol , string auth_passphrase , string priv_protocol , string priv_passphrase
    , string object_id [, string timeout [, string retries]])"
- keyString: "snmp_get_quick_print()"
- keyString: "snmp_get_valueretrieval()"
- keyString: "SNMP_OID_OUTPUT_FULL"
- keyString: "SNMP_OID_OUTPUT_NUMERIC"
- keyString: "snmp_read_mib(string filename)"
- keyString: "snmp_set_enum_print(int enum_print)"
- keyString: "snmp_set_oid_numeric_print(int oid_format)"
- keyString: "snmp_set_oid_output_format(int oid_format)"
- keyString: "snmp_set_quick_print(bool quick_print)"
- keyString: "snmp_set_valueretrieval(int method)"
- keyString: "snmpget(string hostname , string community , string object_id [, int
    timeout [, int retries]])"
- keyString: "snmpgetnext(string host , string community , string object_id [, int
    $timeout [, int retries]])"
- keyString: "snmprealwalk(string host , string community , string object_id [,
    int timeout [, int retries]])"
- keyString: "snmpset(string host , string community , string object_id , string
    type , mixed value [, int timeout [, int retries]])"
- keyString: "snmpwalk(string hostname , string community , string object_id [,
    int timeout [, int retries]])"
- keyString: "snmpwalkoid(string hostname , string community , string object_id
    [, int timeout [, int retries]])"
- keyString: "socket_accept(resource socket)"
- keyString: "socket_bind(resource socket , string address [, int port])"
- keyString: "socket_clear_error([ resource socket])"
- keyString: "socket_close(resource socket)"
- keyString: "socket_connect(resource socket , string address [, int port])"
- keyString: "socket_create(int domain , int type , int protocol)"
- keyString: "socket_create_listen(int port [, int backlog])"
- keyString: "socket_create_pair(int domain , int type , int protocol , array &fd)"
- keyString: "socket_get_option(resource socket , int level , int optname)"
- keyString: "socket_get_status(resource stream)"
- keyString: "socket_getpeername(resource socket , string &address [, int &port])"
- keyString: "socket_getsockname(resource socket , string &addr [, int &port])"
- keyString: "socket_import_stream(resource stream)"
- keyString: "socket_import_stream(resource stream)"
- keyString: "socket_last_error([ resource socket])"
- keyString: "socket_listen(resource socket [, int backlog])"
- keyString: "socket_read(resource socket , int length [, int type])"
- keyString: "socket_recv(resource socket , string &buf , int len , int flags)"
- keyString: "socket_recvfrom(resource socket , string &buf , int len , int flags
    , string &name [, int &port])"
- keyString: "socket_select(array &read , array &write , array &except , int tv_sec
    [, int tv_usec])"
- keyString: "socket_send(resource socket , string buf , int len , int flags)"
- keyString: "socket_sendto(resource socket , string buf , int len , int flags ,
    string addr [, int port])"
- keyString: "socket_set_block(resource socket)"
- keyString: "socket_set_blocking(int socket descriptor, int mode)"
- keyString: "socket_set_nonblock(resource socket)"
- keyString: "socket_set_option(resource socket , int level , int optname , mixed
    optval)"
- keyString: "socket_set_timeout(resource stream, int seconds [, int microseconds])"
- keyString: "socket_shutdown(resource socket [, int how])"
- keyString: "socket_strerror(int errno)"
- keyString: "socket_write(resource socket , string buffer [, int length])"
- keyString: "sort(array &array [, int sort_flags])"
- keyString: "SORT_ASC"
- keyString: "SORT_DESC"
- keyString: "SORT_NUMERIC"
- keyString: "SORT_REGULAR"
- keyString: "SORT_STRING"
- keyString: "soundex(string str)"
- keyString: "spl_autoload(string class_name [, string file_extensions])"
- keyString: "spl_autoload_call(string class_name)"
- keyString: "spl_autoload_extensions([ string file_extensions])"
- keyString: "spl_autoload_functions()"
- keyString: "spl_autoload_register([ callable autoload_function [, bool throw [,
    bool prepend]]])"
- keyString: "spl_autoload_unregister(mixed autoload_function)"
- keyString: "spl_classes()"
- keyString: "spl_object_hash(object obj)"
- keyString: "spl_object_hash(object obj)"
- keyString: "split(string pattern, string string [, int limit])"
- keyString: "spliti(string pattern, string string [, int limit])"
- keyString: "sprintf(string format [, mixed args [, mixed ...]])"
- keyString: "sql_regcase(string string)"
- keyString: "sqlite_array_query(resource dbhandle, string query [, int result_type
    [, bool decode_binary]])"
- keyString: "SQLITE_ASSOC"
- keyString: "sqlite_busy_timeout(resource dbhandle, int milliseconds)"
- keyString: "sqlite_changes(resource dbhandle)"
- keyString: "sqlite_close(resource dbhandle)"
- keyString: "sqlite_column(resource result, mixed index_or_name [, bool decode_binary])"
- keyString: "sqlite_create_aggregate(resource dbhandle, string function_name, callback
    step_func, callback finalize_func [, int num_args])"
- keyString: "sqlite_create_function(resource dbhandle, string function_name, callback
    callback [, int num_args])"
- keyString: "sqlite_current(resource result [, int result_type [, bool decode_binary]])"
- keyString: "sqlite_error_string(int error_code)"
- keyString: "sqlite_escape_string(string item)"
- keyString: "sqlite_exec(resource dbhandle, string query [, string &error_msg])"
- keyString: "sqlite_factory(string filename [, int mode [, string &error_message]])"
- keyString: "sqlite_fetch_all(resource result [, int result_type [, bool decode_binary]])"
- keyString: "sqlite_fetch_array(resource result [, int result_type [, bool decode_binary]])"
- keyString: "sqlite_fetch_column_types(string table_name, resource dbhandle [,
    int result_type])"
- keyString: "sqlite_fetch_object(resource result [, string class_name [, array
    ctor_params [, bool decode_binary]]])"
- keyString: "sqlite_fetch_single(resource result [, bool decode_binary])"
- keyString: "sqlite_fetch_string(resource result [, bool decode_binary])"
- keyString: "sqlite_field_name(resource result, int field_index)"
- keyString: "sqlite_has_more(resource result)"
- keyString: "sqlite_has_prev(resource result)"
- keyString: "sqlite_key(resource result)"
- keyString: "sqlite_last_error(resource dbhandle)"
- keyString: "sqlite_last_insert_rowid(resource dbhandle)"
- keyString: "sqlite_libencoding()"
- keyString: "sqlite_libversion()"
- keyString: "sqlite_next(resource result)"
- keyString: "sqlite_num_fields(resource result)"
- keyString: "sqlite_num_rows(resource result)"
- keyString: "sqlite_open(string filename [, int mode [, string &error_message]])"
- keyString: "sqlite_popen(string filename [, int mode [, string &error_message]])"
- keyString: "sqlite_prev(resource result)"
- keyString: "sqlite_query(resource dbhandle, string query [, int result_type [,
    string &error_msg]])"
- keyString: "sqlite_rewind(resource result)"
- keyString: "sqlite_seek(resource result, int rownum)"
- keyString: "sqlite_single_query(resource db, string query [, bool first_row_only
    [, bool decode_binary]])"
- keyString: "sqlite_udf_decode_binary(string data)"
- keyString: "sqlite_udf_encode_binary(string data)"
- keyString: "sqlite_unbuffered_query(resource dbhandle, string query [, int result_type
    [, string &error_msg]])"
- keyString: "sqlite_valid(resource result)"
- keyString: "SQLiteDatabase::fetchColumnTypes(string table_name [, int result_type
    = SQLITE_ASSOC])"
- keyString: "sqrt(float arg)"
- keyString: "srand([int seed])"
- keyString: "sscanf(string str, string format [, mixed &...])"
- keyString: "stat(string filename)"
- keyString: "static"
- keyString: "str_getcsv(string input [, string delimiter [, string enclosure [,
    string escape]]])"
- keyString: "str_ireplace(mixed search, mixed replace, mixed subject [, int &count])"
- keyString: "str_pad(string input, int pad_length [, string pad_string [, int pad_type]])"
- keyString: "STR_PAD_BOTH"
- keyString: "STR_PAD_LEFT"
- keyString: "STR_PAD_RIGHT"
- keyString: "str_repeat(string input, int multiplier)"
- keyString: "str_replace(mixed search, mixed replace, mixed subject [, int &count])"
- keyString: "str_rot13(string str)"
- keyString: "str_shuffle(string str)"
- keyString: "str_split(string string [, int split_length = 1])"
- keyString: "str_word_count(string string [, int format [, string charlist]])"
- keyString: "strcasecmp(string str1, string str2)"
- keyString: "strchr(string haystack, string needle)"
- keyString: "strcmp(string str1, string str2)"
- keyString: "strcoll(string str1, string str2)"
- keyString: "strcspn(string str1, string str2)"
- keyString: "stream_context_create()"
- keyString: "stream_context_get_options()"
- keyString: "stream_context_get_params(resource stream_or_context)"
- keyString: "stream_context_set_default(array options)"
- keyString: "stream_context_set_option()"
- keyString: "stream_context_set_params()"
- keyString: "stream_copy_to_stream()"
- keyString: "stream_copy_to_stream(resource source , resource dest [, int maxlength
    [, int offset]])"
- keyString: "STREAM_CRYPTO_METHOD_ANY_CLIENT"
- keyString: "STREAM_CRYPTO_METHOD_ANY_SERVER"
- keyString: "STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT"
- keyString: "STREAM_CRYPTO_METHOD_TLSv1_0_SERVER"
- keyString: "STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT"
- keyString: "STREAM_CRYPTO_METHOD_TLSv1_1_SERVER"
- keyString: "STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT"
- keyString: "STREAM_CRYPTO_METHOD_TLSv1_2_SERVER"
- keyString: "stream_filter_append()"
- keyString: "stream_filter_prepend()"
- keyString: "stream_get_filters()"
- keyString: "stream_get_line()"
- keyString: "stream_get_line(resource handle , int length [, string ending])"
- keyString: "stream_get_meta_data()"
- keyString: "stream_get_meta_data(resource stream)"
- keyString: "stream_get_transports()"
- keyString: "stream_get_wrappers()"
- keyString: "STREAM_META_ACCESS"
- keyString: "STREAM_META_GROUP"
- keyString: "STREAM_META_GROUP_NAME"
- keyString: "STREAM_META_OWNER"
- keyString: "STREAM_META_OWNER_NAME"
- keyString: "STREAM_META_TOUCH"
- keyString: "stream_register_filter()"
- keyString: "stream_register_wrapper()"
- keyString: "stream_select()"
- keyString: "stream_set_blocking()"
- keyString: "stream_set_chunk_size(resource fp , int chunk_size)"
- keyString: "stream_set_timeout()"
- keyString: "stream_set_timeout(resource stream, int seconds [, int microseconds])"
- keyString: "stream_set_write_buffer()"
- keyString: "STREAM_SHUT_RD"
- keyString: "STREAM_SHUT_RDWR"
- keyString: "STREAM_SHUT_WR"
- keyString: "stream_socket_accept(resource server_socket [, float $timeout [, string
    &peername]])"
- keyString: "stream_socket_client(string remote_socket [, int &errno [, string
    &errstr [, float timeout [, int flags [, resource $context]]]]])"
- keyString: "stream_socket_get_name(resource handle , bool want_peer)"
- keyString: "stream_socket_recvfrom(resource socket , int length [, int flags  [,
    string &address]])"
- keyString: "stream_socket_sendto(resource socket , string data [, int flags [,
    string address]])"
- keyString: "stream_socket_server(string local_socket [, int &errno [, string &errstr
    [, int flags [, resource context]]]])"
- keyString: "stream_socket_shutdown(resource stream , int how)"
- keyString: "stream_supports_lock(resource stream)"
- keyString: "streamWrapper::stream_cast(int cast_as)"
- keyString: "streamWrapper::stream_set_option(int option , int arg1 , int arg2)"
- keyString: "strftime(string format [, int timestamp])"
- keyString: "string ibase_wait_event(string event_name1 [, string event_name2 [,
    string ...]])"
- keyString: "strip_tags(string str [, string allowable_tags])"
- keyString: "stripcslashes(string str)"
- keyString: "stripos(string haystack, string needle [, int offset])"
- keyString: "stripslashes(string str)"
- keyString: "stristr(string haystack, string needle)"
- keyString: "strlen(string string)"
- keyString: "strnatcasecmp(string str1, string str2)"
- keyString: "strnatcmp(string str1, string str2)"
- keyString: "strncasecmp(string str1, string str2, int len)"
- keyString: "strncmp(string str1, string str2, int len)"
- keyString: "strpbrk(string haystack , string char_list)"
- keyString: "strpos(string haystack, string needle [, int offset])"
- keyString: "strrchr(string haystack, string needle)"
- keyString: "strrev(string string)"
- keyString: "strrpos(string haystack, char needle)"
- keyString: "strspn(string str1, string str2)"
- keyString: "strstr(string haystack, string needle)"
- keyString: "strtok(string arg1, string arg2)"
- keyString: "strtolower(string string)"
- keyString: "strtotime(string time [, int now])"
- keyString: "strtoupper(string string)"
- keyString: "strtr(string str, string from, string to)"
- keyString: "strval(mixed var)"
- keyString: "substr(string string, int start, int [length])"
- keyString: "substr_compare(string main_str , string str , int offset [, int length
    [, bool case_insensitivity]])"
- keyString: "substr_count(string haystrack, string needle)"
- keyString: "substr_replace(string string, string replacement, int start, int [length])"
- keyString: "svn_add()"
- keyString: "svn_auth_get_parameter()"
- keyString: "svn_auth_set_parameter()"
- keyString: "svn_blame()"
- keyString: "svn_cat()"
- keyString: "svn_checkout()"
- keyString: "svn_cleanup()"
- keyString: "svn_client_version()"
- keyString: "svn_commit()"
- keyString: "svn_delete()"
- keyString: "svn_diff()"
- keyString: "svn_export()"
- keyString: "svn_fs_abort_txn()"
- keyString: "svn_fs_apply_text()"
- keyString: "svn_fs_begin_txn2()"
- keyString: "svn_fs_change_node_prop()"
- keyString: "svn_fs_check_path()"
- keyString: "svn_fs_contents_changed()"
- keyString: "svn_fs_copy()"
- keyString: "svn_fs_delete()"
- keyString: "svn_fs_dir_entries()"
- keyString: "svn_fs_file_contents()"
- keyString: "svn_fs_file_length()"
- keyString: "svn_fs_is_dir()"
- keyString: "svn_fs_is_file()"
- keyString: "svn_fs_make_dir()"
- keyString: "svn_fs_make_file()"
- keyString: "svn_fs_node_created_rev()"
- keyString: "svn_fs_node_prop()"
- keyString: "svn_fs_props_changed()"
- keyString: "svn_fs_revision_prop()"
- keyString: "svn_fs_revision_root()"
- keyString: "svn_fs_txn_root()"
- keyString: "svn_fs_youngest_rev()"
- keyString: "svn_import()"
- keyString: "svn_log()"
- keyString: "svn_ls()"
- keyString: "svn_mkdir()"
- keyString: "svn_repos_create()"
- keyString: "svn_repos_fs()"
- keyString: "svn_repos_fs_begin_txn_for_commit()"
- keyString: "svn_repos_fs_commit_txn()"
- keyString: "svn_repos_hotcopy()"
- keyString: "svn_repos_open()"
- keyString: "svn_repos_recover()"
- keyString: "svn_revert()"
- keyString: "svn_status()"
- keyString: "svn_update()"
- keyString: "SWF_SOUND_11KHZ"
- keyString: "SWF_SOUND_16BITS"
- keyString: "SWF_SOUND_22KHZ"
- keyString: "SWF_SOUND_44KHZ"
- keyString: "SWF_SOUND_5KHZ"
- keyString: "SWF_SOUND_8BITS"
- keyString: "SWF_SOUND_ADPCM_COMPRESSED"
- keyString: "SWF_SOUND_MONO"
- keyString: "SWF_SOUND_MP3_COMPRESSED"
- keyString: "SWF_SOUND_NELLY_COMPRESSED"
- keyString: "SWF_SOUND_NOT_COMPRESSED"
- keyString: "SWF_SOUND_NOT_COMPRESSED_LE"
- keyString: "SWF_SOUND_STEREO"
- keyString: "swfaction()"
- keyString: "swfbutton()"
- keyString: "swfdisplayitem()"
- keyString: "swffill()"
- keyString: "swffont()"
- keyString: "swfgradient()"
- keyString: "swfmorph()"
- keyString: "swfmovie()"
- keyString: "swfmovie::namedanchor(string name)"
- keyString: "swfmovie::protect([string password])"
- keyString: "swfshape()"
- keyString: "swfsprite()"
- keyString: "swftext()"
- keyString: "swftextfield()"
- keyString: "SWFTEXTFIELD_AUTOSIZE"
- keyString: "SWFTEXTFIELD_USEFONT"
- keyString: "switch"
- keyString: "symlink(string target, string link)"
- keyString: "sys_get_temp_dir()"
- keyString: "syslog(int priority, string message)"
- keyString: "system(string command [, int &return_var])"
- keyString: "T_FMT"
- keyString: "T_FMT_AMPM"
- keyString: "T_STD_DES"
- keyString: "tan(float arg)"
- keyString: "tanh(float arg)"
- keyString: "tempnam(string dir, string prefix)"
- keyString: "textdomain(string text_domain)"
- keyString: "THOUSANDS_SEP"
- keyString: "THOUSEP"
- keyString: "throw"
- keyString: "tidy_access_count(tidy object)"
- keyString: "tidy_config_count(tidy object)"
- keyString: "tidy_error_count(tidy object)"
- keyString: "tidy_get_output(tidy object)"
- keyString: "tidy_load_config(string filename , string encoding)"
- keyString: "tidy_reset_config()"
- keyString: "tidy_save_config(string filename)"
- keyString: "tidy_set_encoding(string encoding)"
- keyString: "tidy_setopt(string option , mixed value)"
- keyString: "tidy_warning_count(tidy object)"
- keyString: "time()"
- keyString: "time_nanosleep(int seconds , int nanoseconds)"
- keyString: "timezone_abbreviations_list()"
- keyString: "timezone_identifiers_list([ int what [, string country]])"
- keyString: "timezone_location_get()"
- keyString: "timezone_name_from_abbr(string abbr [, int gmtOffset [, int isdst]])"
- keyString: "timezone_name_get()"
- keyString: "timezone_offset_get()"
- keyString: "timezone_transitions_get()"
- keyString: "timezone_version_get()"
- keyString: "tmpfile()"
- keyString: "token_get_all(string source)"
- keyString: "token_name(int token)"
- keyString: "touch(string filename [, int time [, int atime]])"
- keyString: "trait_exists(string traitname [, bool autoload])"
- keyString: "Transliterator::create(string id [, int direction])"
- keyString: "Transliterator::createFromRules(string rules [, string direction])"
- keyString: "Transliterator::createInverse()"
- keyString: "Transliterator::getErrorCode()"
- keyString: "Transliterator::getErrorMessage()"
- keyString: "Transliterator::listIDs()"
- keyString: "Transliterator::transliterate(string subject [, int start [, int end]])"
- keyString: "transliterator_create_from_rules(string id [, int direction])"
- keyString: "transliterator_create_inverse()"
- keyString: "transliterator_get_error_code()"
- keyString: "transliterator_get_error_message()"
- keyString: "transliterator_list_ids()"
- keyString: "transliterator_transliterate(mixed transliterator , string subject
    [, int start [, int end]])"
- keyString: "TRAP_BRKPT"
- keyString: "TRAP_TRACE"
- keyString: "trigger_error(string error_msg, int [error_type])"
- keyString: "trim(string str [, string charlist])"
- keyString: "try"
- keyString: "U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR"
- keyString: "uasort(array &array, function cmp_function)"
- keyString: "ucfirst(string str)"
- keyString: "ucwords(string str)"
- keyString: "uksort(array &array, callback cmp_function)"
- keyString: "umask([int mask])"
- keyString: "uniqid(string prefix, bool [lcg])"
- keyString: "unixtojd([ int timestamp])"
- keyString: "unixtojd(int [timestamp])"
- keyString: "unlink(string filename [, resource context])"
- keyString: "unpack(string format, string data)"
- keyString: "unregister_tick_function(string func [, mixed arg])"
- keyString: "unserialize(string str)"
- keyString: "unset(mixed var, mixed [var], [...])"
- keyString: "UPLOAD_ERR_EXTENSION"
- keyString: "urldecode(string str)"
- keyString: "urlencode(string str)"
- keyString: "use_soap_error_handler([ bool handler])"
- keyString: "user_error(string error_msg, int [error_type])"
- keyString: "usleep(int micro_seconds)"
- keyString: "usort(array &array, callback cmp_function)"
- keyString: "utf8_decode(string data)"
- keyString: "utf8_encode(string data)"
- keyString: "var"
- keyString: "var_dump(mixed expression [, mixed expression [, ...]])"
- keyString: "var_export(mixed expression [, int return])"
- keyString: "variant_abs(mixed val)"
- keyString: "variant_add(mixed left , mixed right)"
- keyString: "variant_and(mixed left , mixed right)"
- keyString: "variant_cast(variant variant , int type)"
- keyString: "variant_cat(mixed left , mixed right)"
- keyString: "variant_cmp(mixed left , mixed right [, int lcid [, int flags]])"
- keyString: "variant_date_from_timestamp(int timestamp)"
- keyString: "variant_date_to_timestamp(variant variant)"
- keyString: "variant_div(mixed left , mixed right)"
- keyString: "variant_eqv(mixed left , mixed right)"
- keyString: "variant_fix(mixed variant)"
- keyString: "variant_get_type(variant variant)"
- keyString: "variant_idiv(mixed left , mixed right)"
- keyString: "variant_imp(mixed left , mixed right)"
- keyString: "variant_int(mixed variant)"
- keyString: "variant_mod(mixed left , mixed right)"
- keyString: "variant_mul(mixed left , mixed right)"
- keyString: "variant_neg(mixed variant)"
- keyString: "variant_not(mixed variant)"
- keyString: "variant_or(mixed left , mixed right)"
- keyString: "variant_pow(mixed left , mixed right)"
- keyString: "variant_round(mixed variant , int decimals)"
- keyString: "variant_set(variant variant , mixed value)"
- keyString: "variant_set_type(variant variant , int type)"
- keyString: "variant_sub(mixed left , mixed right)"
- keyString: "variant_xor(mixed left , mixed right)"
- keyString: "version_compare(string version1, string version2 [, string operator])"
- keyString: "virtual(string filename)"
- keyString: "vprintf(string format, array args)"
- keyString: "vsprintf(string format, array args)"
- keyString: "wddx_add_vars()"
- keyString: "wddx_deserialize()"
- keyString: "wddx_packet_end()"
- keyString: "wddx_packet_start()"
- keyString: "wddx_serialize_value()"
- keyString: "wddx_serialize_vars()"
- keyString: "while"
- keyString: "wordwrap(string str, int [width], string [break], int [cut])"
- keyString: "xml_error_string(int code)"
- keyString: "xml_get_current_byte_index(int parser)"
- keyString: "xml_get_current_column_number(int parser)"
- keyString: "xml_get_current_line_number(int parser)"
- keyString: "xml_get_error_code(int parser)"
- keyString: "xml_parse(int parser, string data, int [isFinal])"
- keyString: "xml_parse_into_struct(int parser, string data, array &values, array
    &index)"
- keyString: "xml_parser_create(string [encoding])"
- keyString: "xml_parser_create_ns([string encoding [, string sep]])"
- keyString: "xml_parser_free(int parser)"
- keyString: "xml_parser_get_option(int parser, int option)"
- keyString: "xml_parser_set_option(int parser, int option, mixed value)"
- keyString: "xml_set_character_data_handler(int parser, string handler)"
- keyString: "xml_set_default_handler(int parser, string handler)"
- keyString: "xml_set_element_handler(int parser, string startElementHandler, string
    endElementHandler)"
- keyString: "xml_set_end_namespace_decl_handler(int pind, string hdl)"
- keyString: "xml_set_external_entity_ref_handler(int parser, string handler)"
- keyString: "xml_set_notation_decl_handler(int parser, string handler)"
- keyString: "xml_set_object(int parser, object &object)"
- keyString: "xml_set_processing_instruction_handler(int parser, string handler)"
- keyString: "xml_set_start_namespace_decl_handler(int pind, string hdl)"
- keyString: "xml_set_start_namespace_decl_handler(resource parser , callable handler)"
- keyString: "xml_set_unparsed_entity_decl_handler(int parser, string handler)"
- keyString: "xmlrpc_decode(string xml [, string encoding])"
- keyString: "xmlrpc_decode_request(string xml, string method [, string encoding])"
- keyString: "xmlrpc_encode(mixed value)"
- keyString: "xmlrpc_encode_request(string method, mixed params)"
- keyString: "xmlrpc_get_type(mixed value)"
- keyString: "xmlrpc_parse_method_descriptions(string xml)"
- keyString: "xmlrpc_server_add_introspection_data(resource server, array desc)"
- keyString: "xmlrpc_server_call_method(resource server, string xml, mixed user_data
    [, array output_options])"
- keyString: "xmlrpc_server_create()"
- keyString: "xmlrpc_server_destroy(resource server)"
- keyString: "xmlrpc_server_register_introspection_callback(resource server, string
    function)"
- keyString: "xmlrpc_server_register_method(resource server, string method_name,
    string function)"
- keyString: "xmlrpc_set_type(string value, string type)"
- keyString: "XMLWriter::endDTDEntity()"
- keyString: "XMLWriter::fullEndElement()"
- keyString: "XMLWriter::startDTDEntity(string $name , bool isparam)"
- keyString: "XMLWriter::writeDTDEntity(string name , string content , bool pe ,
    string pubid , string sysid , string ndataid)"
- keyString: "XMLWriter::writeRaw(string content)"
- keyString: "xmlwriter_end_dtd_entity(resource xmlwriter)"
- keyString: "xmlwriter_full_end_element(resource xmlwriter)"
- keyString: "xmlwriter_start_dtd_entity(resource xmlwriter , string name , bool
    isparam)"
- keyString: "xmlwriter_write_dtd_entity(resource xmlwriter , string name , string
    content , bool pe , string pubid , string sysid , string ndataid)"
- keyString: "xmlwriter_write_raw(resource xmlwriter , string content)"
- keyString: "xpath_eval(object xpath context)"
- keyString: "xpath_eval_expression(object xpath_context)"
- keyString: "xpath_new_context(object dom document)"
- keyString: "xptr_eval([object xpath_context, string eval_str])"
- keyString: "xptr_new_context([object doc_handle])"
- keyString: "xslt_create()"
- keyString: "xslt_errno(resource xh)"
- keyString: "xslt_error(resource xh)"
- keyString: "xslt_free(resource xh)"
- keyString: "xslt_process(resource xh, string xmlcontainer, string xslcontainer
    [, string resultcontainer [, array arguments [, array parameters]]])"
- keyString: "xslt_set_base(resource xh, string uri)"
- keyString: "xslt_set_encoding(resource xh, string encoding)"
- keyString: "xslt_set_error_handler(resource xh, mixed handler)"
- keyString: "xslt_set_log(resource xh, mixed log)"
- keyString: "xslt_set_object (resource processor, object &obj)"
- keyString: "xslt_set_sax_handler(resource xh, array handlers)"
- keyString: "xslt_set_sax_handlers(resource processor, array handlers)"
- keyString: "xslt_set_scheme_handler(resource xh, array handlers)"
- keyString: "xslt_set_scheme_handlers(resource processor, array handlers)"
- keyString: "xslt_setopt(resource processor, int newmask)"
- keyString: "yaml_emit(mixed data [, int encoding [, int linebreak [, array callbacks]]])"
- keyString: "yaml_emit_file(string filename , mixed data [, int encoding [, int
    linebreak [, array callbacks]]])"
- keyString: "yaml_parse(string input [, int pos [, int &ndocs [, array callbacks]]])"
- keyString: "yaml_parse_file(string filename [, int pos [, int &ndocs [, array
    callbacks]]])"
- keyString: "yaml_parse_url(string url [, int pos [, int &ndocs [, array callbacks]]])"
- keyString: "YESEXPR"
- keyString: "YESSTR"
- keyString: "zend_version()"
- keyString: "zip_close(resource zip)"
- keyString: "zip_entry_close(resource zip_entry)"
- keyString: "zip_entry_compressedsize(resource zip_entry)"
- keyString: "zip_entry_compressionmethod(resource zip_entry)"
- keyString: "zip_entry_filesize(resource zip_entry)"
- keyString: "zip_entry_name(resource zip_entry)"
- keyString: "zip_entry_open(resource zip , resource zip_entry [, string mode])"
- keyString: "zip_entry_read(resource zip_entry [, int length])"
- keyString: "zip_open(string filename)"
- keyString: "zip_read(resource zip)"
- keyString: "zlib_decode(string data [, string max_decoded_len])"
- keyString: "zlib_encode(string data , string encoding [, string level])"
- keyString: "ZLIB_ENCODING_DEFLATE"
- keyString: "ZLIB_ENCODING_GZIP"
- keyString: "ZLIB_ENCODING_RAW"
- keyString: "zlib_get_coding_type()"
commands:
- beginString: "__call"
- beginString: "__callStatic"
- beginString: "__clone"
- beginString: "__construct"
- beginString: "__debugInfo"
- beginString: "__destruct"
- beginString: "__get"
- beginString: "__halt_compiler"
- beginString: "__invoke"
- beginString: "__isset"
- beginString: "__set"
- beginString: "__set_state"
- beginString: "__sleep"
- beginString: "__toString"
- beginString: "__unset"
- beginString: "__wakeup"
- beginString: "abs"
- beginString: "acos"
- beginString: "acosh"
- beginString: "addcslashes"
- beginString: "addslashes"
- beginString: "aggregate"
- beginString: "aggregate_info"
- beginString: "aggregate_methods"
- beginString: "aggregate_methods_by_list"
- beginString: "aggregate_methods_by_regexp"
- beginString: "aggregate_properties"
- beginString: "aggregate_properties_by_list"
- beginString: "aggregate_properties_by_regexp"
- beginString: "aggregation_info"
- beginString: "apache_child_terminate"
- beginString: "apache_get_modules"
- beginString: "apache_get_version"
- beginString: "apache_getenv"
- beginString: "apache_lookup_uri"
- beginString: "apache_note"
- beginString: "apache_request_headers"
- beginString: "apache_response_headers"
- beginString: "apache_setenv"
- beginString: "append"
- beginString: "arguments"
- beginString: "array"
- beginString: "array_change_key_case"
- beginString: "array_chunk"
- beginString: "array_combine"
- beginString: "array_count_values"
- beginString: "array_diff"
- beginString: "array_diff_assoc"
- beginString: "array_diff_key"
- beginString: "array_diff_uassoc"
- beginString: "array_diff_ukey"
- beginString: "array_fill"
- beginString: "array_fill_keys"
- beginString: "array_filter"
- beginString: "array_flip"
- beginString: "array_intersect"
- beginString: "array_intersect_assoc"
- beginString: "array_intersect_key"
- beginString: "array_intersect_uassoc"
- beginString: "array_intersect_ukey"
- beginString: "array_key_exists"
- beginString: "array_keys"
- beginString: "array_map"
- beginString: "array_merge"
- beginString: "array_merge_recursive"
- beginString: "array_multisort"
- beginString: "array_pad"
- beginString: "array_pop"
- beginString: "array_push"
- beginString: "array_rand"
- beginString: "array_reduce"
- beginString: "array_replace"
- beginString: "array_replace_recursive"
- beginString: "array_reverse"
- beginString: "array_search"
- beginString: "array_shift"
- beginString: "array_slice"
- beginString: "array_splice"
- beginString: "array_sum"
- beginString: "array_udiff"
- beginString: "array_udiff_assoc"
- beginString: "array_udiff_uassoc"
- beginString: "array_uintersect"
- beginString: "array_uintersect_assoc"
- beginString: "array_uintersect_uassoc"
- beginString: "array_unique"
- beginString: "array_unshift"
- beginString: "array_values"
- beginString: "array_walk"
- beginString: "array_walk_recursive"
- beginString: "arsort"
- beginString: "ascii2ebcdic"
- beginString: "asin"
- beginString: "asinh"
- beginString: "asort"
- beginString: "assert"
- beginString: "assert_options"
- beginString: "assign"
- beginString: "assignElem"
- beginString: "atan"
- beginString: "atan2"
- beginString: "atanh"
- beginString: "base64_decode"
- beginString: "base64_encode"
- beginString: "base_convert"
- beginString: "basename"
- beginString: "bcadd"
- beginString: "bccomp"
- beginString: "bcdiv"
- beginString: "bcmod"
- beginString: "bcmul"
- beginString: "bcpow"
- beginString: "bcpowmod"
- beginString: "bcscale"
- beginString: "bcsqrt"
- beginString: "bcsub"
- beginString: "bin2hex"
- beginString: "bind_textdomain_codeset"
- beginString: "bindec"
- beginString: "bindtextdomain"
- beginString: "boolval"
- beginString: "bzclose"
- beginString: "bzcompress"
- beginString: "bzdecompress"
- beginString: "bzerrno"
- beginString: "bzerror"
- beginString: "bzerrstr"
- beginString: "bzflush"
- beginString: "bzopen"
- beginString: "bzread"
- beginString: "bzwrite"
- beginString: "cal_days_in_month"
- beginString: "cal_from_jd"
- beginString: "cal_info"
- beginString: "cal_to_jd"
- beginString: "call_user_func"
- beginString: "call_user_func_array"
- beginString: "call_user_method"
- beginString: "call_user_method_array"
- beginString: "ceil"
- beginString: "cfunction"
- beginString: "chdir"
- beginString: "checkdate"
- beginString: "checkdnsrr"
- beginString: "chgrp"
- beginString: "child_nodes"
- beginString: "chmod"
- beginString: "chop"
- beginString: "chown"
- beginString: "chr"
- beginString: "chroot"
- beginString: "chunk_split"
- beginString: "class_alias"
- beginString: "class_exists"
- beginString: "class_implements"
- beginString: "class_parents"
- beginString: "class_uses"
- beginString: "clearstatcache"
- beginString: "close"
- beginString: "closedir"
- beginString: "closelog"
- beginString: "com_create_guid"
- beginString: "com_event_sink"
- beginString: "com_get_active_object"
- beginString: "com_load_typelib"
- beginString: "com_message_pump"
- beginString: "com_print_typeinfo"
- beginString: "com_propget"
- beginString: "com_propput"
- beginString: "com_propset"
- beginString: "com_set"
- beginString: "compact"
- beginString: "connection_aborted"
- beginString: "connection_status"
- beginString: "connection_timeout"
- beginString: "constant"
- beginString: "convert_cyr_string"
- beginString: "convert_uudecode"
- beginString: "convert_uuencode"
- beginString: "copy"
- beginString: "cos"
- beginString: "cosh"
- beginString: "count"
- beginString: "count_chars"
- beginString: "cpdf_add_annotation"
- beginString: "cpdf_add_outline"
- beginString: "cpdf_arc"
- beginString: "cpdf_begin_text"
- beginString: "cpdf_circle"
- beginString: "cpdf_clip"
- beginString: "cpdf_close"
- beginString: "cpdf_closepath"
- beginString: "cpdf_closepath_fill_stroke"
- beginString: "cpdf_closepath_stroke"
- beginString: "cpdf_continue_text"
- beginString: "cpdf_curveto"
- beginString: "cpdf_end_text"
- beginString: "cpdf_fill"
- beginString: "cpdf_fill_stroke"
- beginString: "cpdf_finalize"
- beginString: "cpdf_finalize_page"
- beginString: "cpdf_global_set_document_limits"
- beginString: "cpdf_import_jpeg"
- beginString: "cpdf_lineto"
- beginString: "cpdf_moveto"
- beginString: "cpdf_newpath"
- beginString: "cpdf_open"
- beginString: "cpdf_output_buffer"
- beginString: "cpdf_page_init"
- beginString: "cpdf_place_inline_image"
- beginString: "cpdf_rect"
- beginString: "cpdf_restore"
- beginString: "cpdf_rlineto"
- beginString: "cpdf_rmoveto"
- beginString: "cpdf_rotate"
- beginString: "cpdf_rotate_text"
- beginString: "cpdf_save"
- beginString: "cpdf_save_to_f"
- beginString: "cpdf_scale"
- beginString: "cpdf_set_action_urlcpdf_set_char_spacing"
- beginString: "cpdf_set_creator"
- beginString: "cpdf_set_current_page"
- beginString: "cpdf_set_font"
- beginString: "cpdf_set_font_directories"
- beginString: "cpdf_set_font_map_file"
- beginString: "cpdf_set_horiz_scaling"
- beginString: "cpdf_set_keywords"
- beginString: "cpdf_set_leading"
- beginString: "cpdf_set_page_animation"
- beginString: "cpdf_set_subject"
- beginString: "cpdf_set_text_matrix"
- beginString: "cpdf_set_text_pos"
- beginString: "cpdf_set_text_rendering"
- beginString: "cpdf_set_text_rise"
- beginString: "cpdf_set_title"
- beginString: "cpdf_set_viewer_preferences"
- beginString: "cpdf_set_word_spacing"
- beginString: "cpdf_setdash"
- beginString: "cpdf_setflat"
- beginString: "cpdf_setgray"
- beginString: "cpdf_setgray_fill"
- beginString: "cpdf_setgray_stroke"
- beginString: "cpdf_setlinecap"
- beginString: "cpdf_setlinejoin"
- beginString: "cpdf_setlinewidth"
- beginString: "cpdf_setmiterlimit"
- beginString: "cpdf_setrgbcolor"
- beginString: "cpdf_setrgbcolor_fill"
- beginString: "cpdf_setrgbcolor_stroke"
- beginString: "cpdf_show"
- beginString: "cpdf_show_xy"
- beginString: "cpdf_stringwidth"
- beginString: "cpdf_stroke"
- beginString: "cpdf_text"
- beginString: "cpdf_translate"
- beginString: "crack_check"
- beginString: "crack_closedict"
- beginString: "crack_getlastmessage"
- beginString: "crack_opendict"
- beginString: "crc32"
- beginString: "create"
- beginString: "createFromRules"
- beginString: "createInverse"
- beginString: "crypt"
- beginString: "ctype_alnum"
- beginString: "ctype_alpha"
- beginString: "ctype_cntrl"
- beginString: "ctype_digit"
- beginString: "ctype_graph"
- beginString: "ctype_lower"
- beginString: "ctype_print"
- beginString: "ctype_punct"
- beginString: "ctype_space"
- beginString: "ctype_upper"
- beginString: "ctype_xdigit"
- beginString: "curl_close"
- beginString: "curl_copy_handle"
- beginString: "curl_errno"
- beginString: "curl_error"
- beginString: "curl_exec"
- beginString: "curl_getinfo"
- beginString: "curl_init"
- beginString: "curl_multi_add_handle"
- beginString: "curl_multi_close"
- beginString: "curl_multi_exec"
- beginString: "curl_multi_getcontent"
- beginString: "curl_multi_info_read"
- beginString: "curl_multi_init"
- beginString: "curl_multi_remove_handle"
- beginString: "curl_multi_select"
- beginString: "curl_setopt"
- beginString: "curl_setopt_array"
- beginString: "curl_version"
- beginString: "current"
- beginString: "cybercash_base64_decode"
- beginString: "cybercash_base64_encode"
- beginString: "cybercash_decr"
- beginString: "cybercash_encr"
- beginString: "cybermut_creerformulairecm"
- beginString: "cybermut_creerreponsecm"
- beginString: "cybermut_testmac"
- beginString: "cyrus_authenticate"
- beginString: "cyrus_bind"
- beginString: "cyrus_close"
- beginString: "cyrus_connect"
- beginString: "cyrus_query"
- beginString: "cyrus_unbind"
- beginString: "date"
- beginString: "date_add"
- beginString: "date_create"
- beginString: "date_create_from_format"
- beginString: "date_date_set"
- beginString: "date_default_timezone_get"
- beginString: "date_default_timezone_set"
- beginString: "date_diff"
- beginString: "date_get_last_errors"
- beginString: "date_isodate_set"
- beginString: "date_modify"
- beginString: "date_offset_get"
- beginString: "date_parse"
- beginString: "date_parse_from_format"
- beginString: "date_sub"
- beginString: "date_sun_info"
- beginString: "date_sunrise"
- beginString: "date_sunset"
- beginString: "date_time_set"
- beginString: "date_timezone_get"
- beginString: "date_timezone_set"
- beginString: "datefmt_format_object"
- beginString: "datefmt_get_calendar_object"
- beginString: "datefmt_get_timezone"
- beginString: "datefmt_set_timezone"
- beginString: "dba_close"
- beginString: "dba_delete"
- beginString: "dba_exists"
- beginString: "dba_fetch"
- beginString: "dba_firstkey"
- beginString: "dba_handlers"
- beginString: "dba_insert"
- beginString: "dba_key_split"
- beginString: "dba_list"
- beginString: "dba_nextkey"
- beginString: "dba_open"
- beginString: "dba_optimize"
- beginString: "dba_popen"
- beginString: "dba_replace"
- beginString: "dba_sync"
- beginString: "dblist"
- beginString: "dbmclose"
- beginString: "dbmdelete"
- beginString: "dbmexists"
- beginString: "dbmfetch"
- beginString: "dbmfirstkey"
- beginString: "dbminsert"
- beginString: "dbmnextkey"
- beginString: "dbmopen"
- beginString: "dbmreplace"
- beginString: "dbx_close"
- beginString: "dbx_compare"
- beginString: "dbx_connect"
- beginString: "dbx_error"
- beginString: "dbx_escape_string"
- beginString: "dbx_fetch_row"
- beginString: "dbx_query"
- beginString: "dbx_sort"
- beginString: "dcgettext"
- beginString: "dcngettext"
- beginString: "deaggregate"
- beginString: "debug_backtrace"
- beginString: "debugger_off"
- beginString: "debugger_on"
- beginString: "decbin"
- beginString: "dechex"
- beginString: "decoct"
- beginString: "define"
- beginString: "defined"
- beginString: "deg2rad"
- beginString: "delete"
- beginString: "df_rect"
- beginString: "dgettext"
- beginString: "die"
- beginString: "dio_close"
- beginString: "dio_fcntl"
- beginString: "dio_open"
- beginString: "dio_read"
- beginString: "dio_seek"
- beginString: "dio_stat"
- beginString: "dio_tcsetattr"
- beginString: "dio_truncate"
- beginString: "dio_write"
- beginString: "dir"
- beginString: "dirname"
- beginString: "disk_free_space"
- beginString: "disk_total_space"
- beginString: "diskfreespace"
- beginString: "dl"
- beginString: "dns_check_record"
- beginString: "dns_get_mx"
- beginString: "dns_get_record"
- beginString: "dom_import_simplexml"
- beginString: "DOMDocument"
- beginString: "domxml_new_doc"
- beginString: "domxml_open_file"
- beginString: "domxml_open_mem"
- beginString: "domxml_version"
- beginString: "domxml_xmltree"
- beginString: "domxml_xslt_style"
- beginString: "domxml_xslt_stylesheet"
- beginString: "domxml_xslt_stylesheet_doc"
- beginString: "dotnet_load"
- beginString: "doubleval"
- beginString: "each"
- beginString: "easter_date"
- beginString: "easter_days"
- beginString: "ebcdic2ascii"
- beginString: "echo"
- beginString: "egray"
- beginString: "empty"
- beginString: "end"
- beginString: "enddeclare"
- beginString: "endDTDEntity"
- beginString: "eof"
- beginString: "erase"
- beginString: "ereg"
- beginString: "ereg_replace"
- beginString: "eregi"
- beginString: "eregi_replace"
- beginString: "error_get_last"
- beginString: "error_log"
- beginString: "error_reporting"
- beginString: "escapeshellarg"
- beginString: "escapeshellcmd"
- beginString: "eval"
- beginString: "exec"
- beginString: "exif_imagetype"
- beginString: "exif_read_data"
- beginString: "exif_tagname"
- beginString: "exif_thumbnail"
- beginString: "exp"
- beginString: "explode"
- beginString: "expm1"
- beginString: "export"
- beginString: "extension_loaded"
- beginString: "extract"
- beginString: "ezmlm_hash"
- beginString: "fclose"
- beginString: "feof"
- beginString: "fetch_all"
- beginString: "fetchColumnTypes"
- beginString: "fflush"
- beginString: "fgetc"
- beginString: "fgetcsv"
- beginString: "fgets"
- beginString: "fgetss"
- beginString: "file"
- beginString: "file_exists"
- beginString: "file_get_contents"
- beginString: "file_put_contents"
- beginString: "fileatime"
- beginString: "filectime"
- beginString: "filegroup"
- beginString: "fileinode"
- beginString: "filemtime"
- beginString: "fileowner"
- beginString: "fileperms"
- beginString: "filesize"
- beginString: "filetype"
- beginString: "floatval"
- beginString: "flock"
- beginString: "floor"
- beginString: "flush"
- beginString: "fmod"
- beginString: "fnmatch"
- beginString: "fopen"
- beginString: "forward_static_call"
- beginString: "forward_static_call_array"
- beginString: "fpassthru"
- beginString: "fprintf"
- beginString: "fputs"
- beginString: "fread"
- beginString: "free"
- beginString: "frenchtojd"
- beginString: "fscanf"
- beginString: "fseek"
- beginString: "fsockopen"
- beginString: "fstat"
- beginString: "ftell"
- beginString: "ftok"
- beginString: "ftp_alloc"
- beginString: "ftp_cdup"
- beginString: "ftp_chdir"
- beginString: "ftp_chmod"
- beginString: "ftp_close"
- beginString: "ftp_connect"
- beginString: "ftp_delete"
- beginString: "ftp_exec"
- beginString: "ftp_fget"
- beginString: "ftp_fput"
- beginString: "ftp_get"
- beginString: "ftp_get_option"
- beginString: "ftp_login"
- beginString: "ftp_mdtm"
- beginString: "ftp_mkdir"
- beginString: "ftp_nb_continue"
- beginString: "ftp_nb_fget"
- beginString: "ftp_nb_fput"
- beginString: "ftp_nb_get"
- beginString: "ftp_nb_put"
- beginString: "ftp_nlist"
- beginString: "ftp_pasv"
- beginString: "ftp_put"
- beginString: "ftp_pwd"
- beginString: "ftp_quit"
- beginString: "ftp_raw"
- beginString: "ftp_rawlist"
- beginString: "ftp_rename"
- beginString: "ftp_rmdir"
- beginString: "ftp_set_option"
- beginString: "ftp_site"
- beginString: "ftp_size"
- beginString: "ftp_ssl_connect"
- beginString: "ftp_systype"
- beginString: "ftruncate"
- beginString: "fullEndElement"
- beginString: "func_get_arg"
- beginString: "func_get_args"
- beginString: "func_num_args"
- beginString: "function_exists"
- beginString: "fwrite"
- beginString: "gc_collect_cycles"
- beginString: "gc_disable"
- beginString: "gc_enable"
- beginString: "gc_enabled"
- beginString: "gd_info"
- beginString: "get_browser"
- beginString: "get_called_class"
- beginString: "get_cfg_var"
- beginString: "get_class"
- beginString: "get_class_methods"
- beginString: "get_class_vars"
- beginString: "get_connection_stats"
- beginString: "get_current_user"
- beginString: "get_declared_classes"
- beginString: "get_declared_interfaces"
- beginString: "get_declared_traits"
- beginString: "get_defined_constants"
- beginString: "get_defined_functions"
- beginString: "get_defined_vars"
- beginString: "get_extension_funcs"
- beginString: "get_headers"
- beginString: "get_html_translation_table"
- beginString: "get_include_path"
- beginString: "get_included_files"
- beginString: "get_loaded_extensions"
- beginString: "get_magic_quotes_gpc"
- beginString: "get_magic_quotes_runtime"
- beginString: "get_meta_tags"
- beginString: "get_object_vars"
- beginString: "get_parent_class"
- beginString: "get_required_files"
- beginString: "get_resource_type"
- beginString: "getallheaders"
- beginString: "getBuffering"
- beginString: "getcwd"
- beginString: "getdate"
- beginString: "getElem"
- beginString: "getenv"
- beginString: "getErrorCode"
- beginString: "getErrorMessage"
- beginString: "gethostbyaddr"
- beginString: "gethostbyname"
- beginString: "gethostbynamel"
- beginString: "gethostname"
- beginString: "getimagesize"
- beginString: "getimagesizefromstring"
- beginString: "getlastmod"
- beginString: "getmxrr"
- beginString: "getmygid"
- beginString: "getmyinode"
- beginString: "getmypid"
- beginString: "getmyuid"
- beginString: "getopt"
- beginString: "getprotobyname"
- beginString: "getprotobynumber"
- beginString: "getrandmax"
- beginString: "getrusage"
- beginString: "getservbyname"
- beginString: "getservbyport"
- beginString: "gettext"
- beginString: "gettimeofday"
- beginString: "gettype"
- beginString: "gif"
- beginString: "glob"
- beginString: "gmdate"
- beginString: "gmmktime"
- beginString: "gmp_abs"
- beginString: "gmp_add"
- beginString: "gmp_and"
- beginString: "gmp_clrbit"
- beginString: "gmp_cmp"
- beginString: "gmp_com"
- beginString: "gmp_div"
- beginString: "gmp_div_q"
- beginString: "gmp_div_qr"
- beginString: "gmp_div_r"
- beginString: "gmp_divexact"
- beginString: "gmp_fact"
- beginString: "gmp_gcd"
- beginString: "gmp_gcdext"
- beginString: "gmp_hamdist"
- beginString: "gmp_init"
- beginString: "gmp_intval"
- beginString: "gmp_invert"
- beginString: "gmp_jacobi"
- beginString: "gmp_legendre"
- beginString: "gmp_mod"
- beginString: "gmp_mul"
- beginString: "gmp_neg"
- beginString: "gmp_nextprime"
- beginString: "gmp_or"
- beginString: "gmp_perfect_square"
- beginString: "gmp_popcount"
- beginString: "gmp_pow"
- beginString: "gmp_powm"
- beginString: "gmp_prob_prime"
- beginString: "gmp_random"
- beginString: "gmp_root"
- beginString: "gmp_rootrem"
- beginString: "gmp_scan0"
- beginString: "gmp_scan1"
- beginString: "gmp_setbit"
- beginString: "gmp_sign"
- beginString: "gmp_sqrt"
- beginString: "gmp_sqrtrm"
- beginString: "gmp_strval"
- beginString: "gmp_sub"
- beginString: "gmp_testbit"
- beginString: "gmp_xor"
- beginString: "gmstrftime"
- beginString: "grapheme_extract"
- beginString: "grapheme_stripos"
- beginString: "grapheme_stristr"
- beginString: "grapheme_strlen"
- beginString: "grapheme_strpos"
- beginString: "grapheme_strripos"
- beginString: "grapheme_strrpos"
- beginString: "grapheme_strstr"
- beginString: "grapheme_substr"
- beginString: "gregoriantojd"
- beginString: "gzclose"
- beginString: "gzcompress"
- beginString: "gzdecode"
- beginString: "gzdeflate"
- beginString: "gzencode"
- beginString: "gzeof"
- beginString: "gzfile"
- beginString: "gzgetc"
- beginString: "gzgets"
- beginString: "gzgetss"
- beginString: "gzinflate"
- beginString: "gzopen"
- beginString: "gzpassthru"
- beginString: "gzputs"
- beginString: "gzread"
- beginString: "gzrewind"
- beginString: "gzseek"
- beginString: "gztell"
- beginString: "gzuncompress"
- beginString: "gzwrite"
- beginString: "hash"
- beginString: "hash_algos"
- beginString: "hash_copy"
- beginString: "hash_equals"
- beginString: "hash_file"
- beginString: "hash_final"
- beginString: "hash_hmac"
- beginString: "hash_hmac_file"
- beginString: "hash_init"
- beginString: "hash_pbkdf2"
- beginString: "hash_update"
- beginString: "hash_update_file"
- beginString: "hash_update_stream"
- beginString: "header"
- beginString: "header_register_callback"
- beginString: "header_remove"
- beginString: "headers_list"
- beginString: "headers_sent"
- beginString: "hebrev"
- beginString: "hebrevc"
- beginString: "hex2bin"
- beginString: "hexdec"
- beginString: "highlight_file"
- beginString: "highlight_string"
- beginString: "html_entity_decode"
- beginString: "htmlentities"
- beginString: "htmlspecialchars"
- beginString: "http_build_query"
- beginString: "http_response_code"
- beginString: "hypot"
- beginString: "ibase_add_user"
- beginString: "ibase_affected_rows"
- beginString: "ibase_backup"
- beginString: "ibase_blob_add"
- beginString: "ibase_blob_cancel"
- beginString: "ibase_blob_close"
- beginString: "ibase_blob_create"
- beginString: "ibase_blob_echo"
- beginString: "ibase_blob_get"
- beginString: "ibase_blob_import"
- beginString: "ibase_blob_info"
- beginString: "ibase_blob_open"
- beginString: "ibase_commit"
- beginString: "ibase_commit_ret"
- beginString: "ibase_connect"
- beginString: "ibase_db_info"
- beginString: "ibase_delete_user"
- beginString: "ibase_drop_db"
- beginString: "ibase_errcode"
- beginString: "ibase_errmsg"
- beginString: "ibase_execute"
- beginString: "ibase_fetch_assoc"
- beginString: "ibase_fetch_object"
- beginString: "ibase_fetch_row"
- beginString: "ibase_field_info"
- beginString: "ibase_free_event_handler"
- beginString: "ibase_free_query"
- beginString: "ibase_free_result"
- beginString: "ibase_gen_id"
- beginString: "ibase_maintain_db"
- beginString: "ibase_modify_user"
- beginString: "ibase_name_result"
- beginString: "ibase_num_fields"
- beginString: "ibase_num_params"
- beginString: "ibase_param_info"
- beginString: "ibase_pconnect"
- beginString: "ibase_prepare"
- beginString: "ibase_query"
- beginString: "ibase_restore"
- beginString: "ibase_rollback"
- beginString: "ibase_rollback_ret"
- beginString: "ibase_server_info"
- beginString: "ibase_service_attach"
- beginString: "ibase_service_detach"
- beginString: "ibase_set_event_handler"
- beginString: "ibase_timefmt"
- beginString: "ibase_trans"
- beginString: "ibase_wait_event"
- beginString: "iconv"
- beginString: "iconv_get_encoding"
- beginString: "iconv_mime_decode"
- beginString: "iconv_mime_decode_headers"
- beginString: "iconv_mime_encode"
- beginString: "iconv_set_encoding"
- beginString: "iconv_strlen"
- beginString: "iconv_strpos"
- beginString: "iconv_strrpos"
- beginString: "iconv_substr"
- beginString: "idate"
- beginString: "idn_to_ascii"
- beginString: "idn_to_unicode"
- beginString: "idn_to_utf8"
- beginString: "ifx_affected_rows"
- beginString: "ifx_blobinfile_mode"
- beginString: "ifx_byteasvarchar"
- beginString: "ifx_close"
- beginString: "ifx_connect"
- beginString: "ifx_copy_blob"
- beginString: "ifx_create_blob"
- beginString: "ifx_create_char"
- beginString: "ifx_do"
- beginString: "ifx_error"
- beginString: "ifx_errormsg"
- beginString: "ifx_fetch_row"
- beginString: "ifx_fieldproperties"
- beginString: "ifx_fieldtypes"
- beginString: "ifx_free_blob"
- beginString: "ifx_free_char"
- beginString: "ifx_free_result"
- beginString: "ifx_get_blob"
- beginString: "ifx_get_char"
- beginString: "ifx_getsqlca"
- beginString: "ifx_htmltbl_result"
- beginString: "ifx_nullformat"
- beginString: "ifx_num_fields"
- beginString: "ifx_num_rows"
- beginString: "ifx_pconnect"
- beginString: "ifx_prepare"
- beginString: "ifx_query"
- beginString: "ifx_textasvarchar"
- beginString: "ifx_update_blob"
- beginString: "ifx_update_char"
- beginString: "ifxus_close_slob"
- beginString: "ifxus_create_slob"
- beginString: "ifxus_free_slob"
- beginString: "ifxus_open_slob"
- beginString: "ifxus_read_slob"
- beginString: "ifxus_seek_slob"
- beginString: "ifxus_tell_slob"
- beginString: "ifxus_write_slob"
- beginString: "ignore_user_abort"
- beginString: "ile"
- beginString: "image"
- beginString: "image2wbmp"
- beginString: "image_type_to_extension"
- beginString: "image_type_to_mime_type"
- beginString: "imagealphablending"
- beginString: "imageantialias"
- beginString: "imagearc"
- beginString: "imagechar"
- beginString: "imagecharup"
- beginString: "imagecolorallocate"
- beginString: "imagecolorallocatealpha"
- beginString: "imagecolorat"
- beginString: "imagecolorclosest"
- beginString: "imagecolorclosestalpha"
- beginString: "imagecolorclosestthwb"
- beginString: "imagecolordeallocate"
- beginString: "imagecolorexact"
- beginString: "imagecolorexactalpha"
- beginString: "imagecolormatch"
- beginString: "imagecolorresolve"
- beginString: "imagecolorresolvealpha"
- beginString: "imagecolorset"
- beginString: "imagecolorsforindex"
- beginString: "imagecolorstotal"
- beginString: "imagecolortransparent"
- beginString: "imagecopy"
- beginString: "imagecopymerg"
- beginString: "imagecopymerge"
- beginString: "imagecopyresampled"
- beginString: "imagecopyresized"
- beginString: "imagecreate"
- beginString: "imagecreatefromgd"
- beginString: "imagecreatefromgd2"
- beginString: "imagecreatefromgd2part"
- beginString: "imagecreatefromgif"
- beginString: "imagecreatefromjpeg"
- beginString: "imagecreatefrompng"
- beginString: "imagecreatefromstring"
- beginString: "imagecreatefromwbmp"
- beginString: "imagecreatefromxbm"
- beginString: "imagecreatefromxpm"
- beginString: "imagecreatetruecolor"
- beginString: "imagedashedline"
- beginString: "imagedestroy"
- beginString: "imageellipse"
- beginString: "imagefill"
- beginString: "imagefilledarc"
- beginString: "imagefilledellipse"
- beginString: "imagefilledpolygon"
- beginString: "imagefilledrectangle"
- beginString: "imagefilltoborder"
- beginString: "imagefilter"
- beginString: "imagefontheight"
- beginString: "imagefontwidth"
- beginString: "imageftbbox"
- beginString: "imagefttext"
- beginString: "imagegammacorrect"
- beginString: "imagegd"
- beginString: "imagegd2"
- beginString: "imagegrabscreen"
- beginString: "imagegrabwindow"
- beginString: "imageinterlace"
- beginString: "imageistruecolor"
- beginString: "imagejpeg"
- beginString: "imageline"
- beginString: "imageloadfont"
- beginString: "imagepalettecopy"
- beginString: "imagepng"
- beginString: "imagepolygon"
- beginString: "imagepsbbox"
- beginString: "imagepscopyfont"
- beginString: "imagepsencodefont"
- beginString: "imagepsextendfont"
- beginString: "imagepsfreefont"
- beginString: "imagepsloadfont"
- beginString: "imagepsslantfont"
- beginString: "imagepstext"
- beginString: "imagerectangle"
- beginString: "imagerotate"
- beginString: "imagesavealpha"
- beginString: "imagesetbrush"
- beginString: "imagesetstyle"
- beginString: "imagesetthickness"
- beginString: "imagesettile"
- beginString: "imagestring"
- beginString: "imagestringup"
- beginString: "imagesx"
- beginString: "imagesy"
- beginString: "imagetruecolortopalette"
- beginString: "imagettfbbox"
- beginString: "imagettftext"
- beginString: "imagetypes"
- beginString: "imagewbmp"
- beginString: "imap_8bit"
- beginString: "imap_alerts"
- beginString: "imap_append"
- beginString: "imap_base64"
- beginString: "imap_binary"
- beginString: "imap_body"
- beginString: "imap_bodystruct"
- beginString: "imap_check"
- beginString: "imap_clearflag_full"
- beginString: "imap_close"
- beginString: "imap_createmailbox"
- beginString: "imap_delete"
- beginString: "imap_deletemailbox"
- beginString: "imap_errors"
- beginString: "imap_expunge"
- beginString: "imap_fetch_overview"
- beginString: "imap_fetchbody"
- beginString: "imap_fetchheader"
- beginString: "imap_fetchstructure"
- beginString: "imap_gc"
- beginString: "imap_get_quota"
- beginString: "imap_get_quotaroot"
- beginString: "imap_getacl"
- beginString: "imap_getmailboxes"
- beginString: "imap_getsubscribed"
- beginString: "imap_header"
- beginString: "imap_headerinfo"
- beginString: "imap_headers"
- beginString: "imap_last_error"
- beginString: "imap_list"
- beginString: "imap_listmailbox"
- beginString: "imap_listscan"
- beginString: "imap_listsubscribed"
- beginString: "imap_lsub"
- beginString: "imap_mail"
- beginString: "imap_mail_compose"
- beginString: "imap_mail_copy"
- beginString: "imap_mail_move"
- beginString: "imap_mailboxmsginfo"
- beginString: "imap_mime_header_decode"
- beginString: "imap_msgno"
- beginString: "imap_mutf7_to_utf8"
- beginString: "imap_num_msg"
- beginString: "imap_num_recent"
- beginString: "imap_open"
- beginString: "imap_ping"
- beginString: "imap_qprint"
- beginString: "imap_renamemailbox"
- beginString: "imap_reopen"
- beginString: "imap_rfc822_parse_adrlist"
- beginString: "imap_rfc822_parse_headers"
- beginString: "imap_rfc822_write_address"
- beginString: "imap_scanmailbox"
- beginString: "imap_search"
- beginString: "imap_set_quota"
- beginString: "imap_setacl"
- beginString: "imap_setflag_full"
- beginString: "imap_sort"
- beginString: "imap_status"
- beginString: "imap_subscribe"
- beginString: "imap_thread"
- beginString: "imap_uid"
- beginString: "imap_undelete"
- beginString: "imap_unsubscribe"
- beginString: "imap_utf7_decode"
- beginString: "imap_utf7_encode"
- beginString: "imap_utf8"
- beginString: "imap_utf8_to_mutf7"
- beginString: "implode"
- beginString: "import"
- beginString: "in_array"
- beginString: "inary"
- beginString: "ini_alter"
- beginString: "ini_get"
- beginString: "ini_get_all"
- beginString: "ini_restore"
- beginString: "ini_set"
- beginString: "interface_exists"
- beginString: "intl_error_name"
- beginString: "intl_get_error_code"
- beginString: "intl_get_error_message"
- beginString: "intl_is_failure"
- beginString: "intlcal_add"
- beginString: "intlcal_after"
- beginString: "intlcal_before"
- beginString: "intlcal_clear"
- beginString: "intlcal_create_instance"
- beginString: "intlcal_equals"
- beginString: "intlcal_field_difference"
- beginString: "intlcal_from_date_time"
- beginString: "intlcal_get"
- beginString: "intlcal_get_actual_maximum"
- beginString: "intlcal_get_actual_minimum"
- beginString: "intlcal_get_available_locales"
- beginString: "intlcal_get_day_of_week_type"
- beginString: "intlcal_get_error_code"
- beginString: "intlcal_get_error_message"
- beginString: "intlcal_get_first_day_of_week"
- beginString: "intlcal_get_greatest_minimum"
- beginString: "intlcal_get_keyword_values_for_locale"
- beginString: "intlcal_get_least_maximum"
- beginString: "intlcal_get_locale"
- beginString: "intlcal_get_maximum"
- beginString: "intlcal_get_minimal_days_in_first_week"
- beginString: "intlcal_get_minimum"
- beginString: "intlcal_get_now"
- beginString: "intlcal_get_repeated_wall_time_option"
- beginString: "intlcal_get_skipped_wall_time_option"
- beginString: "intlcal_get_time"
- beginString: "intlcal_get_time_zone"
- beginString: "intlcal_get_type"
- beginString: "intlcal_get_weekend_transition"
- beginString: "intlcal_in_daylight_time"
- beginString: "intlcal_is_equivalent_to"
- beginString: "intlcal_is_lenient"
- beginString: "intlcal_is_set"
- beginString: "intlcal_is_weekend"
- beginString: "intlcal_roll"
- beginString: "intlcal_set"
- beginString: "intlcal_set_first_day_of_week"
- beginString: "intlcal_set_lenient"
- beginString: "intlcal_set_repeated_wall_time_option"
- beginString: "intlcal_set_skipped_wall_time_option"
- beginString: "intlcal_set_time"
- beginString: "intlcal_set_time_zone"
- beginString: "intlcal_to_date_time"
- beginString: "intlgregcal_create_instance"
- beginString: "intlgregcal_get_gregorian_change"
- beginString: "intlgregcal_is_leap_year"
- beginString: "intlgregcal_set_gregorian_change"
- beginString: "intltz_count_equivalent_ids"
- beginString: "intltz_create_default"
- beginString: "intltz_create_enumeration"
- beginString: "intltz_create_time_zone"
- beginString: "intltz_create_time_zone_id_enumeration"
- beginString: "intltz_from_date_time_zone"
- beginString: "intltz_get_canonical_id"
- beginString: "intltz_get_display_name"
- beginString: "intltz_get_dst_savings"
- beginString: "intltz_get_equivalent_id"
- beginString: "intltz_get_error_code"
- beginString: "intltz_get_error_message"
- beginString: "intltz_get_gmt"
- beginString: "intltz_get_id"
- beginString: "intltz_get_offset"
- beginString: "intltz_get_raw_offset"
- beginString: "intltz_get_region"
- beginString: "intltz_get_tz_data_version"
- beginString: "intltz_get_unknown"
- beginString: "intltz_has_same_rules"
- beginString: "intltz_to_date_time_zone"
- beginString: "intltz_use_daylight_time"
- beginString: "intval"
- beginString: "ip2long"
- beginString: "iptcembed"
- beginString: "iptcparse"
- beginString: "is_a"
- beginString: "is_array"
- beginString: "is_bool"
- beginString: "is_callable"
- beginString: "is_dir"
- beginString: "is_double"
- beginString: "is_executable"
- beginString: "is_file"
- beginString: "is_finite"
- beginString: "is_float"
- beginString: "is_infinite"
- beginString: "is_int"
- beginString: "is_integer"
- beginString: "is_link"
- beginString: "is_long"
- beginString: "is_nan"
- beginString: "is_null"
- beginString: "is_numeric"
- beginString: "is_object"
- beginString: "is_readable"
- beginString: "is_real"
- beginString: "is_resource"
- beginString: "is_scalar"
- beginString: "is_soap_fault"
- beginString: "is_string"
- beginString: "is_subclass_of"
- beginString: "is_uploaded_file"
- beginString: "is_writable"
- beginString: "is_writeable"
- beginString: "isset"
- beginString: "iterator_apply"
- beginString: "iterator_count"
- beginString: "iterator_to_array"
- beginString: "java_last_exception_clear"
- beginString: "java_last_exception_get"
- beginString: "jddayofweek"
- beginString: "jdmonthname"
- beginString: "jdtofrench"
- beginString: "jdtogregorian"
- beginString: "jdtojewish"
- beginString: "jdtojulian"
- beginString: "jdtounix"
- beginString: "jewishtojd"
- beginString: "join"
- beginString: "jpeg2wbmp"
- beginString: "json_decode"
- beginString: "json_encode"
- beginString: "json_last_error"
- beginString: "juliantojd"
- beginString: "key"
- beginString: "krsort"
- beginString: "ksort"
- beginString: "lcfirst"
- beginString: "lcg_value"
- beginString: "ldap_8859_to_t61"
- beginString: "ldap_add"
- beginString: "ldap_bind"
- beginString: "ldap_close"
- beginString: "ldap_compare"
- beginString: "ldap_connect"
- beginString: "ldap_control_paged_result"
- beginString: "ldap_control_paged_result_response"
- beginString: "ldap_count_entries"
- beginString: "ldap_delete"
- beginString: "ldap_dn2ufn"
- beginString: "ldap_err2str"
- beginString: "ldap_errno"
- beginString: "ldap_error"
- beginString: "ldap_escape"
- beginString: "ldap_explode_dn"
- beginString: "ldap_first_attribute"
- beginString: "ldap_first_entry"
- beginString: "ldap_first_reference"
- beginString: "ldap_free_result"
- beginString: "ldap_get_attributes"
- beginString: "ldap_get_dn"
- beginString: "ldap_get_entries"
- beginString: "ldap_get_option"
- beginString: "ldap_get_values"
- beginString: "ldap_get_values_len"
- beginString: "ldap_list"
- beginString: "ldap_mod_add"
- beginString: "ldap_mod_del"
- beginString: "ldap_mod_replace"
- beginString: "ldap_modify"
- beginString: "ldap_modify_batch"
- beginString: "ldap_next_attribute"
- beginString: "ldap_next_entry"
- beginString: "ldap_next_reference"
- beginString: "ldap_parse_reference"
- beginString: "ldap_parse_result"
- beginString: "ldap_read"
- beginString: "ldap_rename"
- beginString: "ldap_sasl_bind"
- beginString: "ldap_search"
- beginString: "ldap_set_option"
- beginString: "ldap_set_rebind_proc"
- beginString: "ldap_sort"
- beginString: "ldap_start_tls"
- beginString: "ldap_t61_to_8859"
- beginString: "ldap_unbind"
- beginString: "levenshtein"
- beginString: "libxml_clear_errors"
- beginString: "libxml_disable_entity_loader"
- beginString: "libxml_get_errors"
- beginString: "libxml_get_last_error"
- beginString: "libxml_set_external_entity_loader"
- beginString: "libxml_set_streams_context"
- beginString: "libxml_use_internal_errors"
- beginString: "link"
- beginString: "linkinfo"
- beginString: "list"
- beginString: "listIDs"
- beginString: "ll"
- beginString: "load"
- beginString: "localeconv"
- beginString: "localtime"
- beginString: "log"
- beginString: "log10"
- beginString: "log1p"
- beginString: "long2ip"
- beginString: "lstat"
- beginString: "ltrim"
- beginString: "mail"
- beginString: "main"
- beginString: "max"
- beginString: "mb_convert_case"
- beginString: "mb_convert_encoding"
- beginString: "mb_convert_kana"
- beginString: "mb_convert_variables"
- beginString: "mb_decode_mimeheader"
- beginString: "mb_decode_numericentity"
- beginString: "mb_detect_encoding"
- beginString: "mb_detect_order"
- beginString: "mb_encode_mimeheader"
- beginString: "mb_encode_numericentity"
- beginString: "mb_encoding_aliases"
- beginString: "mb_ereg"
- beginString: "mb_ereg_match"
- beginString: "mb_ereg_replace"
- beginString: "mb_ereg_replace_callback"
- beginString: "mb_ereg_search"
- beginString: "mb_ereg_search_getpos"
- beginString: "mb_ereg_search_getregs"
- beginString: "mb_ereg_search_init"
- beginString: "mb_ereg_search_pos"
- beginString: "mb_ereg_search_regs"
- beginString: "mb_ereg_search_setpos"
- beginString: "mb_eregi"
- beginString: "mb_eregi_replace"
- beginString: "mb_get_info"
- beginString: "mb_http_input"
- beginString: "mb_http_output"
- beginString: "mb_internal_encoding"
- beginString: "mb_language"
- beginString: "mb_list_encodings"
- beginString: "mb_output_handler"
- beginString: "mb_parse_str"
- beginString: "mb_preferred_mime_name"
- beginString: "mb_regex_encoding"
- beginString: "mb_regex_set_options"
- beginString: "mb_send_mail"
- beginString: "mb_split"
- beginString: "mb_strcut"
- beginString: "mb_strimwidth"
- beginString: "mb_stripos"
- beginString: "mb_stristr"
- beginString: "mb_strlen"
- beginString: "mb_strpos"
- beginString: "mb_strrchr"
- beginString: "mb_strrichr"
- beginString: "mb_strripos"
- beginString: "mb_strrpos"
- beginString: "mb_strstr"
- beginString: "mb_strtolower"
- beginString: "mb_strtoupper"
- beginString: "mb_strwidth"
- beginString: "mb_substitute_character"
- beginString: "mb_substr"
- beginString: "mb_substr_count"
- beginString: "mcrypt_cbc"
- beginString: "mcrypt_cfb"
- beginString: "mcrypt_create_iv"
- beginString: "mcrypt_decrypt"
- beginString: "mcrypt_ecb"
- beginString: "mcrypt_enc_get_algorithms_name"
- beginString: "mcrypt_enc_get_block_size"
- beginString: "mcrypt_enc_get_iv_size"
- beginString: "mcrypt_enc_get_key_size"
- beginString: "mcrypt_enc_get_modes_name"
- beginString: "mcrypt_enc_get_supported_key_sizes"
- beginString: "mcrypt_enc_is_block_algorithm"
- beginString: "mcrypt_enc_is_block_algorithm_mode"
- beginString: "mcrypt_enc_is_block_mode"
- beginString: "mcrypt_enc_self_test"
- beginString: "mcrypt_encrypt"
- beginString: "mcrypt_generic"
- beginString: "mcrypt_generic_deinit"
- beginString: "mcrypt_generic_end"
- beginString: "mcrypt_generic_init"
- beginString: "mcrypt_get_block_size"
- beginString: "mcrypt_get_cipher_name"
- beginString: "mcrypt_get_iv_size"
- beginString: "mcrypt_get_key_size"
- beginString: "mcrypt_list_algorithms"
- beginString: "mcrypt_list_modes"
- beginString: "mcrypt_module_close"
- beginString: "mcrypt_module_get_algo_block_size"
- beginString: "mcrypt_module_get_algo_key_size"
- beginString: "mcrypt_module_get_supported_key_sizes"
- beginString: "mcrypt_module_is_block_algorithm"
- beginString: "mcrypt_module_is_block_algorithm_mode"
- beginString: "mcrypt_module_is_block_mode"
- beginString: "mcrypt_module_open"
- beginString: "mcrypt_module_self_test"
- beginString: "mcrypt_ofb"
- beginString: "md5"
- beginString: "md5_file"
- beginString: "mdecrypt_generic"
- beginString: "memory_get_peak_usage"
- beginString: "metaphone"
- beginString: "method_exists"
- beginString: "microtime"
- beginString: "mime_content_type"
- beginString: "min"
- beginString: "mkdir"
- beginString: "mktime"
- beginString: "ml_set_start_namespace_decl_handler"
- beginString: "money_format"
- beginString: "move_uploaded_file"
- beginString: "msg_get_queue"
- beginString: "msg_queue_exists"
- beginString: "msg_receive"
- beginString: "msg_remove_queue"
- beginString: "msg_send"
- beginString: "msg_set_queue"
- beginString: "msg_stat_queue"
- beginString: "mssql_bind"
- beginString: "mssql_close"
- beginString: "mssql_connect"
- beginString: "mssql_data_seek"
- beginString: "mssql_execute"
- beginString: "mssql_fetch_array"
- beginString: "mssql_fetch_assoc"
- beginString: "mssql_fetch_batch"
- beginString: "mssql_fetch_field"
- beginString: "mssql_fetch_object"
- beginString: "mssql_fetch_row"
- beginString: "mssql_field_length"
- beginString: "mssql_field_name"
- beginString: "mssql_field_seek"
- beginString: "mssql_field_type"
- beginString: "mssql_free_result"
- beginString: "mssql_free_statement"
- beginString: "mssql_get_last_message"
- beginString: "mssql_guid_string"
- beginString: "mssql_init"
- beginString: "mssql_min_error_severity"
- beginString: "mssql_min_message_severity"
- beginString: "mssql_next_result"
- beginString: "mssql_num_fields"
- beginString: "mssql_num_rows"
- beginString: "mssql_pconnect"
- beginString: "mssql_query"
- beginString: "mssql_result"
- beginString: "mssql_rows_affected"
- beginString: "mssql_select_db"
- beginString: "mt_getrandmax"
- beginString: "mt_rand"
- beginString: "mt_srand"
- beginString: "mysql_affected_rows"
- beginString: "mysql_change_user"
- beginString: "mysql_client_encoding"
- beginString: "mysql_close"
- beginString: "mysql_connect"
- beginString: "mysql_create_db"
- beginString: "mysql_data_seek"
- beginString: "mysql_db_name"
- beginString: "mysql_db_query"
- beginString: "mysql_drop_db"
- beginString: "mysql_errno"
- beginString: "mysql_error"
- beginString: "mysql_escape_string"
- beginString: "mysql_fetch_array"
- beginString: "mysql_fetch_assoc"
- beginString: "mysql_fetch_field"
- beginString: "mysql_fetch_lengths"
- beginString: "mysql_fetch_object"
- beginString: "mysql_fetch_row"
- beginString: "mysql_field_flags"
- beginString: "mysql_field_len"
- beginString: "mysql_field_name"
- beginString: "mysql_field_seek"
- beginString: "mysql_field_table"
- beginString: "mysql_field_type"
- beginString: "mysql_free_result"
- beginString: "mysql_get_client_info"
- beginString: "mysql_get_host_info"
- beginString: "mysql_get_proto_info"
- beginString: "mysql_get_ser"
- beginString: "mysql_get_server_info"
- beginString: "mysql_info"
- beginString: "mysql_insert_id"
- beginString: "mysql_list_dbs"
- beginString: "mysql_list_fields"
- beginString: "mysql_list_processes"
- beginString: "mysql_list_tables"
- beginString: "mysql_num_fields"
- beginString: "mysql_num_rows"
- beginString: "mysql_pconnect"
- beginString: "mysql_ping"
- beginString: "mysql_query"
- beginString: "mysql_real_escape_string"
- beginString: "mysql_result"
- beginString: "mysql_select_db"
- beginString: "mysql_stat"
- beginString: "mysql_tablename"
- beginString: "mysql_thread_id"
- beginString: "mysql_unbuffered_query"
- beginString: "mysqli_error_list"
- beginString: "mysqli_fetch_all"
- beginString: "mysqli_get_connection_stats"
- beginString: "mysqli_get_links_stats"
- beginString: "mysqli_poll"
- beginString: "mysqli_reap_async_query"
- beginString: "mysqli_stmt_error_list"
- beginString: "namedanchor"
- beginString: "natcasesort"
- beginString: "natsort"
- beginString: "next"
- beginString: "ngettext"
- beginString: "nl2br"
- beginString: "nl_langinfo"
- beginString: "nsapi_request_headers"
- beginString: "nsapi_response_headers"
- beginString: "nsapi_virtual"
- beginString: "number_format"
- beginString: "ob_clean"
- beginString: "ob_end_clean"
- beginString: "ob_end_flush"
- beginString: "ob_flush"
- beginString: "ob_get_clean"
- beginString: "ob_get_contents"
- beginString: "ob_get_length"
- beginString: "ob_get_level"
- beginString: "ob_get_status"
- beginString: "ob_gzhandler"
- beginString: "ob_iconv_handler"
- beginString: "ob_implicit_flush"
- beginString: "ob_start"
- beginString: "ob_tidyhandler"
- beginString: "oci_bind_array_by_name"
- beginString: "oci_bind_by_name"
- beginString: "oci_cancel"
- beginString: "oci_client_version"
- beginString: "oci_close"
- beginString: "oci_commit"
- beginString: "oci_connect"
- beginString: "oci_define_by_name"
- beginString: "oci_error"
- beginString: "oci_execute"
- beginString: "oci_fetch"
- beginString: "oci_fetch_all"
- beginString: "oci_fetch_array"
- beginString: "oci_fetch_assoc"
- beginString: "oci_fetch_object"
- beginString: "oci_fetch_row"
- beginString: "oci_field_is_null"
- beginString: "oci_field_name"
- beginString: "oci_field_precision"
- beginString: "oci_field_scale"
- beginString: "oci_field_size"
- beginString: "oci_field_type"
- beginString: "oci_field_type_raw"
- beginString: "oci_free_statement"
- beginString: "oci_get_implicit_resultset"
- beginString: "oci_internal_debug"
- beginString: "oci_lob_copy"
- beginString: "oci_lob_is_equal"
- beginString: "oci_new_collection"
- beginString: "oci_new_connect"
- beginString: "oci_new_cursor"
- beginString: "oci_new_descriptor"
- beginString: "oci_num_fields"
- beginString: "oci_num_rows"
- beginString: "oci_parse"
- beginString: "oci_password_change"
- beginString: "oci_pconnect"
- beginString: "oci_result"
- beginString: "oci_rollback"
- beginString: "oci_server_version"
- beginString: "oci_set_action"
- beginString: "oci_set_client_identifier"
- beginString: "oci_set_client_info"
- beginString: "oci_set_edition"
- beginString: "oci_set_module_name"
- beginString: "oci_set_prefetch"
- beginString: "oci_statement_type"
- beginString: "octdec"
- beginString: "odbc_autocommit"
- beginString: "odbc_binmode"
- beginString: "odbc_close"
- beginString: "odbc_close_all"
- beginString: "odbc_columnprivileges"
- beginString: "odbc_columns"
- beginString: "odbc_commit"
- beginString: "odbc_connect"
- beginString: "odbc_cursor"
- beginString: "odbc_data_source"
- beginString: "odbc_do"
- beginString: "odbc_error"
- beginString: "odbc_errormsg"
- beginString: "odbc_exec"
- beginString: "odbc_execute"
- beginString: "odbc_fetch_array"
- beginString: "odbc_fetch_into"
- beginString: "odbc_fetch_object"
- beginString: "odbc_fetch_row"
- beginString: "odbc_field_len"
- beginString: "odbc_field_name"
- beginString: "odbc_field_num"
- beginString: "odbc_field_precision"
- beginString: "odbc_field_scale"
- beginString: "odbc_field_type"
- beginString: "odbc_foreignkeys"
- beginString: "odbc_free_result"
- beginString: "odbc_gettypeinfo"
- beginString: "odbc_longreadlen"
- beginString: "odbc_next_result"
- beginString: "odbc_num_fields"
- beginString: "odbc_num_rows"
- beginString: "odbc_pconnect"
- beginString: "odbc_prepare"
- beginString: "odbc_primarykeys"
- beginString: "odbc_procedurecolumns"
- beginString: "odbc_procedures"
- beginString: "odbc_result"
- beginString: "odbc_result_all"
- beginString: "odbc_rollback"
- beginString: "odbc_setoption"
- beginString: "odbc_specialcolumns"
- beginString: "odbc_statistics"
- beginString: "odbc_tableprivileges"
- beginString: "odbc_tables"
- beginString: "old_function"
- beginString: "opendir"
- beginString: "openlog"
- beginString: "openssl_cipher_iv_length"
- beginString: "openssl_csr_export"
- beginString: "openssl_csr_export_to_file"
- beginString: "openssl_csr_get_public_key"
- beginString: "openssl_csr_get_subject"
- beginString: "openssl_csr_new"
- beginString: "openssl_csr_sign"
- beginString: "openssl_decrypt"
- beginString: "openssl_dh_compute_key"
- beginString: "openssl_digest"
- beginString: "openssl_encrypt"
- beginString: "openssl_error_string"
- beginString: "openssl_free_key"
- beginString: "openssl_get_cert_locations"
- beginString: "openssl_get_cipher_methods"
- beginString: "openssl_get_md_methods"
- beginString: "openssl_get_privatekey"
- beginString: "openssl_get_publickey"
- beginString: "openssl_open"
- beginString: "openssl_pkcs12_export"
- beginString: "openssl_pkcs12_export_to_file"
- beginString: "openssl_pkcs12_read"
- beginString: "openssl_pkcs7_decrypt"
- beginString: "openssl_pkcs7_encrypt"
- beginString: "openssl_pkcs7_sign"
- beginString: "openssl_pkcs7_verify"
- beginString: "openssl_pkey_export"
- beginString: "openssl_pkey_export_to_file"
- beginString: "openssl_pkey_free"
- beginString: "openssl_pkey_get_details"
- beginString: "openssl_pkey_get_private"
- beginString: "openssl_pkey_get_public"
- beginString: "openssl_pkey_new"
- beginString: "openssl_private_decrypt"
- beginString: "openssl_private_encrypt"
- beginString: "openssl_public_decrypt"
- beginString: "openssl_public_encrypt"
- beginString: "openssl_random_pseudo_bytes"
- beginString: "openssl_seal"
- beginString: "openssl_sign"
- beginString: "openssl_spki_new"
- beginString: "openssl_spki_verify"
- beginString: "openssl_spki_export_challenge"
- beginString: "openssl_spki_export"
- beginString: "openssl_verify"
- beginString: "openssl_x509_check_private_key"
- beginString: "openssl_x509_checkpurpose"
- beginString: "openssl_x509_export"
- beginString: "openssl_x509_export_to_file"
- beginString: "openssl_x509_fingerprint"
- beginString: "openssl_x509_free"
- beginString: "openssl_x509_parse"
- beginString: "openssl_x509_read"
- beginString: "ord"
- beginString: "pack"
- beginString: "parse_ini_file"
- beginString: "parse_ini_string"
- beginString: "parse_str"
- beginString: "parse_url"
- beginString: "passthru"
- beginString: "password_get_info"
- beginString: "password_hash"
- beginString: "password_needs_rehash"
- beginString: "password_verify"
- beginString: "pathinfo"
- beginString: "pclose"
- beginString: "pcntl_alarm"
- beginString: "pcntl_exec"
- beginString: "pcntl_fork"
- beginString: "pcntl_getpriority"
- beginString: "pcntl_setpriority"
- beginString: "pcntl_signal"
- beginString: "pcntl_signal_dispatch"
- beginString: "pcntl_sigprocmask"
- beginString: "pcntl_sigtimedwait"
- beginString: "pcntl_sigwaitinfo"
- beginString: "pcntl_wait"
- beginString: "pcntl_waitpid"
- beginString: "pcntl_wexitstatus"
- beginString: "pcntl_wifexited"
- beginString: "pcntl_wifsignaled"
- beginString: "pcntl_wifstopped"
- beginString: "pcntl_wstopsig"
- beginString: "pcntl_wtermsig"
- beginString: "pdf_add_annotation"
- beginString: "pdf_add_bookmark"
- beginString: "pdf_add_launchlink"
- beginString: "pdf_add_locallink"
- beginString: "pdf_add_note"
- beginString: "pdf_add_outline"
- beginString: "pdf_add_pdflink"
- beginString: "pdf_add_thumbnail"
- beginString: "pdf_add_weblink"
- beginString: "pdf_arc"
- beginString: "pdf_arcn"
- beginString: "pdf_attach_file"
- beginString: "pdf_begin_page"
- beginString: "pdf_begin_pattern"
- beginString: "pdf_begin_template"
- beginString: "pdf_circle"
- beginString: "pdf_clip"
- beginString: "pdf_close"
- beginString: "pdf_close_image"
- beginString: "pdf_close_pdi"
- beginString: "pdf_close_pdi_page"
- beginString: "pdf_closepath"
- beginString: "pdf_closepath_fill_stroke"
- beginString: "pdf_closepath_stroke"
- beginString: "pdf_concat"
- beginString: "pdf_continue_text"
- beginString: "pdf_curveto"
- beginString: "pdf_delete"
- beginString: "pdf_end_page"
- beginString: "pdf_end_pattern"
- beginString: "pdf_end_template"
- beginString: "pdf_endpath"
- beginString: "pdf_fill"
- beginString: "pdf_fill_stroke"
- beginString: "pdf_findfont"
- beginString: "pdf_get_buffer"
- beginString: "pdf_get_font"
- beginString: "pdf_get_fontname"
- beginString: "pdf_get_fontsize"
- beginString: "pdf_get_image_height"
- beginString: "pdf_get_image_width"
- beginString: "pdf_get_majorversion"
- beginString: "pdf_get_minorversion"
- beginString: "pdf_get_parameter"
- beginString: "pdf_get_pdi_parameter"
- beginString: "pdf_get_pdi_value"
- beginString: "pdf_get_value"
- beginString: "pdf_initgraphics"
- beginString: "pdf_lineto"
- beginString: "pdf_makespotcolor"
- beginString: "pdf_moveto"
- beginString: "pdf_new"
- beginString: "pdf_open"
- beginString: "pdf_open_CCITT"
- beginString: "pdf_open_file"
- beginString: "pdf_open_gif"
- beginString: "pdf_open_image"
- beginString: "pdf_open_image_file"
- beginString: "pdf_open_jpeg"
- beginString: "pdf_open_memory_image"
- beginString: "pdf_open_pdi"
- beginString: "pdf_open_pdi_page"
- beginString: "pdf_open_png"
- beginString: "pdf_open_tiff"
- beginString: "pdf_place_image"
- beginString: "pdf_place_pdi_page"
- beginString: "pdf_restore"
- beginString: "pdf_rotate"
- beginString: "pdf_save"
- beginString: "pdf_scale"
- beginString: "pdf_set_border_color"
- beginString: "pdf_set_border_dash"
- beginString: "pdf_set_border_style"
- beginString: "pdf_set_char_spacing"
- beginString: "pdf_set_duration"
- beginString: "pdf_set_font"
- beginString: "pdf_set_horiz_scaling"
- beginString: "pdf_set_info"
- beginString: "pdf_set_info_author"
- beginString: "pdf_set_info_creator"
- beginString: "pdf_set_info_keywords"
- beginString: "pdf_set_info_subject"
- beginString: "pdf_set_info_title"
- beginString: "pdf_set_leading"
- beginString: "pdf_set_parameter"
- beginString: "pdf_set_text_matrix"
- beginString: "pdf_set_text_pos"
- beginString: "pdf_set_text_rendering"
- beginString: "pdf_set_text_rise"
- beginString: "pdf_set_value"
- beginString: "pdf_set_word_spacing"
- beginString: "pdf_setcolor"
- beginString: "pdf_setdash"
- beginString: "pdf_setflat"
- beginString: "pdf_setfont"
- beginString: "pdf_setgray"
- beginString: "pdf_setgray_fi"
- beginString: "pdf_setgray_stroke"
- beginString: "pdf_setlinecap"
- beginString: "pdf_setlinejoin"
- beginString: "pdf_setlinewidth"
- beginString: "pdf_setmatrix"
- beginString: "pdf_setmiterlimit"
- beginString: "pdf_setpolydash"
- beginString: "pdf_setrgbcolor"
- beginString: "pdf_setrgbcolor_fill"
- beginString: "pdf_setrgbcolor_stroke"
- beginString: "pdf_show"
- beginString: "pdf_show_boxed"
- beginString: "pdf_show_xy"
- beginString: "pdf_skew"
- beginString: "pdf_stringwidth"
- beginString: "pdf_stroke"
- beginString: "pdf_translate"
- beginString: "pfsockopen"
- beginString: "pg"
- beginString: "pg_affected_rows"
- beginString: "pg_cancel_query"
- beginString: "pg_client_encoding"
- beginString: "pg_close"
- beginString: "pg_connect"
- beginString: "pg_connect_poll"
- beginString: "pg_connection_busy"
- beginString: "pg_connection_reset"
- beginString: "pg_connection_status"
- beginString: "pg_consume_input"
- beginString: "pg_convert"
- beginString: "pg_copy_from"
- beginString: "pg_copy_to"
- beginString: "pg_dbname"
- beginString: "pg_delete"
- beginString: "pg_end_copy"
- beginString: "pg_escape_bytea"
- beginString: "pg_escape_identifier"
- beginString: "pg_escape_literal"
- beginString: "pg_escape_string"
- beginString: "pg_execute"
- beginString: "pg_fetch_all"
- beginString: "pg_fetch_all_columns"
- beginString: "pg_fetch_array"
- beginString: "pg_fetch_assoc"
- beginString: "pg_fetch_object"
- beginString: "pg_fetch_result"
- beginString: "pg_fetch_row"
- beginString: "pg_field_is_null"
- beginString: "pg_field_name"
- beginString: "pg_field_num"
- beginString: "pg_field_prtlen"
- beginString: "pg_field_size"
- beginString: "pg_field_table"
- beginString: "pg_field_type"
- beginString: "pg_field_type_oid"
- beginString: "pg_flush"
- beginString: "pg_free_result"
- beginString: "pg_get_notify"
- beginString: "pg_get_pid"
- beginString: "pg_get_result"
- beginString: "pg_host"
- beginString: "pg_insert"
- beginString: "pg_last_error"
- beginString: "pg_last_notice"
- beginString: "pg_last_oid"
- beginString: "pg_lo_close"
- beginString: "pg_lo_create"
- beginString: "pg_lo_export"
- beginString: "pg_lo_import"
- beginString: "pg_lo_open"
- beginString: "pg_lo_read"
- beginString: "pg_lo_read_all"
- beginString: "pg_lo_seek"
- beginString: "pg_lo_tell"
- beginString: "pg_lo_unlink"
- beginString: "pg_lo_write"
- beginString: "pg_meta_data"
- beginString: "pg_num_fields"
- beginString: "pg_num_rows"
- beginString: "pg_options"
- beginString: "pg_parameter_status"
- beginString: "pg_pconnect"
- beginString: "pg_ping"
- beginString: "pg_port"
- beginString: "pg_prepare"
- beginString: "pg_put_line"
- beginString: "pg_query"
- beginString: "pg_query_params"
- beginString: "pg_result_error"
- beginString: "pg_result_error_field"
- beginString: "pg_result_seek"
- beginString: "pg_result_status"
- beginString: "pg_select"
- beginString: "pg_send_execute"
- beginString: "pg_send_prepare"
- beginString: "pg_send_query"
- beginString: "pg_send_query_params"
- beginString: "pg_set_client_encoding"
- beginString: "pg_set_error_verbosity"
- beginString: "pg_socket"
- beginString: "pg_trace"
- beginString: "pg_transaction_status"
- beginString: "pg_tty"
- beginString: "pg_unescape_bytea"
- beginString: "pg_untrace"
- beginString: "pg_update"
- beginString: "pg_version"
- beginString: "php_check_syntax"
- beginString: "php_ini_scanned_files"
- beginString: "php_sapi_name"
- beginString: "php_strip_whitespace"
- beginString: "php_uname"
- beginString: "php_user_filter"
- beginString: "phpcredits"
- beginString: "phpinfo"
- beginString: "phpversion"
- beginString: "pi"
- beginString: "png2wbmp"
- beginString: "poll"
- beginString: "popen"
- beginString: "pos"
- beginString: "posix_access"
- beginString: "posix_ctermid"
- beginString: "posix_errno"
- beginString: "posix_get_last_error"
- beginString: "posix_getcwd"
- beginString: "posix_getegid"
- beginString: "posix_geteuid"
- beginString: "posix_getgid"
- beginString: "posix_getgrgid"
- beginString: "posix_getgrnam"
- beginString: "posix_getgroups"
- beginString: "posix_getlogin"
- beginString: "posix_getpgid"
- beginString: "posix_getpgrp"
- beginString: "posix_getpid"
- beginString: "posix_getppid"
- beginString: "posix_getpwnam"
- beginString: "posix_getpwuid"
- beginString: "posix_getrlimit"
- beginString: "posix_getsid"
- beginString: "posix_getuid"
- beginString: "posix_initgroups"
- beginString: "posix_isatty"
- beginString: "posix_kill"
- beginString: "posix_mkfifo"
- beginString: "posix_setegid"
- beginString: "posix_seteuid"
- beginString: "posix_setgid"
- beginString: "posix_setpgid"
- beginString: "posix_setsid"
- beginString: "posix_setuid"
- beginString: "posix_strerror"
- beginString: "posix_times"
- beginString: "posix_ttyname"
- beginString: "posix_uname"
- beginString: "pow"
- beginString: "preg_filter"
- beginString: "preg_grep"
- beginString: "preg_last_error"
- beginString: "preg_match"
- beginString: "preg_match_all"
- beginString: "preg_quote"
- beginString: "preg_replace"
- beginString: "preg_replace_callback"
- beginString: "preg_split"
- beginString: "prev"
- beginString: "print"
- beginString: "print_r"
- beginString: "printf"
- beginString: "proc_close"
- beginString: "proc_get_status"
- beginString: "proc_nice"
- beginString: "proc_open"
- beginString: "pspell_add_to_personal"
- beginString: "pspell_add_to_session"
- beginString: "pspell_check"
- beginString: "pspell_clear_session"
- beginString: "pspell_config_create"
- beginString: "pspell_config_data_dir"
- beginString: "pspell_config_dict_dir"
- beginString: "pspell_config_ignore"
- beginString: "pspell_config_mode"
- beginString: "pspell_config_personal"
- beginString: "pspell_config_repl"
- beginString: "pspell_config_runtogether"
- beginString: "pspell_config_save_repl"
- beginString: "pspell_new"
- beginString: "pspell_new_config"
- beginString: "pspell_new_personal"
- beginString: "pspell_save_wordlist"
- beginString: "pspell_store_replacement"
- beginString: "pspell_suggest"
- beginString: "putenv"
- beginString: "quoted_printable_decode"
- beginString: "quoted_printable_encode"
- beginString: "quotemeta"
- beginString: "rad2deg"
- beginString: "rand"
- beginString: "range"
- beginString: "rawurldecode"
- beginString: "rawurlencode"
- beginString: "read"
- beginString: "read_exif_data"
- beginString: "readdir"
- beginString: "readfile"
- beginString: "readgzfile"
- beginString: "readline"
- beginString: "readline_add_history"
- beginString: "readline_callback_handler_install"
- beginString: "readline_callback_handler_remove"
- beginString: "readline_callback_read_char"
- beginString: "readline_clear_history"
- beginString: "readline_completion_function"
- beginString: "readline_info"
- beginString: "readline_list_history"
- beginString: "readline_on_new_line"
- beginString: "readline_read_history"
- beginString: "readline_redisplay"
- beginString: "readline_write_history"
- beginString: "readlink"
- beginString: "realpath"
- beginString: "reap_async_query"
- beginString: "recode"
- beginString: "recode_file"
- beginString: "recode_string"
- beginString: "register_shutdown_function"
- beginString: "register_tick_function"
- beginString: "rename"
- beginString: "reset"
- beginString: "restore_error_handler"
- beginString: "returns"
- beginString: "rewind"
- beginString: "rewinddir"
- beginString: "rmdir"
- beginString: "round"
- beginString: "rsort"
- beginString: "rtrim"
- beginString: "save"
- beginString: "saveFile"
- beginString: "scandir"
- beginString: "seek"
- beginString: "sem_acquire"
- beginString: "sem_get"
- beginString: "sem_release"
- beginString: "sem_remove"
- beginString: "serialize"
- beginString: "session_abort"
- beginString: "session_cache_expire"
- beginString: "session_cache_limiter"
- beginString: "session_decode"
- beginString: "session_destroy"
- beginString: "session_encode"
- beginString: "session_get_cookie_params"
- beginString: "session_id"
- beginString: "session_module_name"
- beginString: "session_name"
- beginString: "session_regenerate_id"
- beginString: "session_register_shutdown"
- beginString: "session_reset"
- beginString: "session_save_path"
- beginString: "session_set_cookie_params"
- beginString: "session_set_save_handler"
- beginString: "session_start"
- beginString: "session_status"
- beginString: "session_unset"
- beginString: "session_write_close"
- beginString: "set_error_handler"
- beginString: "set_file_buffer"
- beginString: "set_magic_quotes_runtime"
- beginString: "set_time_limit"
- beginString: "setBuffering"
- beginString: "setcookie"
- beginString: "setlocale"
- beginString: "setrawcookie"
- beginString: "settype"
- beginString: "sha1"
- beginString: "sha1_file"
- beginString: "sheet_file"
- beginString: "shell_exec"
- beginString: "shm_attach"
- beginString: "shm_detach"
- beginString: "shm_get_var"
- beginString: "shm_has_var"
- beginString: "shm_put_var"
- beginString: "shm_remove"
- beginString: "shm_remove_var"
- beginString: "shmop_close"
- beginString: "shmop_delete"
- beginString: "shmop_open"
- beginString: "shmop_read"
- beginString: "shmop_size"
- beginString: "shmop_write"
- beginString: "show_source"
- beginString: "shuffle"
- beginString: "similar_text"
- beginString: "simplexml_import_dom"
- beginString: "simplexml_load_file"
- beginString: "simplexml_load_string"
- beginString: "sin"
- beginString: "sinh"
- beginString: "size"
- beginString: "sizeof"
- beginString: "sleep"
- beginString: "snmp2_get"
- beginString: "snmp2_getnext"
- beginString: "snmp2_real_walk"
- beginString: "snmp2_set"
- beginString: "snmp2_walk"
- beginString: "snmp3_get"
- beginString: "snmp3_getnext"
- beginString: "snmp3_real_walk"
- beginString: "snmp3_set"
- beginString: "snmp3_walk"
- beginString: "snmp_get_quick_print"
- beginString: "snmp_get_valueretrieval"
- beginString: "snmp_read_mib"
- beginString: "snmp_set_enum_print"
- beginString: "snmp_set_oid_numeric_print"
- beginString: "snmp_set_oid_output_format"
- beginString: "snmp_set_quick_print"
- beginString: "snmp_set_valueretrieval"
- beginString: "snmpget"
- beginString: "snmpgetnext"
- beginString: "snmprealwalk"
- beginString: "snmpset"
- beginString: "snmpwalk"
- beginString: "snmpwalkoid"
- beginString: "socket_accept"
- beginString: "socket_bind"
- beginString: "socket_clear_error"
- beginString: "socket_close"
- beginString: "socket_connect"
- beginString: "socket_create"
- beginString: "socket_create_listen"
- beginString: "socket_create_pair"
- beginString: "socket_get_option"
- beginString: "socket_get_status"
- beginString: "socket_getpeername"
- beginString: "socket_getsockname"
- beginString: "socket_import_stream"
- beginString: "socket_last_error"
- beginString: "socket_listen"
- beginString: "socket_read"
- beginString: "socket_recv"
- beginString: "socket_recvfrom"
- beginString: "socket_select"
- beginString: "socket_send"
- beginString: "socket_sendto"
- beginString: "socket_set_block"
- beginString: "socket_set_blocking"
- beginString: "socket_set_nonblock"
- beginString: "socket_set_option"
- beginString: "socket_set_timeout"
- beginString: "socket_shutdown"
- beginString: "socket_strerror"
- beginString: "socket_write"
- beginString: "sort"
- beginString: "soundex"
- beginString: "spl_autoload"
- beginString: "spl_autoload_call"
- beginString: "spl_autoload_extensions"
- beginString: "spl_autoload_functions"
- beginString: "spl_autoload_register"
- beginString: "spl_autoload_unregister"
- beginString: "spl_classes"
- beginString: "spl_object_hash"
- beginString: "split"
- beginString: "spliti"
- beginString: "sprintf"
- beginString: "sql_regcase"
- beginString: "sqlite_array_query"
- beginString: "sqlite_busy_timeout"
- beginString: "sqlite_changes"
- beginString: "sqlite_close"
- beginString: "sqlite_column"
- beginString: "sqlite_create_aggregate"
- beginString: "sqlite_create_function"
- beginString: "sqlite_current"
- beginString: "sqlite_error_string"
- beginString: "sqlite_escape_string"
- beginString: "sqlite_exec"
- beginString: "sqlite_factory"
- beginString: "sqlite_fetch_all"
- beginString: "sqlite_fetch_array"
- beginString: "sqlite_fetch_column_types"
- beginString: "sqlite_fetch_object"
- beginString: "sqlite_fetch_single"
- beginString: "sqlite_fetch_string"
- beginString: "sqlite_field_name"
- beginString: "sqlite_has_more"
- beginString: "sqlite_has_prev"
- beginString: "sqlite_key"
- beginString: "sqlite_last_error"
- beginString: "sqlite_last_insert_rowid"
- beginString: "sqlite_libencoding"
- beginString: "sqlite_libversion"
- beginString: "sqlite_next"
- beginString: "sqlite_num_fields"
- beginString: "sqlite_num_rows"
- beginString: "sqlite_open"
- beginString: "sqlite_popen"
- beginString: "sqlite_prev"
- beginString: "sqlite_query"
- beginString: "sqlite_rewind"
- beginString: "sqlite_seek"
- beginString: "sqlite_single_query"
- beginString: "sqlite_udf_decode_binary"
- beginString: "sqlite_udf_encode_binary"
- beginString: "sqlite_unbuffered_query"
- beginString: "sqlite_valid"
- beginString: "sqrt"
- beginString: "srand"
- beginString: "sscanf"
- beginString: "startDTDEntity"
- beginString: "stat"
- beginString: "stdClass"
- beginString: "str_getcsv"
- beginString: "str_ireplace"
- beginString: "str_pad"
- beginString: "str_repeat"
- beginString: "str_replace"
- beginString: "str_rot13"
- beginString: "str_shuffle"
- beginString: "str_split"
- beginString: "str_word_count"
- beginString: "strcasecmp"
- beginString: "strchr"
- beginString: "strcmp"
- beginString: "strcoll"
- beginString: "strcspn"
- beginString: "stream_cast"
- beginString: "stream_context_create"
- beginString: "stream_context_get_options"
- beginString: "stream_context_get_params"
- beginString: "stream_context_set_default"
- beginString: "stream_context_set_option"
- beginString: "stream_context_set_params"
- beginString: "stream_copy_to_stream"
- beginString: "stream_filter_append"
- beginString: "stream_filter_prepend"
- beginString: "stream_get_filters"
- beginString: "stream_get_line"
- beginString: "stream_get_meta_data"
- beginString: "stream_get_transports"
- beginString: "stream_get_wrappers"
- beginString: "stream_register_filter"
- beginString: "stream_register_wrapper"
- beginString: "stream_select"
- beginString: "stream_set_blocking"
- beginString: "stream_set_chunk_size"
- beginString: "stream_set_option"
- beginString: "stream_set_timeout"
- beginString: "stream_set_write_buffer"
- beginString: "stream_socket_accept"
- beginString: "stream_socket_client"
- beginString: "stream_socket_get_name"
- beginString: "stream_socket_recvfrom"
- beginString: "stream_socket_sendto"
- beginString: "stream_socket_server"
- beginString: "stream_socket_shutdown"
- beginString: "stream_supports_lock"
- beginString: "strftime"
- beginString: "strip_tags"
- beginString: "stripcslashes"
- beginString: "stripos"
- beginString: "stripslashes"
- beginString: "stristr"
- beginString: "strlen"
- beginString: "strnatcasecmp"
- beginString: "strnatcmp"
- beginString: "strncasecmp"
- beginString: "strncmp"
- beginString: "strpbrk"
- beginString: "strpos"
- beginString: "strptime"
- beginString: "strrchr"
- beginString: "strrev"
- beginString: "strrpos"
- beginString: "strspn"
- beginString: "strstr"
- beginString: "strtok"
- beginString: "strtolower"
- beginString: "strtotime"
- beginString: "strtoupper"
- beginString: "strtr"
- beginString: "strval"
- beginString: "substr"
- beginString: "substr_compare"
- beginString: "substr_count"
- beginString: "substr_replace"
- beginString: "svn_add"
- beginString: "svn_auth_get_parameter"
- beginString: "svn_auth_set_parameter"
- beginString: "svn_blame"
- beginString: "svn_cat"
- beginString: "svn_checkout"
- beginString: "svn_cleanup"
- beginString: "svn_client_version"
- beginString: "svn_commit"
- beginString: "svn_delete"
- beginString: "svn_diff"
- beginString: "svn_export"
- beginString: "svn_fs_abort_txn"
- beginString: "svn_fs_apply_text"
- beginString: "svn_fs_begin_txn2"
- beginString: "svn_fs_change_node_prop"
- beginString: "svn_fs_check_path"
- beginString: "svn_fs_contents_changed"
- beginString: "svn_fs_copy"
- beginString: "svn_fs_delete"
- beginString: "svn_fs_dir_entries"
- beginString: "svn_fs_file_contents"
- beginString: "svn_fs_file_length"
- beginString: "svn_fs_is_dir"
- beginString: "svn_fs_is_file"
- beginString: "svn_fs_make_dir"
- beginString: "svn_fs_make_file"
- beginString: "svn_fs_node_created_rev"
- beginString: "svn_fs_node_prop"
- beginString: "svn_fs_props_changed"
- beginString: "svn_fs_revision_prop"
- beginString: "svn_fs_revision_root"
- beginString: "svn_fs_txn_root"
- beginString: "svn_fs_youngest_rev"
- beginString: "svn_import"
- beginString: "svn_log"
- beginString: "svn_ls"
- beginString: "svn_mkdir"
- beginString: "svn_repos_create"
- beginString: "svn_repos_fs"
- beginString: "svn_repos_fs_begin_txn_for_commit"
- beginString: "svn_repos_fs_commit_txn"
- beginString: "svn_repos_hotcopy"
- beginString: "svn_repos_open"
- beginString: "svn_repos_recover"
- beginString: "svn_revert"
- beginString: "svn_status"
- beginString: "svn_update"
- beginString: "swfaction"
- beginString: "swfbutton"
- beginString: "swfdisplayitem"
- beginString: "swffill"
- beginString: "swffont"
- beginString: "swfgradient"
- beginString: "swfmorph"
- beginString: "swfmovie"
- beginString: "swfshape"
- beginString: "swfsprite"
- beginString: "swftext"
- beginString: "swftextfield"
- beginString: "symlink"
- beginString: "sys_get_temp_dir"
- beginString: "syslog"
- beginString: "system"
- beginString: "tan"
- beginString: "tanh"
- beginString: "tell"
- beginString: "tempnam"
- beginString: "textdomain"
- beginString: "tidy_access_count"
- beginString: "tidy_config_count"
- beginString: "tidy_error_count"
- beginString: "tidy_get_output"
- beginString: "tidy_load_config"
- beginString: "tidy_reset_config"
- beginString: "tidy_save_config"
- beginString: "tidy_set_encoding"
- beginString: "tidy_setopt"
- beginString: "tidy_warning_count"
- beginString: "time"
- beginString: "time_nanosleep"
- beginString: "timezone_abbreviations_list"
- beginString: "timezone_identifiers_list"
- beginString: "timezone_name_from_abbr"
- beginString: "timezone_name_get"
- beginString: "timezone_offset_get"
- beginString: "timezone_open"
- beginString: "timezone_transitions_get"
- beginString: "timezone_version_get"
- beginString: "tmpfile"
- beginString: "token_get_all"
- beginString: "token_name"
- beginString: "touch"
- beginString: "trait_exists"
- beginString: "transliterate"
- beginString: "transliterator_create"
- beginString: "transliterator_create_from_rules"
- beginString: "transliterator_create_inverse"
- beginString: "transliterator_get_error_code"
- beginString: "transliterator_get_error_message"
- beginString: "transliterator_list_ids"
- beginString: "transliterator_transliterate"
- beginString: "trigger_error"
- beginString: "trim"
- beginString: "truncate"
- beginString: "uasort"
- beginString: "ucfirst"
- beginString: "ucwords"
- beginString: "uid"
- beginString: "uksort"
- beginString: "umask"
- beginString: "uniqid"
- beginString: "unixtojd"
- beginString: "unlink"
- beginString: "unpack"
- beginString: "unregister_tick_function"
- beginString: "unserialize"
- beginString: "unset"
- beginString: "urldecode"
- beginString: "urlencode"
- beginString: "use_soap_error_handler"
- beginString: "user_error"
- beginString: "usleep"
- beginString: "usort"
- beginString: "utf8_decode"
- beginString: "utf8_encode"
- beginString: "var_dump"
- beginString: "var_export"
- beginString: "variant_abs"
- beginString: "variant_add"
- beginString: "variant_and"
- beginString: "variant_cast"
- beginString: "variant_cat"
- beginString: "variant_cmp"
- beginString: "variant_date_from_timestamp"
- beginString: "variant_date_to_timestamp"
- beginString: "variant_div"
- beginString: "variant_eqv"
- beginString: "variant_fix"
- beginString: "variant_get_type"
- beginString: "variant_idiv"
- beginString: "variant_imp"
- beginString: "variant_int"
- beginString: "variant_mod"
- beginString: "variant_mul"
- beginString: "variant_neg"
- beginString: "variant_not"
- beginString: "variant_or"
- beginString: "variant_pow"
- beginString: "variant_round"
- beginString: "variant_set"
- beginString: "variant_set_type"
- beginString: "variant_sub"
- beginString: "variant_xor"
- beginString: "ver_info"
- beginString: "version_compare"
- beginString: "virtual"
- beginString: "vprintf"
- beginString: "vsprintf"
- beginString: "wddx_add_vars"
- beginString: "wddx_deserialize"
- beginString: "wddx_packet_end"
- beginString: "wddx_packet_start"
- beginString: "wddx_serialize_value"
- beginString: "wddx_serialize_vars"
- beginString: "wordwrap"
- beginString: "write"
- beginString: "writeDTDEntity"
- beginString: "writeRaw"
- beginString: "writeTemporary"
- beginString: "writeToFile"
- beginString: "xml_error_string"
- beginString: "xml_get_current_byte_index"
- beginString: "xml_get_current_column_number"
- beginString: "xml_get_current_line_number"
- beginString: "xml_get_error_code"
- beginString: "xml_parse"
- beginString: "xml_parse_into_struct"
- beginString: "xml_parser_create"
- beginString: "xml_parser_create_ns"
- beginString: "xml_parser_free"
- beginString: "xml_parser_get_option"
- beginString: "xml_parser_set_option"
- beginString: "xml_set_character_data_handler"
- beginString: "xml_set_default_handler"
- beginString: "xml_set_element_handler"
- beginString: "xml_set_end_namespace_decl_handler"
- beginString: "xml_set_external_entity_ref_handler"
- beginString: "xml_set_notation_decl_handler"
- beginString: "xml_set_object"
- beginString: "xml_set_processing_instruction_handler"
- beginString: "xml_set_start_namespace_decl_handler"
- beginString: "xml_set_unparsed_entity_decl_handler"
- beginString: "xmlrpc_decode"
- beginString: "xmlrpc_decode_request"
- beginString: "xmlrpc_encode"
- beginString: "xmlrpc_encode_request"
- beginString: "xmlrpc_get_type"
- beginString: "xmlrpc_parse_method_descriptions"
- beginString: "xmlrpc_server_add_introspection_data"
- beginString: "xmlrpc_server_call_method"
- beginString: "xmlrpc_server_create"
- beginString: "xmlrpc_server_destroy"
- beginString: "xmlrpc_server_register_introspection_callback"
- beginString: "xmlrpc_server_register_method"
- beginString: "xmlrpc_set_type"
- beginString: "xmlwriter_end_dtd_entity"
- beginString: "xmlwriter_full_end_element"
- beginString: "xmlwriter_start_dtd_entity"
- beginString: "xmlwriter_write_dtd_entity"
- beginString: "xmlwriter_write_raw"
- beginString: "xpath_eval"
- beginString: "xpath_eval_expression"
- beginString: "xpath_new_context"
- beginString: "xptr_eval"
- beginString: "xptr_new_context"
- beginString: "xslt_create"
- beginString: "xslt_errno"
- beginString: "xslt_error"
- beginString: "xslt_free"
- beginString: "xslt_process"
- beginString: "xslt_set_base"
- beginString: "xslt_set_encoding"
- beginString: "xslt_set_error_handler"
- beginString: "xslt_set_log"
- beginString: "xslt_set_sax_handler"
- beginString: "xslt_set_sax_handlers"
- beginString: "xslt_set_scheme_handler"
- beginString: "xslt_set_scheme_handlers"
- beginString: "xslt_setopt"
- beginString: "yaml_emit"
- beginString: "yaml_emit_file"
- beginString: "yaml_parse"
- beginString: "yaml_parse_file"
- beginString: "yaml_parse_url"
- beginString: "zend_version"
- beginString: "zip_close"
- beginString: "zip_entry_close"
- beginString: "zip_entry_compressedsize"
- beginString: "zip_entry_compressionmethod"
- beginString: "zip_entry_filesize"
- beginString: "zip_entry_name"
- beginString: "zip_entry_open"
- beginString: "zip_entry_read"
- beginString: "zip_open"
- beginString: "zip_read"
- beginString: "zlib_decode"
- beginString: "zlib_encode"
- beginString: "zlib_get_coding_type"
characters:
- beginString: "'"
  endString: "'"
comments:
- beginString: "#[^\\n]*?(?=$|\\?>)"
  regularExpression: true
values:
- beginString: "__CLASS__"
- beginString: "__DIR__"
- beginString: "__FILE__"
- beginString: "__FUNCTION__"
- beginString: "__LINE__"
- beginString: "__METHOD__"
- beginString: "__NAMESPACE__"
- beginString: "__TRAIT__"
- beginString: "ABDAY_1"
- beginString: "ABDAY_2"
- beginString: "ABDAY_3"
- beginString: "ABDAY_4"
- beginString: "ABDAY_5"
- beginString: "ABDAY_6"
- beginString: "ABDAY_7"
- beginString: "ABMON_1"
- beginString: "ABMON_10"
- beginString: "ABMON_11"
- beginString: "ABMON_12"
- beginString: "ABMON_2"
- beginString: "ABMON_3"
- beginString: "ABMON_4"
- beginString: "ABMON_5"
- beginString: "ABMON_6"
- beginString: "ABMON_7"
- beginString: "ABMON_8"
- beginString: "ABMON_9"
- beginString: "ALT_DIGITS"
- beginString: "AM_STR"
- beginString: "ASSERT_ACTIVE"
- beginString: "ASSERT_BAIL"
- beginString: "ASSERT_CALLBACK"
- beginString: "ASSERT_QUIET_EVAL"
- beginString: "ASSERT_WARNING"
- beginString: "BUS_ADRALN"
- beginString: "BUS_ADRERR"
- beginString: "BUS_OBJERR"
- beginString: "CAL_FRENCH"
- beginString: "CAL_GREGORIAN"
- beginString: "CAL_JEWISH"
- beginString: "CAL_JULIAN"
- beginString: "CASE_LOWER"
- beginString: "CASE_UPPER"
- beginString: "CHAR_MAX"
- beginString: "CLD_CONTIUNED"
- beginString: "CLD_DUMPED"
- beginString: "CLD_EXITED"
- beginString: "CLD_KILLED"
- beginString: "CLD_STOPPED"
- beginString: "CLD_TRAPPED"
- beginString: "CODESET"
- beginString: "CONNECTION_ABORTED"
- beginString: "CONNECTION_NORMAL"
- beginString: "CONNECTION_TIMEOUT"
- beginString: "COUNT_NORMAL"
- beginString: "COUNT_RECURSIVE"
- beginString: "CREDITS_ALL"
- beginString: "CREDITS_DOCS"
- beginString: "CREDITS_FULLPAGE"
- beginString: "CREDITS_GENERAL"
- beginString: "CREDITS_GROUP"
- beginString: "CREDITS_MODULES"
- beginString: "CREDITS_QA"
- beginString: "CREDITS_SAPI"
- beginString: "CRNCYSTR"
- beginString: "CRYP"
- beginString: "CRYPT_BLOWFISH"
- beginString: "CRYPT_EXT_DES"
- beginString: "CRYPT_MD5"
- beginString: "CRYPT_SALT_LENGTH"
- beginString: "CURLE_FILESIZE_EXCEEDED"
- beginString: "CURLE_FTP_SSL_FAILED"
- beginString: "CURLE_LDAP_INVALID_URL"
- beginString: "CURLFTPAUTH_DEFAULT"
- beginString: "CURLFTPAUTH_SSL"
- beginString: "CURLFTPAUTH_TLS"
- beginString: "CURLFTPSSL_ALL"
- beginString: "CURLFTPSSL_CONTROL"
- beginString: "CURLFTPSSL_NONE"
- beginString: "CURLFTPSSL_TRY"
- beginString: "CURLOPT_CONNECTTIMEOUT_MS"
- beginString: "CURLOPT_FTP_SSL"
- beginString: "CURLOPT_FTPSSLAUTH"
- beginString: "CURLOPT_MAX_RECV_SPEED_LARGE"
- beginString: "CURLOPT_MAX_SEND_SPEED_LARGE"
- beginString: "CURLOPT_PROGRESSFUNCTION"
- beginString: "CURLOPT_TCP_NODELAY"
- beginString: "CURLOPT_TIMEOUT_MS"
- beginString: "CURRENCY_SYMBOL"
- beginString: "D_FMT"
- beginString: "D_T_FMT"
- beginString: "DAY_1"
- beginString: "DAY_2"
- beginString: "DAY_3"
- beginString: "DAY_4"
- beginString: "DAY_5"
- beginString: "DAY_6"
- beginString: "DAY_7"
- beginString: "DECIMAL_POINT"
- beginString: "DEFAULT_INCLUDE_PATH"
- beginString: "DIRECTORY_SEPARATOR"
- beginString: "E_ALL"
- beginString: "E_COMPILE_ERROR"
- beginString: "E_COMPILE_WARNING"
- beginString: "E_CORE_ERROR"
- beginString: "E_CORE_WARNING"
- beginString: "E_DEPRECATED"
- beginString: "E_ERROR"
- beginString: "E_NOTICE"
- beginString: "E_PARSE"
- beginString: "E_STRICT"
- beginString: "E_USER"
- beginString: "E_USER_DEPRECATED"
- beginString: "E_USER_ERROR"
- beginString: "E_USER_NOTICE"
- beginString: "E_USER_WARNING"
- beginString: "E_WARNING"
- beginString: "ENT_COMPAT"
- beginString: "ENT_DISALLOWED"
- beginString: "ENT_HTML401"
- beginString: "ENT_HTML5"
- beginString: "ENT_NOQUOTES"
- beginString: "ENT_QUOTES"
- beginString: "ENT_SUBSTITUTE"
- beginString: "ENT_XHTML"
- beginString: "ENT_XML1"
- beginString: "ERA"
- beginString: "ERA_D_FMT"
- beginString: "ERA_D_T_FMT"
- beginString: "ERA_T_FMT"
- beginString: "ERA_YEAR"
- beginString: "EXTR_IF_EXISTS"
- beginString: "EXTR_OVERWRITE"
- beginString: "EXTR_PREFIX_ALL"
- beginString: "EXTR_PREFIX_IF_EXISTS"
- beginString: "EXTR_PREFIX_INVALID"
- beginString: "EXTR_PREFIX_SAME"
- beginString: "EXTR_SKIP"
- beginString: "false"
- beginString: "FALSE"
- beginString: "FPE_FLTDIV"
- beginString: "FPE_FLTINV"
- beginString: "FPE_FLTOVF"
- beginString: "FPE_FLTRES"
- beginString: "FPE_FLTSUB"
- beginString: "FPE_FLTUND"
- beginString: "FPE_INTDIV"
- beginString: "FPE_INTOVF"
- beginString: "FRAC_DIGITS"
- beginString: "GMP_VERSION"
- beginString: "GROUPING"
- beginString: "HTML_ENTITIES"
- beginString: "HTML_SPECIALCHARS"
- beginString: "IDNA_CHECK_BIDI"
- beginString: "IDNA_CHECK_CONTEXTJ"
- beginString: "IDNA_ERROR_BIDI"
- beginString: "IDNA_ERROR_CONTEXTJ"
- beginString: "IDNA_ERROR_DISALLOWED"
- beginString: "IDNA_ERROR_DOMAIN_NAME_TOO_LONG"
- beginString: "IDNA_ERROR_EMPTY_LABEL"
- beginString: "IDNA_ERROR_HYPHEN_3_4"
- beginString: "IDNA_ERROR_INVALID_ACE_LABEL"
- beginString: "IDNA_ERROR_LABEL_HAS_DOT"
- beginString: "IDNA_ERROR_LABEL_TOO_LONG"
- beginString: "IDNA_ERROR_LEADING_COMBINING_MARK"
- beginString: "IDNA_ERROR_LEADING_HYPHEN"
- beginString: "IDNA_ERROR_PUNYCODE"
- beginString: "IDNA_ERROR_TRAILING_HYPHEN"
- beginString: "IDNA_NONTRANSITIONAL_TO_ASCII"
- beginString: "IDNA_NONTRANSITIONAL_TO_UNICODE"
- beginString: "ILL_BADSTK"
- beginString: "ILL_COPROC"
- beginString: "ILL_ILLADR"
- beginString: "ILL_ILLOPC"
- beginString: "ILL_ILLOPN"
- beginString: "ILL_ILLTRP"
- beginString: "ILL_PRVOPC"
- beginString: "ILL_PRVREG"
- beginString: "IMG_FILTER_PIXELATE"
- beginString: "INFO_ALL"
- beginString: "INFO_CONFIGURATION"
- beginString: "INFO_CREDITS"
- beginString: "INFO_ENVIRONMENT"
- beginString: "INFO_GENERAL"
- beginString: "INFO_LICENSE"
- beginString: "INFO_MODULES"
- beginString: "INFO_VARIABLES"
- beginString: "INI_ALL"
- beginString: "INI_PERDIR"
- beginString: "INI_SCANNER_NORMAL"
- beginString: "INI_SCANNER_RAW"
- beginString: "INI_SYSTEM"
- beginString: "INI_USER"
- beginString: "INT_CURR_SYMBOL"
- beginString: "INT_FRAC_DIGITS"
- beginString: "INTL_IDNA_VARIANT_2003"
- beginString: "INTL_IDNA_VARIANT_UTS46"
- beginString: "IP_MULTICAST_IF"
- beginString: "IP_MULTICAST_LOOP"
- beginString: "IP_MULTICAST_TTL"
- beginString: "IPPROTO_IP"
- beginString: "IPPROTO_IPV6"
- beginString: "IPV6_MULTICAST_HOPS"
- beginString: "IPV6_MULTICAST_IF"
- beginString: "IPV6_MULTICAST_LOOP"
- beginString: "JSON_BIGINT_AS_STRING"
- beginString: "JSON_ERROR_CTRL_CHAR"
- beginString: "JSON_ERROR_DEPTH"
- beginString: "JSON_ERROR_NONE"
- beginString: "JSON_ERROR_STATE_MISMATCH"
- beginString: "JSON_ERROR_SYNTAX"
- beginString: "JSON_FORCE_OBJECT"
- beginString: "JSON_HEX_AMP"
- beginString: "JSON_HEX_APOS"
- beginString: "JSON_HEX_QUOT"
- beginString: "JSON_HEX_TAG"
- beginString: "JSON_NUMERIC_CHECK"
- beginString: "JSON_PRETTY_PRINT"
- beginString: "JSON_UNESCAPED_SLASHES"
- beginString: "JSON_UNESCAPED_UNICODE"
- beginString: "LC_ALL"
- beginString: "LC_COLLATE"
- beginString: "LC_CTYPE"
- beginString: "LC_MESSAGES"
- beginString: "LC_MONETARY"
- beginString: "LC_NUMERIC"
- beginString: "LC_TIME"
- beginString: "LDAP_ESCAPE_DN"
- beginString: "LDAP_ESCAPE_FILTER"
- beginString: "LDAP_OPT_NETWORK_TIMEOUT"
- beginString: "LIBXML_HTML_NODEFDTD"
- beginString: "LIBXML_HTML_NOIMPLIED"
- beginString: "LIBXML_LOADED_VERSION"
- beginString: "LIBXML_PEDANTIC"
- beginString: "LOCK_EX"
- beginString: "LOCK_NB"
- beginString: "LOCK_SH"
- beginString: "LOCK_UN"
- beginString: "LOG_ALERT"
- beginString: "LOG_AUTH"
- beginString: "LOG_AUTHPRIV"
- beginString: "LOG_CONS"
- beginString: "LOG_CRIT"
- beginString: "LOG_CRON"
- beginString: "LOG_DAEMON"
- beginString: "LOG_DEBUG"
- beginString: "LOG_EMERG"
- beginString: "LOG_ERR"
- beginString: "LOG_INFO"
- beginString: "LOG_KERN"
- beginString: "LOG_LOCAL0"
- beginString: "LOG_LOCAL1"
- beginString: "LOG_LOCAL2"
- beginString: "LOG_LOCAL3"
- beginString: "LOG_LOCAL4"
- beginString: "LOG_LOCAL5"
- beginString: "LOG_LOCAL6"
- beginString: "LOG_LOCAL7"
- beginString: "LOG_LPR"
- beginString: "LOG_MAIL"
- beginString: "LOG_NDELAY"
- beginString: "LOG_NEWS"
- beginString: "LOG_NOTICE"
- beginString: "LOG_NOWAIT"
- beginString: "LOG_ODELAY"
- beginString: "LOG_PERROR"
- beginString: "LOG_PID"
- beginString: "LOG_SYSLOG"
- beginString: "LOG_USER"
- beginString: "LOG_UUCP"
- beginString: "LOG_WARNING"
- beginString: "M_1_PI"
- beginString: "M_2_PI"
- beginString: "M_2_SQRTPI"
- beginString: "M_E"
- beginString: "M_EULER"
- beginString: "M_LN10"
- beginString: "M_LN2"
- beginString: "M_LNPI"
- beginString: "M_LOG10E"
- beginString: "M_LOG2E"
- beginString: "M_PI"
- beginString: "M_PI_2"
- beginString: "M_PI_4"
- beginString: "M_SQRT1_2"
- beginString: "M_SQRT2"
- beginString: "M_SQRT3"
- beginString: "M_SQRTPI"
- beginString: "MCAST_BLOCK_SOURCE"
- beginString: "MCAST_JOIN_GROUP"
- beginString: "MCAST_JOIN_SOURCE_GROUP"
- beginString: "MCAST_LEAVE_GROUP"
- beginString: "MCAST_LEAVE_SOURCE_GROUP"
- beginString: "MCAST_UNBLOCK_SOURCE"
- beginString: "MON_1"
- beginString: "MON_10"
- beginString: "MON_11"
- beginString: "MON_12"
- beginString: "MON_2"
- beginString: "MON_3"
- beginString: "MON_4"
- beginString: "MON_5"
- beginString: "MON_6"
- beginString: "MON_7"
- beginString: "MON_8"
- beginString: "MON_9"
- beginString: "MON_DECIMAL_POINT"
- beginString: "MON_GROUPING"
- beginString: "MON_THOUSANDS_SEP"
- beginString: "MSG_EAGAIN"
- beginString: "MSG_ENOMSG"
- beginString: "N_CS_PRECEDES"
- beginString: "N_SEP_BY_SPACE"
- beginString: "N_SIGN_POSN"
- beginString: "NEGATIVE_SIGN"
- beginString: "NOEXPR"
- beginString: "NOSTR"
- beginString: "NOTICE"
- beginString: "NULL"
- beginString: "OPENSSL_CIPHER_AES_128_CBC"
- beginString: "OPENSSL_CIPHER_AES_192_CBC"
- beginString: "OPENSSL_CIPHER_AES_256_CBC"
- beginString: "OPENSSL_DEFAULT_STREAM_CIPHERS"
- beginString: "OPENSSL_RAW_DATA"
- beginString: "OPENSSL_VERSION_NUMBER"
- beginString: "OPENSSL_VERSION_TEXT"
- beginString: "OPENSSL_ZERO_PADDING"
- beginString: "P_CS_PRECEDES"
- beginString: "P_SEP_BY_SPACE"
- beginString: "P_SIGN_POSN"
- beginString: "PATHINFO_BASENAME"
- beginString: "PATHINFO_DIRNAME"
- beginString: "PATHINFO_EXTENSION"
- beginString: "PATHINFO_FILENAME"
- beginString: "PEAR_EXTENSION_DIR"
- beginString: "PEAR_INSTALL_DIR"
- beginString: "PGSQL_CONNECT_ASYNC"
- beginString: "PGSQL_CONNECTION_AUTH_OK"
- beginString: "PGSQL_CONNECTION_AWAITING_RESPONSE"
- beginString: "PGSQL_CONNECTION_MADE"
- beginString: "PGSQL_CONNECTION_SETENV"
- beginString: "PGSQL_CONNECTION_SSL_STARTUP"
- beginString: "PGSQL_CONNECTION_STARTED"
- beginString: "PGSQL_DML_ESCAPE"
- beginString: "PGSQL_POLLING_ACTIVE"
- beginString: "PGSQL_POLLING_FAILED"
- beginString: "PGSQL_POLLING_OK"
- beginString: "PGSQL_POLLING_READING"
- beginString: "PGSQL_POLLING_WRITING"
- beginString: "PHP_BINDIR"
- beginString: "PHP_CONFIG_FILE_PATH"
- beginString: "PHP_DATADIR"
- beginString: "PHP_EOL"
- beginString: "PHP_EXTENSION_DIR"
- beginString: "PHP_LIBDIR"
- beginString: "PHP_LOCALSTATEDIR"
- beginString: "PHP_MAXPATHLEN"
- beginString: "PHP_OS"
- beginString: "PHP_OUTPUT_HANDLER_CLEAN"
- beginString: "PHP_OUTPUT_HANDLER_CLEANABLE"
- beginString: "PHP_OUTPUT_HANDLER_CONT"
- beginString: "PHP_OUTPUT_HANDLER_DISABLED"
- beginString: "PHP_OUTPUT_HANDLER_END"
- beginString: "PHP_OUTPUT_HANDLER_FINAL"
- beginString: "PHP_OUTPUT_HANDLER_FLUSH"
- beginString: "PHP_OUTPUT_HANDLER_FLUSHABLE"
- beginString: "PHP_OUTPUT_HANDLER_REMOVABLE"
- beginString: "PHP_OUTPUT_HANDLER_START"
- beginString: "PHP_OUTPUT_HANDLER_STARTED"
- beginString: "PHP_OUTPUT_HANDLER_STDFLAGS"
- beginString: "PHP_OUTPUT_HANDLER_WRITE"
- beginString: "PHP_SESSION_ACTIVE"
- beginString: "PHP_SESSION_DISABLED"
- beginString: "PHP_SESSION_NONE"
- beginString: "PHP_SYSCONFDIR"
- beginString: "PHP_VERSION"
- beginString: "PHP_WINDOWS_NT_DOMAIN_CONTROLLER"
- beginString: "PHP_WINDOWS_NT_SERVER"
- beginString: "PHP_WINDOWS_NT_WORKSTATION"
- beginString: "PHP_WINDOWS_VERSION_BUILD"
- beginString: "PHP_WINDOWS_VERSION_MAJOR"
- beginString: "PHP_WINDOWS_VERSION_MINOR"
- beginString: "PHP_WINDOWS_VERSION_PLATFORM"
- beginString: "PHP_WINDOWS_VERSION_PRODUCTTYPE"
- beginString: "PHP_WINDOWS_VERSION_SP_MAJOR"
- beginString: "PHP_WINDOWS_VERSION_SP_MINOR"
- beginString: "PHP_WINDOWS_VERSION_SUITEMASK"
- beginString: "PM_STR"
- beginString: "POLL_ERR"
- beginString: "POLL_HUP"
- beginString: "POLL_IN"
- beginString: "POLL_MSG"
- beginString: "POLL_OUT"
- beginString: "POLL_PRI"
- beginString: "POSITIVE_SIGN"
- beginString: "PREG_BACKTRACK_LIMIT_ERROR"
- beginString: "PREG_BAD_UTF8_ERROR"
- beginString: "PREG_BAD_UTF8_OFFSET_ERROR"
- beginString: "PREG_INTERNAL_ERROR"
- beginString: "PREG_NO_ERROR"
- beginString: "PREG_RECURSION_LIMIT_ERROR"
- beginString: "RADIXCHAR"
- beginString: "SEEK_CUR"
- beginString: "SEEK_END"
- beginString: "SEEK_SET"
- beginString: "SEGV_ACCERR"
- beginString: "SEGV_MAPERR"
- beginString: "SI_ASYNCIO"
- beginString: "SI_KERNEL"
- beginString: "SI_MESGQ"
- beginString: "SI_NOINFO"
- beginString: "SI_QUEUE"
- beginString: "SI_SIGIO"
- beginString: "SI_TIMER"
- beginString: "SI_TKILL"
- beginString: "SI_USER"
- beginString: "SIG_BLOCK"
- beginString: "SIG_SETMASK"
- beginString: "SIG_UNBLOCK"
- beginString: "SNMP_OID_OUTPUT_FULL"
- beginString: "SNMP_OID_OUTPUT_NUMERIC"
- beginString: "SORT_ASC"
- beginString: "SORT_DESC"
- beginString: "SORT_NUMERIC"
- beginString: "SORT_REGULAR"
- beginString: "SORT_STRING"
- beginString: "STR_PAD_BOTH"
- beginString: "STR_PAD_LEFT"
- beginString: "STR_PAD_RIGHT"
- beginString: "STREAM_CRYPTO_METHOD_ANY_CLIENT"
- beginString: "STREAM_CRYPTO_METHOD_ANY_SERVER"
- beginString: "STREAM_CRYPTO_METHOD_TLSv1_0_CLIENT"
- beginString: "STREAM_CRYPTO_METHOD_TLSv1_0_SERVER"
- beginString: "STREAM_CRYPTO_METHOD_TLSv1_1_CLIENT"
- beginString: "STREAM_CRYPTO_METHOD_TLSv1_1_SERVER"
- beginString: "STREAM_CRYPTO_METHOD_TLSv1_2_CLIENT"
- beginString: "STREAM_CRYPTO_METHOD_TLSv1_2_SERVER"
- beginString: "STREAM_META_ACCESS"
- beginString: "STREAM_META_GROUP"
- beginString: "STREAM_META_GROUP_NAME"
- beginString: "STREAM_META_OWNER"
- beginString: "STREAM_META_OWNER_NAME"
- beginString: "STREAM_META_TOUCH"
- beginString: "STREAM_SHUT_RD"
- beginString: "STREAM_SHUT_RDWR"
- beginString: "STREAM_SHUT_WR"
- beginString: "SWF_SOUND_11KHZ"
- beginString: "SWF_SOUND_16BITS"
- beginString: "SWF_SOUND_22KHZ"
- beginString: "SWF_SOUND_44KHZ"
- beginString: "SWF_SOUND_5KHZ"
- beginString: "SWF_SOUND_8BITS"
- beginString: "SWF_SOUND_ADPCM_COMPRESSED"
- beginString: "SWF_SOUND_MONO"
- beginString: "SWF_SOUND_MP3_COMPRESSED"
- beginString: "SWF_SOUND_NELLY_COMPRESSED"
- beginString: "SWF_SOUND_NOT_COMPRESSED"
- beginString: "SWF_SOUND_NOT_COMPRESSED_LE"
- beginString: "SWF_SOUND_STEREO"
- beginString: "SWFTEXTFIELD_AUTOSIZE"
- beginString: "SWFTEXTFIELD_USEFONT"
- beginString: "T_FMT"
- beginString: "T_FMT_AMPM"
- beginString: "T_STD_DES"
- beginString: "THOUSANDS_SEP"
- beginString: "THOUSEP"
- beginString: "TRAP_BRKPT"
- beginString: "TRAP_TRACE"
- beginString: "true"
- beginString: "TRUE"
- beginString: "U_IDNA_DOMAIN_NAME_TOO_LONG_ERROR"
- beginString: "UPLOAD_ERR_EXTENSION"
- beginString: "YESEXPR"
- beginString: "YESSTR"
- beginString: "ZLIB_ENCODING_DEFLATE"
- beginString: "ZLIB_ENCODING_GZIP"
- beginString: "ZLIB_ENCODING_RAW"
types:
- beginString: "bool"
- beginString: "boolean"
- beginString: "callable"
- beginString: "double"
- beginString: "float"
- beginString: "int"
- beginString: "integer"
- beginString: "mixed"
- beginString: "null"
- beginString: "number"
- beginString: "object"
- beginString: "resource"
- beginString: "string"
- beginString: "void"
numbers:
- beginString: "\\b-?0b[01]+\\b"
  regularExpression: true
  description: "binary"
- beginString: "\\b-?0x[0-9a-f]+\\b"
  ignoreCase: true
  regularExpression: true
  description: "hexadecimal"
- beginString: "\\b-?\\d*\\.?\\d+\\b"
  regularExpression: true
  description: "decimal"
strings:
- beginString: "\""
  endString: "\""
keywords:
- beginString: "<?php"
- beginString: "?>"
- beginString: "abstract"
- beginString: "and"
- beginString: "and"
- beginString: "as"
- beginString: "binary"
- beginString: "break"
- beginString: "case"
- beginString: "catch"
- beginString: "class"
- beginString: "clone"
- beginString: "const"
- beginString: "continue"
- beginString: "declare"
- beginString: "default"
- beginString: "do"
- beginString: "else"
- beginString: "elseif"
- beginString: "endfor"
- beginString: "endforeach"
- beginString: "endif"
- beginString: "endswitch"
- beginString: "endwhile"
- beginString: "exit"
- beginString: "extends"
- beginString: "final"
- beginString: "finally"
- beginString: "for"
- beginString: "foreach"
- beginString: "function"
- beginString: "global"
- beginString: "goto"
- beginString: "if"
- beginString: "implements"
- beginString: "include"
- beginString: "include_once"
- beginString: "instanceof"
- beginString: "insteadof"
- beginString: "interface"
- beginString: "namespace"
- beginString: "new"
- beginString: "or"
- beginString: "OR"
- beginString: "private"
- beginString: "protected"
- beginString: "public"
- beginString: "real"
- beginString: "require"
- beginString: "require_once"
- beginString: "return"
- beginString: "static"
- beginString: "switch"
- beginString: "throw"
- beginString: "trait"
- beginString: "try"
- beginString: "unset"
- beginString: "use"
- beginString: "var"
- beginString: "while"
- beginString: "xor"
- beginString: "yield"
variables:
- beginString: "&?\\$[a-zA-Z_¥x7f-¥xff][a-zA-Z0-9_¥x7f-¥xff]*"
  regularExpression: true
- beginString: "(?<=->)\\s*[a-zA-Z_\\x7f-\\xff][a-zA-Z0-9_\\x7f-\\xff]*+(?!\\s*\\()"
  regularExpression: true
commentDelimiters:
  endDelimiter: "*/"
  beginDelimiter: "/*"
  inlineDelimiter: "//"
