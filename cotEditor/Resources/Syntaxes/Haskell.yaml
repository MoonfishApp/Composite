extensions:
- keyString: "hs"
- keyString: "lhs"
interpreters:
- keyString: "runhaskell"
metadata:
  distributionURL: "https://coteditor.com"
  author: "konn"
  license: "Same as CotEditor"
  lastModified: "2015-12-25"
  description: "Maintained by CotEditor Project."
  version: "2.2.1"
outlineMenu:
- beginString: "^[\\t ]*([a-z][\\w_']*\\s*.+?)(?=\\s*=)"
- beginString: "^[\\t ]*([a-z][\\w_']*\\s*::.+?$)"
  keyString: "$1"
  bold: true
  italic: true
- beginString: "^[\\t ]*class\\s*([A-Z].*\\s+[a-z].*|\\([\\t ]*[A-Z].*[\\t ]+[a-z].*([\\t
    ]*,[\\t ]*[A-Z][\\w']*[\\t ]+[A-Z][\\w']*)*[\\t ]*\\))?[\\t ]*=>[\\t ]*[A-Z].*(where|$)"
  description: "class"
  underline: true
- beginString: "^[\\t ]*data[\\t ]+([A-Z][\\w']*)(?=[\\t ]*\\=)"
  keyString: "data $1"
  description: "data"
  bold: true
- beginString: "^[\\t ]*instance\\s*([A-Z].*\\s+[a-z].*|\\([\\t ]*[A-Z].*[\\t ]+[a-z].*([\\t
    ]*,[\\t ]*[A-Z][\\w']*[\\t ]+[A-Z][\\w']*)*[\\t ]*\\))?[\\t ]*=>[\\t ]*[A-Z].*(where|$)"
  description: "instance"
  underline: true
- beginString: "^[\\t ]*type[\\t ]+([A-Z][\\w']*)((?:[\\t ]+[a-z][\\w']*)*)(?=[Â¥t
    ]*\\=)"
  keyString: "type $1$2"
  description: "type"
  bold: true
comments: []
numbers:
- beginString: "\\b0o[0-7]+\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b0x[0-9a-f]+\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b\\d+\\.\\d+(e[-+]\\d+)?\\b"
  ignoreCase: true
  regularExpression: true
- beginString: "\\b\\d+\\b"
  regularExpression: true
commands:
- beginString: "abs"
- beginString: "acos"
- beginString: "acosh"
- beginString: "all"
- beginString: "and"
- beginString: "any"
- beginString: "appendFile"
- beginString: "asin"
- beginString: "asinh"
- beginString: "asTypeOf"
- beginString: "atan"
- beginString: "atan2"
- beginString: "atanh"
- beginString: "break"
- beginString: "catch"
- beginString: "ceiling"
- beginString: "compare"
- beginString: "concat"
- beginString: "concatMap"
- beginString: "const"
- beginString: "cos"
- beginString: "cosh"
- beginString: "curry"
- beginString: "cycle"
- beginString: "decodeFloat"
- beginString: "div"
- beginString: "divMod"
- beginString: "drop"
- beginString: "dropWhile"
- beginString: "either"
- beginString: "elem"
- beginString: "encodeFloat"
- beginString: "enumFrom"
- beginString: "enumFromThen"
- beginString: "enumFromThenTo"
- beginString: "enumFromTo"
- beginString: "error"
- beginString: "even"
- beginString: "exp"
- beginString: "exponent"
- beginString: "fail"
- beginString: "filter"
- beginString: "flip"
- beginString: "floatDigits"
- beginString: "floatRadix"
- beginString: "floatRange"
- beginString: "floor"
- beginString: "fmap"
- beginString: "foldl"
- beginString: "foldl1"
- beginString: "foldr"
- beginString: "foldr1"
- beginString: "fromEnum"
- beginString: "fromInteger"
- beginString: "fromIntegral"
- beginString: "fst"
- beginString: "gcd"
- beginString: "getChar"
- beginString: "getContents"
- beginString: "getLine"
- beginString: "id"
- beginString: "init"
- beginString: "interact"
- beginString: "ioError"
- beginString: "isDenormalized"
- beginString: "isIEEE"
- beginString: "isInfinite"
- beginString: "isNaN"
- beginString: "isNegativeZero"
- beginString: "iterate"
- beginString: "last"
- beginString: "lcm"
- beginString: "length"
- beginString: "lex"
- beginString: "lines"
- beginString: "log"
- beginString: "logBase"
- beginString: "lookup"
- beginString: "map"
- beginString: "mapM"
- beginString: "mapM_"
- beginString: "max"
- beginString: "maxBound"
- beginString: "maximum"
- beginString: "maybe"
- beginString: "min"
- beginString: "minBound"
- beginString: "minimum"
- beginString: "mod"
- beginString: "negate"
- beginString: "not"
- beginString: "notElem"
- beginString: "null"
- beginString: "odd"
- beginString: "or"
- beginString: "otherwise"
- beginString: "pi"
- beginString: "pred"
- beginString: "print"
- beginString: "product"
- beginString: "properFraction"
- beginString: "putChar"
- beginString: "putStr"
- beginString: "putStrLn"
- beginString: "quot"
- beginString: "quotRem"
- beginString: "read"
- beginString: "readFile"
- beginString: "readIO"
- beginString: "readList"
- beginString: "readLn"
- beginString: "readParen"
- beginString: "reads"
- beginString: "readsPrec"
- beginString: "realToFrac"
- beginString: "rem"
- beginString: "repeat"
- beginString: "replicate"
- beginString: "return"
- beginString: "reverse"
- beginString: "round"
- beginString: "scaleFloat"
- beginString: "scanl"
- beginString: "scanl1"
- beginString: "scanr"
- beginString: "scanr1"
- beginString: "seq"
- beginString: "sequence"
- beginString: "sequence_"
- beginString: "show"
- beginString: "showChar"
- beginString: "showList"
- beginString: "showParen"
- beginString: "showPrec"
- beginString: "shows"
- beginString: "showString"
- beginString: "significand"
- beginString: "signum"
- beginString: "sin"
- beginString: "sinh"
- beginString: "snd"
- beginString: "span"
- beginString: "splitAt"
- beginString: "sqrt"
- beginString: "subtract"
- beginString: "succ"
- beginString: "sum"
- beginString: "tail"
- beginString: "take"
- beginString: "takeWhile"
- beginString: "tan"
- beginString: "tanh"
- beginString: "toEnum"
- beginString: "toInteger"
- beginString: "toRational"
- beginString: "truncate"
- beginString: "uncurry"
- beginString: "undefined"
- beginString: "unlines"
- beginString: "until"
- beginString: "unwords"
- beginString: "unzip"
- beginString: "unzip3"
- beginString: "userError"
- beginString: "words"
- beginString: "writeFile"
- beginString: "zip"
- beginString: "zip3"
- beginString: "zipWith"
- beginString: "zipWith3"
values:
- beginString: "EQ"
- beginString: "False"
- beginString: "GT"
- beginString: "Just"
- beginString: "Left"
- beginString: "LT"
- beginString: "Nothing"
- beginString: "Right"
- beginString: "True"
keywords:
- beginString: "_"
- beginString: "as"
- beginString: "case"
- beginString: "class"
- beginString: "data"
- beginString: "default"
- beginString: "deriving"
- beginString: "do"
- beginString: "else"
- beginString: "forall"
- beginString: "foreign"
- beginString: "hiding"
- beginString: "if"
- beginString: "import"
- beginString: "in"
- beginString: "infix"
- beginString: "infixl"
- beginString: "infixr"
- beginString: "instance"
- beginString: "let"
- beginString: "mdo"
- beginString: "module"
- beginString: "newtype"
- beginString: "of"
- beginString: "proc"
- beginString: "qualified"
- beginString: "rec"
- beginString: "safe"
- beginString: "then"
- beginString: "type"
- beginString: "unsafe"
- beginString: "where"
attributes: []
strings:
- beginString: "\""
  endString: "\""
types:
- beginString: "\\b[A-Z][\\w_\\']*"
  regularExpression: true
- beginString: "Bool"
- beginString: "Bounded"
- beginString: "Char"
- beginString: "Double"
- beginString: "Either"
- beginString: "Enum"
- beginString: "Eq"
- beginString: "Float"
- beginString: "Floating"
- beginString: "Fractional"
- beginString: "Functor"
- beginString: "Int"
- beginString: "Integer"
- beginString: "Integral"
- beginString: "IO"
- beginString: "IOError"
- beginString: "Maybe"
- beginString: "Monad"
- beginString: "MonadPlus"
- beginString: "Num"
- beginString: "Ord"
- beginString: "Ordering"
- beginString: "Rational"
- beginString: "Read"
- beginString: "Real"
- beginString: "RealFloat"
- beginString: "RealFrac"
- beginString: "Show"
- beginString: "String"
commentDelimiters:
  endDelimiter: "-}"
  beginDelimiter: "{-"
  inlineDelimiter: "--"
characters:
- beginString: "'.'"
  regularExpression: true
- beginString: "'\\\\o[0-7]+'"
  regularExpression: true
- beginString: "'\\\\x[0-9a-fA-F]+'"
  regularExpression: true
- beginString: "'\\^[A-Z@\\[\\]\\^_]'"
  regularExpression: true
- beginString: "'\\ACK'"
- beginString: "'\\BEL'"
- beginString: "'\\BS'"
- beginString: "'\\CAN'"
- beginString: "'\\CR'"
- beginString: "'\\DC1'"
- beginString: "'\\DC2'"
- beginString: "'\\DC3'"
- beginString: "'\\DC4'"
- beginString: "'\\DEL'"
- beginString: "'\\DLE'"
- beginString: "'\\EM'"
- beginString: "'\\ENQ'"
- beginString: "'\\ESC'"
- beginString: "'\\ETB'"
- beginString: "'\\ETX'"
- beginString: "'\\FF'"
- beginString: "'\\FS'"
- beginString: "'\\GS'"
- beginString: "'\\HT'"
- beginString: "'\\LF'"
- beginString: "'\\NAK'"
- beginString: "'\\NUL'"
- beginString: "'\\RS'"
- beginString: "'\\SHO'"
- beginString: "'\\SI'"
- beginString: "'\\SO'"
- beginString: "'\\SP'"
- beginString: "'\\STX'"
- beginString: "'\\SUB'"
- beginString: "'\\SYN'"
- beginString: "'\\US'"
- beginString: "'\\VT'"
completions: []
